<CdrDoc Type='Filter' Id='CDR0000000154'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Miscellaneous Document Report Filter</DocTitle>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
  <xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                 version="1.0"
                 xmlns:cdr="cips.nci.nih.gov/cdr">
    <xsl:import    href = "cdr:name:InLine Markup Formatter"/>
 
   <xsl:output method="html"/>
   
<!-- ================================================================
      Filter to create a Miscellaneous QC Report
     ================================================================= -->
    
  <xsl:template match="/">

  <!--Filter written by C.Burg - 4/25/2002 -->
  <!-- Added import of InLine Markup Formatter 7/9/2002 -->
  
   <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
    <HTML>
    <xsl:variable name="cdrdocs" select="document('cdrx:/*/CdrCtl')"/>
<HEAD>
<TITLE><xsl:value-of select="document('cdrutil:/docid')"/>&#xa0;&#xa0;<xsl:value-of select="substring-before($cdrdocs/CdrDocCtl/DocTitle,';')"/></TITLE>
     
     
     <!--
     <LINK REL='stylesheet' 
           HREF='/stylesheets/protocol2.css' 
           TYPE='text/css' /> -->
      <STYLE>
        <!-- h3,h4 {color: Navy}-->
         li.lnone {list-style: none}
         <!-- p { +.4mm }-->
      </STYLE>

    </HEAD>
     <BASEFONT FACE='Arial, Helvetica, sans-serif' /> 
    <xsl:apply-templates select="MiscellaneousDocument"/>
    </HTML>
    </xsl:template>
  <!-- Generate the HTML Miscellaneous Document report"  -->
   <xsl:template match="MiscellaneousDocument">
    <BODY>

 <!-- ====================================================================
       Display Report heading and subheading
      ==================================================================== --> 
  
  <b><font size='4'><center>Miscellaneous Document<br />QC Report</center></font></b>
 <b><font size='3'><center><xsl:value-of select="document('cdrutil:/date/%25B %25#d, %25Y %25#I:%25M%25p')"/></center></font></b><br /><br />
<b><xsl:value-of select="document('cdrutil:/docid')"/></b><br />
<br />

<xsl:apply-templates/>
</BODY>
  </xsl:template>

  <!-- =================================================================
              Display the Document Title
       ================================================================== -->

             <xsl:template match="MiscellaneousDocumentTitle">

               <b><font size='4'>Title</font></b>
               <xsl:text>...................................</xsl:text>
               <xsl:apply-templates/><br /><br />
               </xsl:template>
     
 <!-- =================================================================
                               Display MetaData
       ================================================================== -->

             <xsl:template match="MiscellaneousDocumentMetadata">

               <b><font size='4'>Metadata</font></b><br />
                <b><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;Type</xsl:text></b>
                <xsl:text>..............................</xsl:text>
                <xsl:apply-templates select="MiscellaneousDocumentType"/><br />
               <b><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;Language</xsl:text></b>
               <xsl:text>......................</xsl:text>
                <xsl:apply-templates select="Language"/><br />
               <b><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;Audience</xsl:text></b>
               <xsl:text>.......................</xsl:text>
                <xsl:apply-templates select="Audience"/><br /><br />

               </xsl:template>
                
  <!-- ===================================================================
                 Display Paragraph text
       ================================================================== -->

  
               <xsl:template match="MiscellaneousDocumentText">
               <b><font size='4'>Text</font></b><br /><br /> 
               <xsl:apply-templates/>
               </xsl:template>

               <xsl:template match="Title">
               <b><xsl:value-of select="."/></b><br />
               </xsl:template>
             
               <xsl:template match="Para">
               <p><xsl:value-of select="."/></p>
               </xsl:template>

          

<!-- ====================================================================
                    Display a table-new format
      =================================================================== -->
             <xsl:template match="Table">
             <xsl:if test="Title">
                 <br />
             <b><xsl:apply-templates select="Title"/></b><br />
              </xsl:if>
              <table border='1' valign='top' cellspacing='0' cellpadding='0' width='90%'>
              <!-- <xsl:attribute name='border'>1</xsl:attribute>-->
              <xsl:for-each select="TGroup/THead/Row">
              <tr>
              <xsl:for-each select="entry">
              <th><xsl:apply-templates/></th>
              </xsl:for-each>
              </tr>
              </xsl:for-each>
              <xsl:for-each select="TGroup/TBody/Row">
              <tr>
              <xsl:for-each select='entry'>
              <xsl:variable name="cols" select="../../..@Cols"/>
              <xsl:if test="not(@NameEnd)"> 
              <td><xsl:apply-templates select="."/></td>
              </xsl:if>
              <xsl:if test="@NameEnd"> 
              
             <td colspan='{$cols}' width='80%'><xsl:apply-templates select="."/></td>
            </xsl:if>
       
            </xsl:for-each>
            </tr>
            </xsl:for-each>
            <xsl:for-each select="TGroup/TFoot/Row">
              <tr>
              <xsl:for-each select="entry">
               <xsl:variable name="cols" select="../../..@Cols"/>
              <td colspan='{$cols}' width='60%'><xsl:apply-templates/></td>
              </xsl:for-each>
              </tr>
              </xsl:for-each>
      
            </table>
            </xsl:template>


 <!-- ====================================================================
         Create an  External Reference
      ================================================================== -->

        <xsl:template match="ExternalRef">
        <u><xsl:apply-templates select="."/></u>
        </xsl:template>



   <!-- ===================================================================
                 Display DateLastModified
       ================================================================== -->

  
               <xsl:template match="DateLastModified">
               <br />
               <b><font size='4'>Date Last Modified</font></b>
                <xsl:text>.......................</xsl:text>
               <xsl:apply-templates/>
               </xsl:template>
               
 
  </xsl:transform>]]>
</CdrDocXml>
</CdrDoc>
