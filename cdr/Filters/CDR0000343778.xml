<CdrDoc Type='Filter' Id='CDR0000343778'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Person at Org - Person Location</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<!-- 
================================================================
Filter to create a Person Content QC Report 
================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "html"/>
 <xsl:param                       name = "location"/>

 <!-- Defining standard HTML Attribute Sets -->
 <xsl:attribute-set               name = "table">
  <xsl:attribute                  name = "border">0</xsl:attribute>
  <xsl:attribute                  name = "width">100%</xsl:attribute>
  <xsl:attribute                  name = "cellspacing">0</xsl:attribute>
  <xsl:attribute                  name = "cellpadding">0</xsl:attribute>
 </xsl:attribute-set>

 <xsl:attribute-set               name = "cell1of2">
  <xsl:attribute                  name = "width">35%</xsl:attribute>
  <xsl:attribute                  name = "valign">top</xsl:attribute>
 </xsl:attribute-set>

 <xsl:attribute-set               name = "cell2of2">
  <xsl:attribute                  name = "width">65%</xsl:attribute>
  <xsl:attribute                  name = "valign">top</xsl:attribute>
 </xsl:attribute-set>

 <xsl:variable                    name = "docID"
                                select = "document('cdrutil:/docid')"/>
 <!-- 
 ===============================================================
 Main Template
 Filter written by C.Burg - 4/26/2002
 =============================================================== -->
 <xsl:template                   match = "/">
   <xsl:apply-templates         select = "Person"/>
 </xsl:template>


 <!-- 
 ===================================================================
 Generate the HTML for the Person QC Report
 =================================================================== -->
 <xsl:template                   match = "Person">
   <!-- 
   ====================================================================
   Display Name Header, and PersonNameInformation
   ==================================================================== -->
   <xsl:apply-templates         select = "PersonNameInformation"/>

   <!-- 
   ======================================================================
   Display Location Information section
   ====================================================================== -->
   <xsl:apply-templates         select = "PersonLocations"/>
   <xsl:apply-templates         select = "DatedAction"/>
   <p/>
 </xsl:template>


 <!--
 =================================================================
 Template for PersonNameInformation
 ================================================================= -->
 <xsl:template                   match = "PersonNameInformation">
  <xsl:if                    test = "../Status/CurrentStatus='Inactive'">
   <xsl:text>Inactive - </xsl:text>
  </xsl:if>
  <b>
  <xsl:if                         test = "Prefix">
   <xsl:apply-templates         select = "Prefix"/>
   <xsl:text> </xsl:text>
  </xsl:if>
  <xsl:apply-templates          select = "GivenName"/>
  <xsl:text> </xsl:text>
  <xsl:apply-templates          select = "MiddleInitial"/>
  <xsl:text> </xsl:text>

  <!-- check for Professional suffix and display -->
  <xsl:choose>
   <xsl:when                      test = "ProfessionalSuffix">
    <xsl:apply-templates        select = "SurName"/>
    <xsl:text>,</xsl:text>
    <xsl:apply-templates        select = "GenerationSuffix"/>
    <xsl:text> </xsl:text>
    <xsl:for-each               select = "ProfessionalSuffix">
     <xsl:value-of              select = "."/>
     <xsl:if                      test = "position() !=last()">
      <xsl:text>, </xsl:text>
     </xsl:if>
    </xsl:for-each>
   </xsl:when>
   <xsl:otherwise>
   <!-- Display surname if no Suffix is present -->
    <xsl:apply-templates        select = "SurName"/>
   </xsl:otherwise>
  </xsl:choose>

  <xsl:text> (</xsl:text>
  <xsl:value-of                 select = "concat('CDR', 
                                           number(
                                           substring-after($docID, 'CDR')))"/>
  <xsl:text>)</xsl:text>

  </b>
  <br/>
 </xsl:template>


 <!-- 
 =====================================================================
 Template to display the Person Locations
 ===================================================================== -->
 <xsl:template                  match = "PersonLocations">
  <xsl:apply-templates         select = "Home
                                           [@cdr:id=$location]"/>
  <xsl:apply-templates         select = "PrivatePracticeLocation
                                           [@cdr:id=$location]"/>
  <xsl:apply-templates         select = "OtherPracticeLocation
                                           [@cdr:id=$location]"/>
 </xsl:template>


 <!-- 
 =====================================================================
 Display Person Location Information for Private Practice and 
 Home Location
 ===================================================================== -->
 <xsl:template                    match = "Home | 
                                           PrivatePracticeLocation"> 
  <b>
   <xsl:choose>
    <xsl:when                      test = "name() = 'Home'">
     <font size='3'>Home</font>
    </xsl:when>
    <xsl:otherwise>
     <font size='3'>Private Practice</font>
    </xsl:otherwise>
   </xsl:choose>
  </b>

  <xsl:if                          test = "../CIPSContact = @cdr:id">
   <b><font size="3"> - CIPS Contact</font></b>
  </xsl:if>
  <xsl:if                          test = "@PreviousLocation = 'Yes'">
   <b>
    <font size="3"> - Previous Location</font>
   </b>
  </xsl:if>
  <br/>

  <xsl:for-each                  select = "PostalAddress">
   <xsl:choose>
   <xsl:when                       test = "@Public">
    <table cellpadding="0" cellspacing="0">
     <tr>
      <td>
   <xsl:choose>
    <xsl:when                     test = "@native">
     <i>
      <xsl:call-template          name = "listAddress"/>
     </i>
    </xsl:when>
    <xsl:otherwise>
     <xsl:call-template           name = "listAddress"/>
    </xsl:otherwise>
   </xsl:choose>
      </td><td valign="center"><font size="10">&#125;</font></td>
      <td valign="center"><b><xsl:text> (Public = No)</xsl:text></b></td>
     </tr>
    </table>
   </xsl:when>
   <xsl:otherwise>
   <xsl:choose>
    <xsl:when                      test = "@native">
     <i>
      <xsl:call-template           name = "listAddress"/>
     </i>
    </xsl:when>
    <xsl:otherwise>
     <xsl:call-template            name = "listAddress"/>
    </xsl:otherwise>
   </xsl:choose>
   </xsl:otherwise>
   </xsl:choose>
   <xsl:call-template              name = "listPhone"/>
  </xsl:for-each>
  <br />
 </xsl:template>


 <!-- 
 =====================================================================
 Display Person Location Information for Other Practice Location 
 ===================================================================== -->
 <xsl:template                 match = "OtherPracticeLocation">
  <b>
   <font size='3'>Other Practice Location</font>
  </b>
 
  <xsl:if                       test = "../CIPSContact = @cdr:id">
   <b>
    <font size="3"> - CIPS Contact</font>
   </b>
  </xsl:if>
  <xsl:if                       test = "@PreviousLocation = 'Yes'">
   <b>
    <font size="3"> - Previous Location</font>
   </b>
  </xsl:if>
  <br/>

  <!-- Display the Person Title if available -->
  <xsl:if                     test = "PersonTitle">
   <xsl:value-of            select = "PersonTitle"/>
   <br/>
  </xsl:if>

  <xsl:for-each             select = "OrganizationLocation/OrganizationName">
   <xsl:value-of            select = "."/>
   <br />
  </xsl:for-each>

  <xsl:for-each               select = "OrganizationLocation/
                                        PostalAddress">
   <xsl:choose>
   <xsl:when                       test = "@Public">
    <table cellpadding="0" cellspacing="0">
     <tr>
      <td>
   <xsl:choose>
    <xsl:when                      test = "@native">
     <i>
      <xsl:call-template              name = "listAddress"/>
     </i>
    </xsl:when>
    <xsl:otherwise>
     <xsl:call-template              name = "listAddress"/>
    </xsl:otherwise>
   </xsl:choose>
      </td><td valign="center"><font size="10">&#125;</font></td>
      <td valign="center"><b><xsl:text> (Public = No)</xsl:text></b></td>
     </tr>
    </table>
   </xsl:when>
   <xsl:otherwise>
   <xsl:choose>
    <xsl:when                      test = "@native">
     <i>
      <xsl:call-template              name = "listAddress"/>
     </i>
    </xsl:when>
    <xsl:otherwise>
     <xsl:call-template              name = "listAddress"/>
    </xsl:otherwise>
   </xsl:choose>
   </xsl:otherwise>
   </xsl:choose>
   <xsl:call-template           name = "listPhone"/>
  </xsl:for-each>

  <br/>
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                  name = "listAddress">
  <xsl:for-each               select = "Street">
   <xsl:value-of              select = "."/>
   <br/>
  </xsl:for-each>
  <xsl:choose>
   <xsl:when                    test = "PostalCodePosition = 'before City'">
    <xsl:value-of             select = "PostalCode_ZIP"/>
    <xsl:text> </xsl:text>
    <xsl:value-of             select = "City"/>
    <xsl:if                     test = "CitySuffix">
     <xsl:text> </xsl:text>
     <xsl:value-of            select = "CitySuffix"/>
    </xsl:if>
   </xsl:when>
   <xsl:when                    test = "PostalCodePosition = 'after City'">
    <xsl:value-of             select = "City"/>
    <xsl:if                     test = "CitySuffix">
     <xsl:text> </xsl:text>
     <xsl:value-of            select = "CitySuffix"/>
    </xsl:if>
    <xsl:text> </xsl:text>
    <xsl:value-of             select = "PostalCode_ZIP"/>
   </xsl:when>
   <!-- 
   This section is for US addresses
   =================================================================== -->
   <xsl:when                    test = "PostalCodePosition = 
                                         'after PoliticalSubUnit_State'">
    <xsl:value-of             select = "City"/>
    <xsl:if                     test = "CitySuffix">
     <xsl:text> </xsl:text>
     <xsl:value-of            select = "CitySuffix"/>
    </xsl:if>
    <xsl:text>, </xsl:text>
    <xsl:value-of             select = "PoliticalSubUnitShortName"/>
    <xsl:text> </xsl:text>
    <xsl:value-of             select = "PostalCode_ZIP"/>
   </xsl:when>
  </xsl:choose>
  <br/>
  <xsl:value-of               select = "CountryName"/>
  <br/><br/>
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Phone, Fax, WebSite, Role information
 ======================================================================== -->
 <xsl:template                  name = "listPhone">
  <!--
  Display the Phone, Fax, Email, etc. in a table format
  ========================================================== -->
  <table      xsl:use-attribute-sets = "table">
   <tr> 
    <td       xsl:use-attribute-sets = "cell1of2">
     <xsl:choose>
      <xsl:when                 test = "../Phone/@native">
       <i><xsl:text>Phone</xsl:text></i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:text>Phone</xsl:text>
      </xsl:otherwise>
     </xsl:choose>
    </td>
    <td       xsl:use-attribute-sets = "cell2of2">
     <xsl:choose>
      <xsl:when                 test = "../Phone/@native">
       <i>
        <xsl:value-of         select = "../Phone"/>
        <xsl:if                test = "../Phone/@Public">
         <b>
          <xsl:text> (Public = No)</xsl:text>
         </b>
        </xsl:if>
       </i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:value-of          select = "../Phone"/>
       <xsl:if                  test = "../Phone/@Public">
        <b>
         <xsl:text> (Public = No)</xsl:text>
        </b>
       </xsl:if>
      </xsl:otherwise>
     </xsl:choose>
    </td>
   </tr>
<!-- 
   <tr>
    <td>
     <xsl:choose>
      <xsl:when                 test = "../TollFreePhone/@native">
       <i><xsl:text>TollFreePhone</xsl:text></i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:text>TollFreePhone</xsl:text>
      </xsl:otherwise>
     </xsl:choose>
    </td>
    <td       xsl:use-attribute-sets = "cell2of2">
     <xsl:choose>
      <xsl:when                 test = "../TollFreePhone/@native">
       <i>
        <xsl:value-of         select = "../TollFreePhone"/>
       </i>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of         select = "../TollFreePhone"/>
      </xsl:otherwise>
     </xsl:choose>
    </td>
   </tr>
-->
   <tr>
    <td       xsl:use-attribute-sets = "cell1of2">
     <xsl:choose>
      <xsl:when                 test = "../Fax/@native">
       <i>
        <xsl:text>Fax</xsl:text>
       </i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:text>Fax</xsl:text>
      </xsl:otherwise>
     </xsl:choose>      
    </td>
    <td       xsl:use-attribute-sets = "cell2of2">
     <xsl:choose>
      <xsl:when                 test = "../Fax/@native">
       <i>
        <xsl:value-of            select = "../Fax"/>
       </i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:value-of            select = "../Fax"/>
      </xsl:otherwise>
     </xsl:choose>      
    </td>
   </tr>
    <tr>
     <td       xsl:use-attribute-sets = "cell1of2">Email</td>
     <xsl:choose>
      <xsl:when                 test = "../Email">
       <td    xsl:use-attribute-sets = "cell2of2">
        <xsl:call-template      name = "listEmail">
         <xsl:with-param        name = "email"
                              select = "../Email"/>
        </xsl:call-template>
        <xsl:if                 test = "../Email/@Public">
         <b>
         <xsl:text> (Public = No)</xsl:text>
         </b>
        </xsl:if>
       </td>
      </xsl:when>
     </xsl:choose>
    </tr>
<!-- 
    <tr>
     <td      xsl:use-attribute-sets = "cell1of2">
      <xsl:choose>
       <xsl:when                test = "../WebSite/@native">
        <i>
         <xsl:text>Website</xsl:text>
        </i>
       </xsl:when>
       <xsl:otherwise>
         <xsl:text>Website</xsl:text>
       </xsl:otherwise>
      </xsl:choose>
     </td>
     <xsl:choose>
      <xsl:when                 test = "../WebSite">
       <td    xsl:use-attribute-sets = "cell2of2">
        <xsl:choose>
         <xsl:when              test = "../WebSite/@native">
          <i>
           <xsl:call-template      name = "listWebSite">
            <xsl:with-param        name = "webSite"
                              select = "../WebSite/@xref"/>
           </xsl:call-template>
           <br/>
           <xsl:value-of         select = "../WebSite"/>
          </i>
         </xsl:when>
         <xsl:otherwise>
           <xsl:call-template      name = "listWebSite">
            <xsl:with-param        name = "webSite"
                              select = "../WebSite/@xref"/>
           </xsl:call-template>
           <br/>
           <xsl:value-of         select = "../WebSite"/>
         </xsl:otherwise>
        </xsl:choose>
       </td>
      </xsl:when>
     </xsl:choose>
    </tr>
    <xsl:if                        test = "../../PersonRole">
     <tr>
      <td        xsl:use-attribute-sets = "cell1of2">
       <xsl:text>Person Role</xsl:text>
      </td>
      <td        xsl:use-attribute-sets = "cell2of2">
       <table    xsl:use-attribute-sets = "table">
        <xsl:for-each            select = "../../PersonRole">
         <tr>
          <td    xsl:use-attribute-sets = "cell1of2">
           <xsl:value-of         select = "."/>
          </td>
         </tr>
        </xsl:for-each>
       </table>
      </td>
     </tr>
    </xsl:if>
   <br/>
-->
  </table>
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Email information
 ======================================================================== -->
 <xsl:template                 name = "listEmail">
  <xsl:param                   name = "email"/>

  <xsl:element         name = "a">
   <xsl:attribute      name = "href">
    <xsl:text>mailto:</xsl:text>
    <xsl:value-of    select = "$email"/>
   </xsl:attribute>
    <xsl:value-of    select = "$email"/>
  </xsl:element>

 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Website information
 ======================================================================== -->
 <xsl:template                 name = "listWebSite">
  <xsl:param                   name = "webSite"/>

  <xsl:element         name = "a">
   <xsl:attribute      name = "href">
    <xsl:choose>
     <xsl:when         test = "contains($webSite, 'http://')">
      <xsl:value-of  select = "$webSite"/>
     </xsl:when>
     <xsl:otherwise>
      <xsl:text>http://</xsl:text>
      <xsl:value-of  select = "substring-after($webSite, 'http://')"/>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:attribute>
   <xsl:attribute      name = "target">
    <xsl:text>new</xsl:text>
   </xsl:attribute>

   <xsl:value-of    select = "$webSite"/>
  </xsl:element>

 </xsl:template>
</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>