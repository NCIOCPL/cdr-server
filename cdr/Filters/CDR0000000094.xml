<?xml version="1.0"?>
  <xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                 version="1.0"
                 xmlns:cdr="cips.nci.nih.gov/cdr">
   
<xsl:output method="html"/>
   <xsl:template match="/">
       <!--Filter written by C.Burg - 9/25/2001 -->
  <!-- This program is a filter to create a Person
       Content QC Report -->
      
   <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
    <HTML>
    <HEAD>
    <TITLE>Person Content QC Report</TITLE>
     <!--
     <LINK REL='stylesheet' 
           HREF='/stylesheets/protocol2.css' 
           TYPE='text/css' /> -->
    </HEAD>
     <BASEFONT FACE="Arial, Helvetica, sans-serif"/>
    <xsl:apply-templates select="Person"/>
    
    </HTML>
    </xsl:template>
  <!-- Generate the HTML for the Person QC Report-->
  <xsl:template match="Person">
    <BODY>
    <!--Display Report heading and subheading 
  <b><font size='4'><left>Person Content<br />
      QC Report</left></font></b><br />-->
<!-- Display report title -->
 <b><font size="4"><xsl:text>Person QC Report</xsl:text></font></b><br/><br/>
<!-- Display name header -->
 <b><font size="4"><xsl:text>Name</xsl:text></font></b><br/><br/>
 <xsl:apply-templates select="PersonNameInformation/SurName"/><br/><br/>
  <!--<xsl:text>&#xa0;</xsl:text>-->
<!--test for generation suffix and display if present 
   <xsl:if test="PersonNameInformaton/GenerationSuffix">
   <xsl:for-each select="PersonNameInformation/GenerationSuffix">
   <xsl:value-of select="."/>
   <xsl:text>&#xa0;</xsl:text>
   </xsl:for-each>
   </xsl:if>-->
<b><font size="3"><xsl:text>Private Practice</xsl:text></font></b><br/><br/>
  
 <xsl:if test="PersonLocations">
 <xsl:for-each select="PersonLocations">
    <xsl:variable name="Cipscontact" select="CIPSContact"/>
   <!-- <xsl:value-of select="$Cipscontact"/>-->
    <xsl:if test="PrivatePractice[@cdr:id='$Cipscontact']">
   <b><font size='3'>CIPS Contact</font></b>
   </xsl:if>
     <xsl:if test="OtherPracticeLocation[@cdr:id='$Cipscontact']">
   <b><font size='3'>CIPS Contact</font></b>
   </xsl:if>
    
   <!-- <xsl:if test="$Cipscontact">
    <b><font size='3'>CIPS Contact</font></b><br />
     </xsl:if>-->
    </xsl:for-each>
    </xsl:if>
 <xsl:for-each select="PersonLocations/PrivatePractice/PostalAddress/Street">
  <xsl:variable name="Contact" select="../../../CIPSContact"/>
 <xsl:if test="../../@cdr:id=$Contact">
 <b><font size='3'>CIPS Contact</font></b><br />
  </xsl:if>
 
    <xsl:value-of select="."/><br/>
    </xsl:for-each>
    <xsl:for-each select="PersonLocations/PrivatePractice/PostalAddress">
    <xsl:value-of select="City"/>,&#xA0;
    </xsl:for-each>
   
   <xsl:for-each select="PersonLocations/PrivatePractice/PostalAddress">
     <xsl:choose>
    <xsl:when test="contains(PoliticalUnit_State/@cdr:ref,'CDR')">
   <xsl:variable name="StateID" select="PoliticalUnit_State/@cdr:ref"/>
    <xsl:variable name="StateInfo" select="document(concat('cdr:',$StateID))"/>
    <xsl:variable name="stateid" select="substring-after(PoliticalUnit_State/@cdr:ref,'#')"/>
   <!-- <xsl:value-of select="$stateid"/>-->
    <xsl:if test="$StateInfo/GeographicEntity/PoliticalUnit[@cdr:id=$stateid]/PoliticalUnitFullName">
 <!--  <xsl:text>,&#xa0;</xsl:text>-->
    <xsl:apply-templates select="$StateInfo/GeographicEntity/PoliticalUnit[@cdr:id=$stateid]/PoliticalUnitFullName"/>
    <xsl:text>&#xA0;&#xA0;</xsl:text>
    </xsl:if>
   <xsl:value-of select="PostalCode_ZIP"/><br/>
        
    <xsl:if test="$StateInfo/GeographicEntity/CountryFullName">
    <xsl:apply-templates select="$StateInfo/GeographicEntity/CountryFullName"/>
    <xsl:text>&#xA0;&#xA0;</xsl:text>
    </xsl:if>
   </xsl:when>
   <xsl:otherwise>
   <xsl:value-of select="$StateID"/>
    <xsl:text>not available in database</xsl:text>
    </xsl:otherwise>
    </xsl:choose>
    </xsl:for-each>
    <br/>
   <xsl:if test="PersonLocations/PrivatePractice/Email">
    <b><font size="3">Email: </font></b>
    <xsl:apply-templates select="PersonLocations/PrivatePractice/Email"/>
    </xsl:if>
    <br/><br/>
   <xsl:if test="PersonLocations/OtherPracticeLocation">
   <b><font size="3">Other Practice Locations</font></b><br/><br/>
    </xsl:if>
<!-- <xsl:if test="PersonLocations/OtherPracticeLocation[@cdr:id='_1']">
     <b><font size='3'>CIPS Contact</font></b><br /><br />
    </xsl:if>-->
    
  <xsl:for-each select="PersonLocations/OtherPracticeLocation/OrganizationLocation">
 <xsl:variable name="Contact" select="../../CIPSContact"/>
 <xsl:if test="../@cdr:id=$Contact">
 <b><font size='3'>CIPS Contact</font></b><br />
  </xsl:if>
 <xsl:value-of select="substring-before(.,';')"/><br/>
 <!--</xsl:for-each>-->
    <xsl:choose>
    <xsl:when test="contains(@cdr:ref,'CDR')">
   <xsl:variable name="OrgID" select="@cdr:ref"/>
    <xsl:variable name="OrgInfo" select="document(concat('cdr:',$OrgID))"/>
    <xsl:variable name="orgid" select="substring-after(@cdr:ref,'#')"/>
    <xsl:if test="$OrgInfo/Organization/OrganizationLocations/Location[@cdr:id=$orgid]">
 <!-- <xsl:text>,&#xa0;</xsl:text>-->
    <xsl:for-each select="$OrgInfo/Organization/OrganizationLocations/Location[@cdr:id=$orgid]/PostalAddress">
    <xsl:value-of select="Street"/><br/>
    <xsl:value-of select="City"/>,
      <xsl:choose>
    <xsl:when test="contains(PoliticalUnit_State/@cdr:ref,'CDR')">
   <xsl:variable name="StateID" select="PoliticalUnit_State/@cdr:ref"/>
    <xsl:variable name="StateInfo" select="document(concat('cdr:',$StateID))"/>
    <xsl:variable name="stateid" select="substring-after(PoliticalUnit_State/@cdr:ref,'#_')"/>
   <!-- <xsl:value-of select="$stateid"/>-->
    <xsl:if test="$StateInfo/GeographicEntity/PoliticalUnit[@cdr:id=$stateid]/PoliticalUnitFullName">
    <xsl:text>&#xa0;</xsl:text>
    <xsl:apply-templates select="$StateInfo/GeographicEntity/PoliticalUnit[@cdr:id=$stateid]/PoliticalUnitFullName"/>&#xa0;
 <xsl:value-of select="PostalCode_ZIP"/><br />
   <xsl:variable name="Countryname" select="$StateInfo/GeographicEntity/CountryFullName"/>
  <xsl:value-of select="$Countryname"/><br />
  <!--  <xsl:text>&#xa0;&#xa0;</xsl:text>-->
    </xsl:if>
    </xsl:when>
    <xsl:otherwise>
    </xsl:otherwise>
    </xsl:choose>
  <!--  <xsl:value-of select="PostalCode_ZIP"/><br />-->
      <!--   <xsl:if test="$StateInfo/GeographicEntity/CountryFullName">
     <xsl:apply-templates select="$StateInfo/GeographicEntity/CountryFullName"/><br />
   </xsl:if>-->
  </xsl:for-each>
  </xsl:if>
 </xsl:when>
   <xsl:otherwise>
 <!--  <xsl:value-of select="$StateID"/>
    <xsl:text>not available in database</xsl:text>-->
    </xsl:otherwise>
    </xsl:choose>
   <xsl:if test="PersonLocations/PrivatePractice/Email">
    <b><font size="3">Email: </font></b>
    <xsl:apply-templates select="PersonLocations/PrivatePractice/Email"/><br />
    </xsl:if>
   
    <xsl:if test="../PersonRole">
    <b><font size='3'>Role: </font></b>
     <xsl:apply-templates select="../PersonRole"/><br /><br />
     </xsl:if>
    </xsl:for-each>
  
    <!--</xsl:if>-->
    
    <xsl:if test="Status/CurrentStatus">
    <b><font size='3'>Status:</font></b>
    <xsl:apply-templates select="Status/CurrentStatus"/><br />
    <b><font size='3'>Comment:</font></b>
    <xsl:apply-templates select="Status/Comment"/>
    </xsl:if>
    </BODY>

   </xsl:template>
  </xsl:transform>