<CdrDoc Type='Filter' Id='CDR0000000050'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Organization QC Report Filter</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml      version = "1.0"?>
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "html"/>

 <xsl:include   href = "cdr:name:Module: STYLE Default"/> 

 <!-- Defining standard HTML Attribute Sets -->
 <xsl:attribute-set               name = "table">
  <xsl:attribute                  name = "border">0</xsl:attribute>
  <xsl:attribute                  name = "width">100%</xsl:attribute>
  <xsl:attribute                  name = "cellspacing">0</xsl:attribute>
  <xsl:attribute                  name = "cellpadding">0</xsl:attribute>
 </xsl:attribute-set>

 <xsl:attribute-set               name = "cell1of2">
  <xsl:attribute                  name = "width">35%</xsl:attribute>
  <xsl:attribute                  name = "valign">top</xsl:attribute>
 </xsl:attribute-set>

 <xsl:attribute-set               name = "cell2of2">
  <xsl:attribute                  name = "width">65%</xsl:attribute>
  <xsl:attribute                  name = "valign">top</xsl:attribute>
 </xsl:attribute-set>

 <xsl:attribute-set               name = "mcell1of2">
  <xsl:attribute                  name = "width">30%</xsl:attribute>
  <xsl:attribute                  name = "valign">top</xsl:attribute>
 </xsl:attribute-set>

 <xsl:attribute-set               name = "mcell2of2">
  <xsl:attribute                  name = "width">70%</xsl:attribute>
  <xsl:attribute                  name = "valign">top</xsl:attribute>
 </xsl:attribute-set>

 <xsl:variable                    name = "docID"
                                select = "document('cdrutil:/docid')"/>

   <!--Filter written by C.Burg - 9/25/2001 -->
   <!-- minor format changes 7/10/2002 -->
   <!-- more minor changes - 6/2003 - Nanci (to work w/new denorm filters) -->
   <!-- more minor changes - 6/16/2003 - Nanci (added tables) -->
   <!-- added space after CDRID - 8/7/2003 - Nanci -->
   <!-- added Website element content - 8/18/2003 - Nanci -->

   <!-- =========================================================
          This program is a filter to create an Organization
          Content QC Report 
        =========================================================-->
 <xsl:template                   match = "/">
  <xsl:text disable-output-escaping="yes">&lt;!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /&gt;</xsl:text>
  <HTML>
   <HEAD>
    <xsl:variable                 name = "cdrdocs" 
                                select = "document('cdrx:/*/CdrCtl')"/>
    <TITLE>
     <xsl:value-of              select = "concat('CDR', 
                                           number(
                                           substring-after($docID, 'CDR')))"/>
     <xsl:text>: </xsl:text>
     <xsl:value-of              select = "substring-before(
                                           concat($cdrdocs/CdrDocCtl/
                                                  DocTitle, ';'), ';')"/> 
    </TITLE>
    <STYLE type='text/css'>
     <xsl:call-template           name = "defaultStyle"/>  
     ul {margin-left: 16 ; padding-left: 0;}
    </STYLE>
   </HEAD>
   <BASEFONT                      FACE = 'Arial, Helvetica, sans-serif' />
   <xsl:apply-templates         select = "Organization"/>
  </HTML>
 </xsl:template>


 <!-- 
 ===================================================================
 Generate the HTML for the Organization QC Report
 =================================================================== -->
 <xsl:template                   match = "Organization">
  <BODY>

  <!-- 
  ==================================================================
  Display Report heading and subheading 
  ================================================================== -->
  <b>
   <font size='4'>
    <center>
     <xsl:text>Organization</xsl:text>
     <br/>
     <xsl:text>QC Report</xsl:text>
    </center>
   </font>
   <font size='3'>
    <center>
     <xsl:value-of              select = "document('cdrutil:/date/%25B %25#d, %25Y %25#I:%25M% 25p')"/>
    </center>
   </font>
  </b>
  <p/>

  <!-- 
  ====================================================================
  Display CDR ID
  ==================================================================== -->
  <b>
   <font size='4'>
    <xsl:value-of               select = "concat('CDR', 
                                           number(
                                           substring-after($docID, 'CDR')))"/>
   </font>
  </b>
  <p/>

  <!--
  ===============================================================
  Display Name Information
  =============================================================== -->
  <b>
   <font size='4'><xsl:text>Name</xsl:text></font>
  </b>
  <br />
  <xsl:apply-templates          select = "OrganizationNameInformation"/>

  <!--
  ===============================================================
  Display Parent Information
  =============================================================== -->
  <xsl:if                         test = "OrganizationParent">
   <b>
    <font size='4'>Parent Organization</font>
   </b>
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Name</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:for-each             select = "OrganizationParent">
       <xsl:apply-templates     select = "."/>
      </xsl:for-each>
     </td>
    </tr>
   </table>
   <p/>
  </xsl:if>

  <!-- 
  ==============================================================
  Display Administrative Information 
  ============================================================== -->
  <b>
   <font size='4'>Administrative Information</font>
  </b>
  <xsl:apply-templates          select = "OrganizationDetails"/>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Current Status</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "Status/CurrentStatus"/>
    </td>
   </tr>
  </table>

  <xsl:if                         test = "OrganizationType">
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Organization Type</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <table    xsl:use-attribute-sets = "table">
       <xsl:for-each            select = "OrganizationType">
        <tr>
         <td>
          <xsl:value-of         select = "."/>
          <xsl:if                 test = "@Public">
           <b> (Public = No)</b>
          </xsl:if>
         </td>
        </tr>
       </xsl:for-each>
      </table>
     </td>
    </tr>
   </table>
  </xsl:if>

  <xsl:if                         test = "ProtocolIDAcronym">
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Protocol ID Acronym</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <table    xsl:use-attribute-sets = "table">
       <xsl:for-each            select = "ProtocolIDAcronym">
        <tr>
         <td>
          <xsl:value-of         select = "."/>
         </td>
        </tr>
       </xsl:for-each>
      </table>
     </td>
    </tr>
   </table>
  </xsl:if>

  <xsl:if                         test = "PreferredProtocolOrganization">
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Preferred Protocol Organization</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <table    xsl:use-attribute-sets = "table">
       <xsl:for-each            select = "PreferredProtocolOrganization">
        <tr>
         <td>
          <xsl:value-of         select = "substring-before(
                                           concat(., ';'), ';')"/>
          <xsl:text> (CDR</xsl:text>
          <xsl:value-of         select = "number(
                                           substring-after(@cdr:ref, 'CDR'))"/>
          <xsl:text>)</xsl:text>
         </td>
        </tr>
       </xsl:for-each>
      </table>
     </td>
    </tr>
   </table>
  </xsl:if>

  <p/>

  <!--
  ====================================================================
  Display Locations and Affiliations information
  ==================================================================== -->
  <xsl:apply-templates          select = "OrganizationLocations"/>
  <xsl:apply-templates          select = "OrganizationAffiliations"/>

  <hr/>
  <b>
   <font size='4'>Record Information</font>
  </b>
  <br />
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Date created</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "substring-before(CdrDocCtl/Create/
                                                           Date, 'T')"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>User</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "CdrDocCtl/Create/User"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Date Modfied</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "substring-before(CdrDocCtl/Modify/
                                                           Date,'T')"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>User</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "CdrDocCtl/Modify/User"/>
    </td>
   </tr>
  </table>
  <p/>

  <xsl:apply-templates          select = "DatedAction"/>
   
  <!-- 
  =================================================================
  Display most recent Mailer Information
  ================================================================= -->
  <b>
   <font size='4'>Most Recent Mailer</font>
  </b>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
      <b><font size='3'>Date Sent</font></b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@MAILER_DATE_SENT@@</xsl:text>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Date Received</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@MAILER_RESPONSE_RECEIVED@@</xsl:text>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Type of Change</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@MAILER_TYPE_OF_CHANGE@@</xsl:text>
    </td>
   </tr>
  </table>
  <p/>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>In External_Map Table</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@IN_EXTERNAL_MAP_TABLE@@</xsl:text>
    </td>
   </tr>
  </table>
  <p/>

  </BODY>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Names
 ======================================================================= -->
 <xsl:template                   match = "OrganizationNameInformation">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Official Name</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "OfficialName/Name"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Short Name</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "ShortName"/>
    </td>
   </tr>
   <xsl:if                        test = "AlternateName">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Alternate Name</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <table    xsl:use-attribute-sets = "table">
       <xsl:for-each            select = "AlternateName">
        <tr>
         <td    xsl:use-attribute-sets = "cell1of2">
          <xsl:apply-templates  select = "."/>
         </td>
        </tr>
       </xsl:for-each>
      </table>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "FormerName">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Former Name</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <table    xsl:use-attribute-sets = "table">
       <xsl:for-each            select = "FormerName">
        <tr>
         <td    xsl:use-attribute-sets = "cell1of2">
          <xsl:apply-templates  select = "."/>
         </td>
        </tr>
       </xsl:for-each>
      </table>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "Comment">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Comment</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:apply-templates      select = "Comment"/>
     </td>
    </tr>
   </xsl:if>
  </table>
  <p/>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Details Information
 ======================================================================= -->
 <xsl:template                   match = "OrganizationDetails">
  <xsl:apply-templates          select = "CIPSContactPerson"/>
  <xsl:apply-templates          select="OrganizationAdministrativeInformation"/>
  <xsl:apply-templates          select = "PreferredProtocolContactMode"/>
  <xsl:apply-templates          select = "Comment"
                                  mode = "orgDetails"/>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Details Information
 ======================================================================= -->
 <xsl:template                   match = "CIPSContactPerson">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>CIPS Contact Person</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <table     xsl:use-attribute-sets = "table">
      <xsl:for-each             select = "Person/
                                          PersonNameInformation">
       <tr>
        <td>
         <xsl:value-of          select = "GivenName"/>
         <xsl:text> </xsl:text>
         <xsl:value-of          select = "SurName"/>
         <xsl:text> (CDR</xsl:text>
         <xsl:value-of          select = "number(
                                          substring-after(../@cdr:ref, 
                                                                 'CDR'))"/>
         <xsl:text>)</xsl:text>

        </td>
       </tr>
      </xsl:for-each>
     </table>
    </td>
   </tr>
  </table>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Details Information
 ======================================================================= -->
 <xsl:template                  match = "OrganizationAdministrativeInformation">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Directory Type</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "@Directory"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Directory Include</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:choose>
      <xsl:when                   test = "IncludeInDirectory = 'Include'">
       <xsl:text>Yes</xsl:text>
      </xsl:when>
      <xsl:otherwise>
       <xsl:text>No</xsl:text>
      </xsl:otherwise>
     </xsl:choose>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Date</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "Date"/>
    </td>
   </tr>
   <xsl:if                        test = "PreferredDirectoryContactMode">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Preferred Directory Contact</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "PreferredDirectoryContactMode"/>
     </td>
    </tr>
   </xsl:if>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Comment</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "Comment"/>
    </td>
   </tr>
  </table>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Locations Information
 ======================================================================= -->
 <xsl:template                   match = "PreferredProtocolContactMode">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Preferred Protocol Contact</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "."/>
    </td>
   </tr>
  </table>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Locations Information
 ======================================================================= -->
 <xsl:template                   match = "Comment"
                                  mode = "orgDetails">
  <p/>
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Details Comment</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "."/>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Locations Information
 ======================================================================= -->
 <xsl:template                   match = "OrganizationLocations">
  <b>
   <font size='4'>Location Information</font>
  </b>
  <p/>
  <xsl:apply-templates          select = "OrganizationLocation"/>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Location Information
 ======================================================================= -->
 <xsl:template                   match = "OrganizationLocation">
  <b>Organization Location</b>

  <xsl:if                         test = "../CIPSContact = @cdr:id">
   <b>
    <xsl:text> - CIPS Contact</xsl:text>
   </b>
  </xsl:if>
  <br />
  <xsl:for-each                 select = "OrganizationName">
    <xsl:value-of               select = "."/>
    <br/>
  </xsl:for-each>

  <xsl:for-each                 select = "PostalAddress">
   <xsl:choose>
   <xsl:when                      test = "@Public">
    <table cellpadding="0" cellspacing="0">
     <tr>
      <td>
       <xsl:choose>
        <xsl:when                 test = "@native">
         <i>
          <xsl:call-template      name = "listAddress"/>
         </i>
        </xsl:when>
        <xsl:otherwise>
         <xsl:call-template       name = "listAddress"/>
        </xsl:otherwise>
       </xsl:choose>
      </td>
      <td valign="center">
       <font size="10"> </font>
      </td>
      <td valign="center">
       <b>
        <xsl:text> (Public = No)</xsl:text>
       </b>
      </td>
     </tr>
    </table>
   </xsl:when>
   <xsl:otherwise>
   <xsl:choose>
    <xsl:when                     test = "@native">
     <i>
      <xsl:call-template          name = "listAddress"/>
     </i>
    </xsl:when>
    <xsl:otherwise>
     <xsl:call-template           name = "listAddress"/>
    </xsl:otherwise>
   </xsl:choose>
   </xsl:otherwise>
   </xsl:choose>
   <xsl:call-template             name = "listPhone"/>
  </xsl:for-each>
  <br />
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Affiliations Information
 ======================================================================= -->
 <xsl:template                   match = "OrganizationAffiliations">
  <b>
   <font size='4'>Organization Affiliations</font>
  </b>
  <br />
  <xsl:apply-templates          select = "MemberOfProfessionalOrganization[1] |
                                          MemberOfCooperativeGroups           |
                                          MemberOfCCOP                        |
                                          MemberOfAdHocGroup                  |
                                          ResearchBaseFor[1]"/>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Membership Information
 ======================================================================= -->
 <xsl:template                   match = "MemberOfProfessionalOrganization">
  <b>
   <u>Professional Organization Membership</u>
  </b>
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2"> </td>
    <td>
     <table>
      <tr>
       <td      xsl:use-attribute-sets = "cell2of2">
        <ul>
         <xsl:for-each          select = "../MemberOfProfessionalOrganization"> 
          <li>
           <xsl:value-of        select = "."/>
          </li>
         </xsl:for-each>
        </ul>
       </td>
      </tr>
     </table>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                   match = "MemberOfCooperativeGroups">
  <b>
   <u>Cooperative Group Membership</u>
  </b>

  <xsl:apply-templates          select = "MainMemberOf |
                                          AffiliateMemberOf"/>

 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                   match = "MainMemberOf">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Main Member of</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "CooperativeGroup/Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Protocol Participation</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "ProtocolParticipation"/>
    </td>
   </tr>
  </table>
  <p/> 
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                   match = "AffiliateMemberOf">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Affiliate Member of</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "CooperativeGroup/Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Main Member</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "MainMember/Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Protocol Participation</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "ProtocolParticipation"/>
    </td>
   </tr>
  </table>
  <p/> 
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                   match = "MemberOfCCOP">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>
      <u>CCOP Group Membership</u>
     </b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <table     xsl:use-attribute-sets = "table">
      <tr>
       <ul>
        <xsl:for-each           select = "CCOP/Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name">
         <li>
          <xsl:value-of         select = "."/>
         </li>
        </xsl:for-each>
       </ul>
      </tr>
     </table>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                   match = "MemberOfAdHocGroup">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>
      <u>AdHoc Group Membership</u>
     </b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <table     xsl:use-attribute-sets = "table">
      <tr>
       <ul>
        <xsl:for-each           select = "Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name">
         <li>
          <xsl:value-of         select = "."/>
         </li>
        </xsl:for-each>
       </ul>
      </tr>
     </table>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>

 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                   match = "ResearchBaseFor">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>
      <u>Research Base For</u>
     </b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <table     xsl:use-attribute-sets = "table">
      <tr>
       <ul>
        <xsl:for-each           select = "../ResearchBaseFor/Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name">
         <li>
          <xsl:value-of         select = "."/>
         </li>
        </xsl:for-each>
       </ul>
      </tr>
     </table>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>


 <!--
 ========================================================================
 Template for Dated Action
 ======================================================================== -->
 <xsl:template                   match = "DatedAction">
  <b>
   <font size='4'>Dated Action</font>
  </b>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Description</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ActionDescription"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Date</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ActionDate"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Comment</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "Comment"/>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                    name = "listAddress">
  <xsl:for-each                 select = "Street">
   <xsl:value-of                select = "."/>
   <br/>
  </xsl:for-each>
  <xsl:choose>
   <xsl:when                      test = "PostalCodePosition = 'before City'">
    <xsl:value-of               select = "PostalCode_ZIP"/>
    <xsl:text> </xsl:text>
    <xsl:value-of               select = "City"/>
    <xsl:if                       test = "CitySuffix">
     <xsl:text> </xsl:text>
     <xsl:value-of              select = "CitySuffix"/>
    </xsl:if>
   </xsl:when>
   <xsl:when                      test = "PostalCodePosition = 'after City'">
    <xsl:value-of               select = "City"/>
    <xsl:if                       test = "CitySuffix">
     <xsl:text> </xsl:text>
     <xsl:value-of              select = "CitySuffix"/>
    </xsl:if>
    <xsl:text> </xsl:text>
    <xsl:value-of               select = "PostalCode_ZIP"/>
   </xsl:when>
   <!-- 
   This section is for US addresses
   =================================================================== -->
   <xsl:when                      test = "PostalCodePosition = 
                                           'after PoliticalSubUnit_State'">
    <xsl:value-of               select = "City"/>
    <xsl:if                       test = "CitySuffix">
     <xsl:text> </xsl:text>
     <xsl:value-of              select = "CitySuffix"/>
    </xsl:if>
    <xsl:text>, </xsl:text>
    <xsl:value-of               select = "PoliticalSubUnitShortName"/>
    <xsl:text> </xsl:text>
    <xsl:value-of               select = "PostalCode_ZIP"/>
   </xsl:when>
  </xsl:choose>
  <br/>
  <xsl:value-of                 select = "CountryName"/>
  <br/>
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Phone, Fax, WebSite, Role information
 ======================================================================== -->
 <xsl:template                    name = "listPhone">
  <!--
  Display the Phone, Fax, Email, etc. in a table format
  ========================================================== -->
  <table        xsl:use-attribute-sets = "table">
   <tr> 
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:choose>
      <xsl:when                   test = "../Phone/@native">
       <i><xsl:text>Phone</xsl:text></i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:text>Phone</xsl:text>
      </xsl:otherwise>
     </xsl:choose>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:choose>
      <xsl:when                   test = "../Phone/@native">
       <i>
        <xsl:value-of           select = "../Phone"/>
        <xsl:if                   test = "../Phone/@Public">
         <b>
          <xsl:text> (Public = No)</xsl:text>
         </b>
        </xsl:if>
       </i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:value-of            select = "../Phone"/>
       <xsl:if                    test = "../Phone/@Public">
        <b>
         <xsl:text> (Public = No)</xsl:text>
        </b>
       </xsl:if>
      </xsl:otherwise>
     </xsl:choose>
    </td>
   </tr>
   <tr>
    <td>
     <xsl:choose>
      <xsl:when                   test = "../TollFreePhone/@native">
       <i><xsl:text>TollFreePhone</xsl:text></i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:text>TollFreePhone</xsl:text>
      </xsl:otherwise>
     </xsl:choose>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:choose>
      <xsl:when                   test = "../TollFreePhone/@native">
       <i>
        <xsl:value-of           select = "../TollFreePhone"/>
       </i>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of           select = "../TollFreePhone"/>
      </xsl:otherwise>
     </xsl:choose>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:choose>
      <xsl:when                   test = "../Fax/@native">
       <i>
        <xsl:text>Fax</xsl:text>
       </i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:text>Fax</xsl:text>
      </xsl:otherwise>
     </xsl:choose>      
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:choose>
      <xsl:when                   test = "../Fax/@native">
       <i>
        <xsl:value-of           select = "../Fax"/>
       </i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:value-of            select = "../Fax"/>
      </xsl:otherwise>
     </xsl:choose>      
    </td>
   </tr>
    <tr>
     <td       xsl:use-attribute-sets = "cell1of2">Email</td>
     <xsl:choose>
      <xsl:when                  test = "../Email">
       <td     xsl:use-attribute-sets = "cell2of2">
        <xsl:call-template       name = "listEmail">
         <xsl:with-param         name = "email"
                               select = "../Email"/>
        </xsl:call-template>
        <xsl:if                  test = "../Email/@Public">
         <b>
         <xsl:text> (Public = No)</xsl:text>
         </b>
        </xsl:if>
       </td>
      </xsl:when>
     </xsl:choose>
    </tr>
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <xsl:choose>
       <xsl:when                  test = "../WebSite/@native">
        <i>  
         <xsl:text>Website</xsl:text>
        </i>
       </xsl:when>
       <xsl:otherwise>
         <xsl:text>Website</xsl:text>
       </xsl:otherwise>
      </xsl:choose>
     </td>
     <xsl:choose>
      <xsl:when                   test = "../WebSite">
       <td      xsl:use-attribute-sets = "cell2of2">
        <xsl:choose>
         <xsl:when                test = "../WebSite/@native">
          <i>
           <xsl:call-template     name = "listWebSite">
            <xsl:with-param       name = "webSite"
                                select = "../WebSite/@xref"/>
           </xsl:call-template>
           <br/>
           <xsl:value-of        select = "../WebSite"/>
          </i>
         </xsl:when>
         <xsl:otherwise>
           <xsl:call-template     name = "listWebSite">
            <xsl:with-param       name = "webSite"
                                select = "../WebSite/@xref"/>
           </xsl:call-template>
           <br/>
           <xsl:value-of        select = "../WebSite"/>
         </xsl:otherwise>
        </xsl:choose>
       </td>
      </xsl:when>
     </xsl:choose>
    </tr>
    <xsl:if                       test = "../../PersonRole">
     <tr>
      <td       xsl:use-attribute-sets = "cell1of2">
       <xsl:text>Person Role</xsl:text>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <table   xsl:use-attribute-sets = "table">
        <xsl:for-each           select = "../../PersonRole">
         <tr>
          <td   xsl:use-attribute-sets = "cell1of2">
           <xsl:value-of        select = "."/>
          </td>
         </tr>
        </xsl:for-each>
       </table>
      </td>
     </tr>
    </xsl:if>
   <br/>
  </table>
  <!-- p/ -->
 </xsl:template>



 <!--
 ========================================================================
 Named Template to display the Email information
 ======================================================================== -->
 <xsl:template                    name = "listEmail">
  <xsl:param                      name = "email"/>

  <xsl:element                    name = "a">
   <xsl:attribute                 name = "href">
    <xsl:text>mailto:</xsl:text>
    <xsl:value-of               select = "$email"/>
   </xsl:attribute>
    <xsl:value-of               select = "$email"/>
  </xsl:element>

 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Website information
 ======================================================================== -->
 <xsl:template                    name = "listWebSite">
  <xsl:param                      name = "webSite"/>

  <xsl:element                    name = "a">
   <xsl:attribute                 name = "href">
    <xsl:choose>
     <xsl:when                    test = "contains($webSite, 'http://')">
      <xsl:value-of             select = "$webSite"/>
     </xsl:when>
     <xsl:otherwise>
      <xsl:text>http://</xsl:text>
      <xsl:value-of             select = "$webSite"/>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:attribute>
   <xsl:attribute                name = "target">
    <xsl:text>new</xsl:text>
   </xsl:attribute>

   <xsl:value-of               select = "$webSite"/>
  </xsl:element>

 </xsl:template>

</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>