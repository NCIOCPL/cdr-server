<CdrDoc Type='Filter' Id='CDR0000315570'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Summary Changes Report</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<xsl:transform                xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                                version = "1.0">

 <!--
   =========================================================================
   Not clear why the summary QC report imports one and includes the other,
   but this filter is cloning the approached used by the QC report at the
   request of Margaret and Lakshmi, so I'm doing the same.
   ========================================================================= -->
 <xsl:import                       href = "cdr:name:InLine Markup Formatter"/>
 <xsl:include                      href = "cdr:name:Table Formatter"/>

 <xsl:output                     method = "html"/>

 <xsl:template                    match = "/">
  <xsl:apply-templates           select = "Summary/SummarySection
                                           [SectMetaData/SectionType = 
                                            'Changes to summary']"/>
 </xsl:template>

 <xsl:template                    match = "SummarySection">
  <h2>
   <xsl:text>Publishable Version Date: @@PubVerDate@@</xsl:text>
   <br />
   <xsl:value-of                 select = "Title"/>
  </h2>
  <xsl:apply-templates/>
 </xsl:template>

 <xsl:template                    match = "SummarySection/Title |
                                           SummarySection/SectMetaData"/>

<!--
 <xsl:template                    match = "Para">
  <p>
   <xsl:apply-templates          select = "text()|Strong|SummaryFragmentRef"/>
  </p>
 </xsl:template>

 <xsl:template                    match = "Strong">
  <b>
   <xsl:apply-templates          select = "text()|SummaryFragmentRef"/>
  </b>
 </xsl:template>

 <xsl:template                    match = "SummaryFragmentRef">
  <span                           class = "SectionRef">
   <xsl:value-of                 select = "."/>
  </span>
 </xsl:template>
-->

</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>