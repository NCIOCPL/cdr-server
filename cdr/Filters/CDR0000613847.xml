<CdrDoc Type='Filter' Id='CDR0000613847'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Glossary Term Name QC Report filter</DocTitle>
<DocComment>CVS-V1.18: Title and CDRID Modified (Bug 962)</DocComment><ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml      version = "1.0"?>
<!--
================================================================
$Id: CDR0000613847.xml,v 1.5 2008-09-25 22:01:56 venglisc Exp $

Filter to display Glossary Term Name QC Reports
Volker Englisch         2007-09-26

$Log: not supported by cvs2svn $
================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "html"/>

 <xsl:include   href = "cdr:name:Module: Attribute Sets"/>
 <xsl:include   href = "cdr:name:Module: InLine Markup Formatter"/>
 <xsl:include   href = "cdr:name:Module: STYLE Default"/> 

 <xsl:variable                    name = "docID"
                                select = "document('cdrutil:/docid')"/>
 <xsl:variable                    name = "whoAmI"
                                select = "'GlossaryTermName'"/>
 <!-- 
 ====================================================================
 This program is a filter to create a Glossary term Concept QC Report 
 ==================================================================== -->
 <xsl:template                   match = "/">
  <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
  <HTML>
   <HEAD>
    <xsl:variable                 name = "cdrdocs" 
                                select = "document('cdrx:/*/CdrCtl')"/>
    <TITLE>
     <xsl:value-of              select = "concat('CDR', 
                                           number(
                                           substring-after($docID, 'CDR')))"/>
     <xsl:text>: </xsl:text>
     <xsl:value-of              select = "substring-before(
                                           concat($cdrdocs/CdrDocCtl/
                                                  DocTitle, ';'), ';')"/> 
    </TITLE>
    <STYLE type='text/css'>
     <xsl:call-template           name = "defaultStyle"/>  
     .attribute  { font-weight: normal; 
                   font-style: italic; 
                   background-color: #FFFFFF; }
     .big        { font-size: 14pt; 
                   font-weight: bold; }
     .name       { color: blue;
                   font-weight: bold;
                   background-color: #EEEEEE; }
    </STYLE>
   </HEAD>
   <BASEFONT                      FACE = 'Arial, Helvetica, sans-serif' /> 
   <xsl:apply-templates         select = "GlossaryTermName"/>
  </HTML>
 </xsl:template>

 <!-- 
 ==============================================================  
 Generate the HTML for the glossary term QC Report
 ============================================================== -->
 <xsl:template                   match = "GlossaryTermName">
  <BODY>
  <!-- 
  =============================================================
  Display Report heading and subheading 
  ============================================================= -->
  <span class="big">
   <center>
    <xsl:text>Glossary Term Name</xsl:text>
    <br/>
    <xsl:text>QC Report</xsl:text>
   </center>
  </span>
  <b>
   <center>
    <xsl:value-of               select = 'document(concat("cdrutil:/date/",
                                                          "%25B %25#d, %25Y ",
                                                          "%25#I:%25M%25p"))'/>
   </center>
  </b>
  <p/>


  <!-- 
  ====================================================================
  Display CDR ID
  ==================================================================== -->
  <span class="big">
   <xsl:value-of                select = "concat('CDR', 
                                          number(
                                          substring-after($docID, 'CDR')))"/>
  </span>
  <p/>

  <!--
  ===============================================================
  Display Name Information
  =============================================================== -->
  <xsl:apply-templates          select = "TermName"/>

  <br/>

  <table        xsl:use-attribute-sets = "table">
   <xsl:if                        test = "TermNameStatus">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Status</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TermNameStatus"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "TermNameStatusDate">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Status Date</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TermNameStatusDate"/>
     </td>
    </tr>
   </xsl:if>
  </table>
  <br/>

  <!--
  ===============================================================
  Display Translated Information
  =============================================================== -->
  <xsl:apply-templates          select = "TranslatedName"/>

  <br/>

  <!--
  ===============================================================
  Display Source Information
  =============================================================== -->
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Glossary Term Concept</b>
    </td>
    <td>
     <xsl:value-of              select = "GlossaryTermConcept"/>

     <xsl:variable                name = "cdrId"
                                select = "concat('CDR', 
                                           number(
                                            substring-after(
                                             substring-before(
                                              concat(
                                                 GlossaryTermConcept/@cdr:ref,
                                                        '#'), '#'), 'CDR')))"/>
     <xsl:text> (</xsl:text>
     <xsl:element                 name = "a">
      <xsl:attribute              name = "href">
       <xsl:value-of            select = "concat('/cgi-bin/cdr/QcReport.py',
                                                 '?Session=guest',
                                                 '&amp;DocId=',
                                                 $cdrId)"/>
      </xsl:attribute>
      <xsl:attribute              name = "target">
       <xsl:text>new</xsl:text>
      </xsl:attribute>
      <xsl:value-of             select = "$cdrId"/>
     </xsl:element>

     <xsl:text>)</xsl:text>
    </td>
   </tr>
  </table>

  <p/>

  
  <!--
  ===============================================================
  Display the ReplacementText elements
  =============================================================== -->
  <xsl:if                         test = "ReplacementText">
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Replacement Text</b>
     </td>
     <td>  </td>
    </tr>
    <xsl:apply-templates        select = "ReplacementText"/>
   </table>
  </xsl:if>

  <xsl:if                         test = "Comment">
   <table       xsl:use-attribute-sets = "table">
    <xsl:apply-templates        select = "Comment"
                                  mode = "withAttribute">
     <xsl:with-param              name = "label"
                                select = "'Comment'"/>
    </xsl:apply-templates>
   </table>
  </xsl:if>

  </BODY>  
 </xsl:template>


 <!--
 ==================================================================
 Template to display individual TermDefinitions
 ================================================================== -->
 <xsl:template                   match = "TermName">
  <table        xsl:use-attribute-sets = "table">
   <tr class="name">
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Name</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "TermNameString"/>

    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Language</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>en</xsl:text>
    </td>
   </tr>

   <xsl:if                        test = "TermPronunciation">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Term Pronunciation</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:apply-templates      select = "TermPronunciation"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "PronunciationResource">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Pronunciation Resource</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:for-each             select = "PronunciationResource">
       <li>
        <xsl:value-of            select = "."/>
       </li>
      </xsl:for-each>
     </td>
    </tr>
   </xsl:if>
  </table>           
  <table        xsl:use-attribute-sets = "table">
   <xsl:if                        test = "TermNameSource">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Term Name Source</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TermNameSource"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "TermNameVerificationResource">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Term Name Verification Resource</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TermNameVerificationResource"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "Comment">
    <xsl:apply-templates        select = "Comment"
                                  mode = "withAttribute">
     <xsl:with-param              name = "label"
                                select = "'Comment'"/>
    </xsl:apply-templates>
   </xsl:if>
   <xsl:if                        test = "DateLastModified">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Date Last Modified</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "DateLastModified"/>
     </td>
    </tr>
   </xsl:if>
  </table>
 </xsl:template>


 <!--
 ==================================================================
 Template to display the translated Term names
 ================================================================== -->
 <xsl:template                   match = "TranslatedName">
  <table        xsl:use-attribute-sets = "table">
   <tr class="name">
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Name</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "TermNameString"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Language</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "@language"/>
    </td>
   </tr>

   <xsl:if                        test = "TranslationResource">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Translation Resource</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:for-each             select = "TranslationResource">
       <li>
        <xsl:value-of            select = "."/>
       </li>
      </xsl:for-each>
     </td>
    </tr>
   </xsl:if>
  </table>           
  <table        xsl:use-attribute-sets = "table">
   <xsl:if                        test = "TranslatedNameStatus">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Translated Name Status</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TranslatedNameStatus"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "TranslatedNameStatusDate">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Translated Name Status Date</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TranslatedNameStatusDate"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "Comment">
    <xsl:apply-templates        select = "Comment"
                                  mode = "withAttribute">
     <xsl:with-param              name = "label"
                                select = "'Comment'"/>
    </xsl:apply-templates>
   </xsl:if>
   <xsl:if                        test = "DateLastModified">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Date Last Modified</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "DateLastModified"/>
     </td>
    </tr>
   </xsl:if>
  </table>
  <br/>
 </xsl:template>


 <!--
 =======================================================================
 Template for Admin Information Comments
 ======================================================================= -->
 <xsl:template                   match = "Comment"
                                  mode = "withAttribute">
  <xsl:param                      name = "label"
                                select = "'Comment'"/>

  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
    <b>
     <xsl:value-of              select = "$label"/>
    </b>
   </td>
   <td          xsl:use-attribute-sets = "cell2of2">
    <span class="attribute">
     <xsl:if                      test = "@audience">
      <xsl:text>audience=</xsl:text>
      <xsl:value-of             select = "@audience"/>
     </xsl:if>
     <xsl:if                      test = "@date">
      <xsl:text> date=</xsl:text>
      <xsl:value-of             select = "@date"/>
     </xsl:if>
     <xsl:if                      test = "@user">
      <xsl:text> user=</xsl:text>
      <xsl:value-of             select = "@user"/>
     </xsl:if>
    </span>
   </td>
  </tr>
  <tr>
   <td><xsl:text> </xsl:text></td>
   <td>
    <xsl:value-of              select = "."/>
    <p/>
   </td>
  </tr>
 </xsl:template>

 <!--
 ======================================================================
 Template to display the Replacement text and PlaceHolders
 ====================================================================== -->
 <xsl:template                  match = "ReplacementText">
  <tr>
   <td>
    <xsl:value-of              select = "@name"/>
   </td>
   <td>
    <xsl:value-of              select = "."/>
   </td>
  </tr>
 </xsl:template>
</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>