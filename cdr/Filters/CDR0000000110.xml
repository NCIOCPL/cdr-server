<?xml version="1.0"?>

<!--myTitle>  Creator:  Volker Englisch
              Created:  06/18/2002</myTitle-->

<xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
               xmlns:cdr="cips.nci.nih.gov/cdr"
               version="1.0">

<xsl:output method="xml" 
            omit-xml-declaration="no"/>
 <!-- Passed in by the caller -->
 <xsl:param                           name = "changeFrom"/>
 <xsl:param                           name = "changeTo"/>

 <!-- Global Variables -->
 <xsl:variable                        name = "pa_hp" 
                                    select = "/InScopeProtocol/ProtocolAbstract/
                                              Professional"/>   
 <xsl:variable                        name = "pa_p"
                                    select = "/InScopeProtocol/ProtocolAbstract/
                                              Patient"/>
 <xsl:variable                        name = "org_loc" 
                                    select = "/Organization/
                                              OrganizationLocations/
                                              OrganizationLocation/Location"/>

  <xsl:template match="InScopeProtocol">
    <xsl:copy>

<!-- ==================================================================
     Copy second tier fields without any reference links
     (Protocol Id, Protocol Sources, Approval, Sponsor, Funding, Title) 
     ================================================================== -->
      <xsl:apply-templates   select = "ProtocolIDs" 
                             mode   = "copy"/>
      <xsl:apply-templates   select = "ProtocolSources" 
                             mode   = "copy"/>
      <xsl:apply-templates   select = "ProtocolApproval" 
                             mode   = "copy"/>
      <xsl:apply-templates   select = "ProtocolSponsors" 
                             mode   = "copy"/>
      <xsl:apply-templates   select = "FundingInfo" 
                             mode   = "copy"/>
      <xsl:apply-templates   select = "ProtocolTitle" 
                             mode   = "copy"/>
      <xsl:apply-templates   select = "ProtocolAbstract" 
                             mode   = "copy"/>
      <xsl:apply-templates   select = "ProtocolPhase" 
                             mode   = "copy"/>
      <xsl:apply-templates   select = "ProtocolDetail" 
                             mode   = "copy"/>
      <xsl:apply-templates   select = "Eligibility" 
                             mode   = "copy"/>


    <!--
    =====================================================================
    Process the Protocol Administrative Information
    ===================================================================== -->
    <ProtocolAdminInfo>
     <xsl:apply-templates select = "ProtocolAdminInfo/CurrentProtocolStatus" 
                            mode = "copy"/>
     <xsl:apply-templates select = "ProtocolAdminInfo/ProtocolLeadOrg"/>
    </ProtocolAdminInfo>
        
    <xsl:apply-templates  select = "DateLastModified" 
                            mode = "copy"/>
    <xsl:apply-templates  select = "PdqKey" 
                            mode = "copy"/>
   </xsl:copy>
  </xsl:template>








  <!--
  ===================================================================
  Extract the information for one lead organization.
  =================================================================== -->
  <xsl:template            match = "ProtocolLeadOrg">
   <xsl:variable            name = "orgID"
                          select = "LeadOrganizationID/@cdr:ref"/>
   <ProtocolLeadOrg>
    <xsl:attribute          name = "Group">
     <xsl:value-of        select = "@Group"/>
    </xsl:attribute>
    <xsl:apply-templates  select = "LeadOrganizationID"
                            mode = "copy"/>
    <xsl:apply-templates  select = "LeadOrgRole"
                            mode = "copy"/>
    <xsl:apply-templates  select = "LeadOrgProtocolID"
                            mode = "copy"/>
    <xsl:apply-templates  select = "LeadOrgProtocolStatuses"
                            mode = "copy"/>
    <xsl:apply-templates  select = "LeadOrgPersonnel"/>

<!-- add the participating sites to the lead organization
     Note:  This link will be broken for the vendor filter but needs 
            to be kept here for the QC filters
     =============================================================== -->
     <xsl:if                test = "ProtocolSites">
      <ProtocolSites>
       <xsl:apply-templates
                          select = "ProtocolSites"/>
      </ProtocolSites>
     </xsl:if>

   </ProtocolLeadOrg>
  </xsl:template>

  <!--
  ===================================================================
  Template to change the Person link
  =================================================================== -->
  <xsl:template            match = "LeadOrgPersonnel">
   <xsl:variable            name = "personId"
                          select = "Person/@cdr:ref"/>
   
   <LeadOrgPersonnel>
   <xsl:attribute           name = "cdr:id">
     <xsl:value-of        select = "@cdr:id"/>
   </xsl:attribute>

    <xsl:choose>
      <xsl:when             test = "Person/@cdr:ref=$changeFrom">
        <Person>
        <xsl:attribute      name = "cdr:ref">
          <xsl:value-of   select = "$changeTo"/>
        </xsl:attribute>
        <!-- xsl:attribute      name = "PdqKey">
          <xsl:value-of   select = "Person/@PdqKey"/>
        </xsl:attribute-->
        <xsl:value-of     select = "Person"/>
        </Person>
      </xsl:when>
      <xsl:otherwise>
        <Person              cdr:ref = "{$personId}">
        <xsl:attribute      name = "PdqKey">
          <xsl:value-of   select = "Person/@PdqKey"/>
        </xsl:attribute>
        <xsl:value-of     select = "Person"/>
        </Person>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates   select = "PersonRole"
                             mode = "copy"/>
   </LeadOrgPersonnel>
  </xsl:template>

  <!--
  ===========================================================================
  Template for handling the participating organizations.
  ==========================================================================
  -->
  <xsl:template            match = "ProtocolSites">
   <xsl:apply-templates   select = "OrgSite"/>
  </xsl:template>
  
  <!--
  ===========================================================================
  Template for handling one participating organization.
  ==========================================================================
  -->
  <xsl:template            match = "OrgSite">
   <xsl:variable            name = "orgId" 
                          select = "OrgSiteID/@cdr:ref"/>
   <OrgSite>
    <xsl:apply-templates  select = "OrgSiteID"
                            mode = "copy"/>
    <xsl:apply-templates  select = "OrgSiteStatus"
                            mode = "copy"/>

    <!-- Collect the participating org personnel information. -->
    <OrgSiteContact>
     <xsl:apply-templates select = "OrgSiteContact/SpecificPerson|
                                    OrgSiteContact/GenericPerson"/>
    </OrgSiteContact>
   </OrgSite>
  </xsl:template>
  
  <!--
  ===========================================================================
  Template for handling specific person elements.
  ==========================================================================
  -->
  <xsl:template            match = "SpecificPerson">
   <xsl:variable            name = "SPID" 
                          select = "Person/@cdr:ref"/>
   <SpecificPerson>
    <xsl:choose>
      <xsl:when             test = "Person/@cdr:ref=$changeFrom">
        <Person>
        <xsl:attribute      name = "cdr:ref">
          <xsl:value-of   select = "$changeTo"/>
        </xsl:attribute>
        <!-- xsl:attribute      name = "PdqKey">
          <xsl:value-of   select = "Person/@PdqKey"/>
        </xsl:attribute-->
        <xsl:value-of     select = "Person"/>
        </Person>
      </xsl:when>
      <xsl:otherwise>
        <Person              cdr:ref = "{$SPID}">
        <xsl:attribute      name = "PdqKey">
          <xsl:value-of   select = "Person/@PdqKey"/>
        </xsl:attribute>
        <xsl:value-of     select = "Person"/>
        </Person>
      </xsl:otherwise>
    </xsl:choose>

    <xsl:apply-templates  select = "Role"
                            mode = "copy"/>
   </SpecificPerson>
  </xsl:template>




  <xsl:template            match = "GenericPerson">
   <GenericPerson            ref = "GPID"> <!-- As in original filter. -->
    <xsl:apply-templates  select = "PersonTitle"
                            mode = "copy"/>
    <xsl:apply-templates  select = "GenericPersonContact/ContactName"
                            mode = "copy"/>
    <xsl:apply-templates  select = "GenericPersonContact/ContactDetail/Phone"/>
    <xsl:apply-templates  select = "GenericPersonContact/ContactDetail/
                                    TollFreePhone"/>
    <xsl:apply-templates  select = "GenericPersonContact/ContactDetail/
                                    PostalAddress"/>
    <xsl:apply-templates  select = "GenericPersonContact/ContactDetail/Fax"/>
    <xsl:apply-templates  select = "GenericPersonContact/ContactDetail/Email"/>
    <xsl:apply-templates  select = "GenericPersonContact/ContactDetail/
                                    WebSite"/>
   </GenericPerson>
  </xsl:template>

<!-- Template rule used to do XML to XML transformations which
     copies any attribute node, or node that is child of of something 
     ================================================================ -->
  <xsl:template match="@*|node()" mode="copy">
    <xsl:copy>
      <xsl:apply-templates select="@*" mode="copy"/>
      <xsl:apply-templates select="node()" mode="copy"/>
    </xsl:copy>
  </xsl:template>
</xsl:transform>
