<CdrDoc Type='Filter' Id='CDR0000335424'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Denormalization Filter: Summary</DocTitle>
<DocComment>CVS-V1.1: New Summary Denormalization (Bug 767)</DocComment><ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<!--
 ================================================================
     $Id: CDR0000335424.xml,v 1.2 2004-05-21 15:47:00 venglisc Exp $

     Filter to denormalize summary data.
        Written by Volker Englisch, 2003-08-12

     $Log: not supported by cvs2svn $
 ================================================================ -->
<xsl:transform                xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                                version = "1.0"
                              xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                     method = "xml" 
                   omit-xml-declaration = "no"/>

 <xsl:include href = "cdr:name:Module: Citation Denormalization"/>
 <!-- 
 =================================================================
 Copy control information and generate current date
 ================================================================= -->
 <xsl:template                    match = "Summary">
  <xsl:copy>
   <xsl:apply-templates          select = "document('cdrutil:/docid')"/>
   <xsl:apply-templates          select = "document('cdrx:/*/CdrCtl')"/>

   <xsl:apply-templates/>
  </xsl:copy>
 </xsl:template>


 <!-- 
 =================================================================
 Test if a SummarySection is empty (no children, only white space)

 Such an element may appear if a complete SummarySection has been
 marked with the proposed insertion element and therefore all 
 content gets stripped but the SummarySection tags itself are left
 untouched.
 ================================================================= -->
 <xsl:template                   match = "SummarySection">
  <xsl:choose>
   <xsl:when                      test = "normalize-space(.)">
    <xsl:copy>
     <xsl:apply-templates       select = "node() | @*"/>
    </xsl:copy>
   </xsl:when>
   <xsl:otherwise>
    <!-- Do Nothing:  SummarySection is empty!  -->
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!-- 
 =================================================================
 Template to denormalize the Board element
 ================================================================= -->
 <xsl:template                    match = "Board">
  <xsl:variable                    name = "BoardID" 
                                 select = "@cdr:ref"/>
  <xsl:variable                    name = "BoardInfo" 
                                 select = "document(concat('cdr:',$BoardID,
                                                           '/last'))"/>
  <xsl:element                     name = "Board">
   <xsl:attribute                  name = "cdr:ref">
    <xsl:value-of                select = "@cdr:ref"/>
   </xsl:attribute>

   <xsl:value-of                 select = "$BoardInfo/Organization/
                                            OrganizationNameInformation/
                                            OfficialName/
                                            Name"/>
  </xsl:element>
 </xsl:template>


 <!-- 
 =================================================================
 Template to denormalize the BoardMember elements
 ================================================================= -->
 <xsl:template                    match = "BoardMember">
  <xsl:variable                    name = "BoardMemberID" 
                                 select = "@cdr:ref"/>
  <xsl:variable                    name = "BoardMemberInfo" 
                                 select = "document(concat('cdr:', 
                                                            $BoardMemberID,
                                                            '/last'))"/>
  <xsl:element                     name = "BoardMember">
   <xsl:attribute                  name = "cdr:ref">
    <xsl:value-of                select = "@cdr:ref"/>
   </xsl:attribute>

   <xsl:value-of                 select = "concat($BoardMemberInfo/
                                                   Person/
                                                   PersonNameInformation/
                                                   SurName,
                                                   ', ',
                                                  $BoardMemberInfo/
                                                   Person/
                                                   PersonNameInformation/
                                                   GivenName)"/>   
  </xsl:element>
 </xsl:template>


 <!-- 
 =================================================================
 Template to denormalize the Term elements
 ================================================================= -->
 <xsl:template                    match = "Term">
  <xsl:variable                    name = "TermID" 
                                 select = "@cdr:ref"/>
  <xsl:variable                    name = "TermInfo" 
                                 select = "document(concat('cdr:',$TermID,
                                                           '/lastp'))"/>
  <xsl:element                     name = "Term">
   <xsl:attribute                  name = "cdr:ref">
    <xsl:value-of                select = "@cdr:ref"/>
   </xsl:attribute>

   <xsl:value-of                 select = "$TermInfo/Term/
                                            PreferredName"/>
  </xsl:element>
 </xsl:template>


 <!-- 
 ==================================================================
 Template rule used to do XML to XML transformations which
 copies any attribute node, or node that is child of of something 
 ================================================================== -->
 <xsl:template                    match = "@*|node()">
  <xsl:copy>
   <xsl:apply-templates          select = "@*|node()"/>
  </xsl:copy> 
 </xsl:template>

</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>