<CdrDoc Type='Filter' Id='CDR0000618263'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Denormalization Filter: Secondary Links</DocTitle>
<DocComment>CVS-V1.1: New Summary Denormalization (Bug 767)</DocComment><ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml      version = "1.0"?>
<!--
 ================================================================
 $Id: CDR0000618263.xml,v 1.1 2008-10-22 19:38:56 venglisc Exp $

 Filter to denormalize SummaryRef elements within MiscDoc
 Fragments.
    Written by Volker Englisch, 2003-08-12

 $Log: not supported by cvs2svn $
 ================================================================ -->
<xsl:transform                xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                                version = "1.0"
                              xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                     method = "xml" 
                   omit-xml-declaration = "no"/>

 <!-- 
 =================================================================
 Copy control information and generate current date
 ================================================================= -->
 <xsl:template                    match = "Summary">
  <xsl:copy>
   <!-- xsl:apply-templates          select = "document('cdrutil:/docid')"/>
   <xsl:apply-templates          select = "document('cdrx:/*/CdrCtl')"/ -->

   <xsl:apply-templates/>
  </xsl:copy>
 </xsl:template>


 <!-- 
 =================================================================
 Template to denormalize the SummaryRef elements
 We need this denormalization in order to correctly create the 
 link in the QC report to the listed summaries.
 ================================================================= -->
 <xsl:template                    match = "SummaryRef">
  <xsl:variable                    name = "SummaryRefID" 
                                 select = "@cdr:href"/>
  <xsl:variable                    name = "SummaryRefInfo" 
                                 select = "document(concat('cdr:',$SummaryRefID,
                                                           '/lastp'))"/>
  <xsl:element                     name = "SummaryRef">
   <xsl:attribute                  name = "cdr:href">
    <xsl:value-of                select = "@cdr:href"/>
   </xsl:attribute>

   <SummaryRefText>
    <xsl:value-of                select = "."/>
   </SummaryRefText>

   <Summary>
    <LinkedSummaryType>
     <xsl:value-of               select = "$SummaryRefInfo/Summary
                                             /SummaryMetaData
                                             /SummaryType"/>
    </LinkedSummaryType>
    <LinkedSummaryAudience>
     <xsl:value-of               select = "$SummaryRefInfo/Summary
                                             /SummaryMetaData
                                             /SummaryAudience"/>
    </LinkedSummaryAudience>
    <xsl:if                        test = "$SummaryRefInfo/Summary
                                             //KeyPoint">
     <LinkedKeyPoints>
      <xsl:value-of              select = "count($SummaryRefInfo/Summary
                                             //KeyPoint)"/>
     </LinkedKeyPoints>
    </xsl:if>
   </Summary>
  </xsl:element>
 </xsl:template>


 <!-- 
 ==================================================================
 Template rule used to do XML to XML transformations which
 copies any attribute node, or node that is child of of something 
 ================================================================== -->
 <xsl:template                    match = "@*|node()">
  <xsl:copy>
   <xsl:apply-templates          select = "@*|node()"/>
  </xsl:copy> 
 </xsl:template>

</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>