<CdrDoc Type='Filter' Id='CDR0000000158'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Patient Summary QC Report Filter</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<xsl:transform             xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                             version = "1.0"
                           xmlns:cdr = "cips.nci.nih.gov/cdr"
             exclude-result-prefixes = "cdr">

 <xsl:import                    href = "cdr:name:InLine Markup Formatter"/>
 <xsl:include                   href = "cdr:name:Table Formatter"/>
     
 <xsl:output                  method = "html"
                              indent = "no"/>

 <xsl:template                 match = "/">
  <HTML>
  <HEAD>
  <TITLE>Formats Patient Summary Test</TITLE>

         <!-- ================================================
              Inline sytle sheet to display H2 and H4 headers 
              in Navy 
              ================================================-->
         <STYLE>
          <!--  H2,H3,H4 {color: Navy}-->
            <!-- H2,H4 {font-size: medium} -->
            p {font-size: 12pt}
            dt {font-size: 12pt}
            dd {font-size: 12pt}
            li.lnone {list-style-type: none}
         </STYLE>
  </HEAD>
  <BASEFONT FACE='Arial, Helvetica, sans-serif'/>
  <xsl:apply-templates        select = "Summary"/>
  </HTML>
</xsl:template>

<!-- =====================================================================
       Produce the HTML BODY 
     ===================================================================== -->
    <xsl:template              match = "Summary">
     <xsl:if                    test = "//SummaryAudience='Patients'">
      <BODY>
      <xsl:apply-templates    select = "SummaryTitle" 
                                mode = "TOC"/>  
    
   <!--======================================================
         Display summary type and audience 
       ======================================================-->
      <xsl:for-each           select = "SummaryMetaData">
       <h3>
        <xsl:value-of         select = "concat(SummaryType,
                                          ' - ', SummaryAudience)"/>
       </h3>
      </xsl:for-each>

      <dl>
       <xsl:for-each          select = "SummarySection">
        <xsl:call-template      name = "TocSummarySection">
         <xsl:with-param        name = "level"
                              select = "1"/>
        </xsl:call-template>  
       </xsl:for-each>
      </dl>
      <hr/>
      <xsl:apply-templates/>
      </BODY>
     </xsl:if>  
    </xsl:template>

<!-- =====================================================================
       Display KeyPoints 
     ===================================================================== --> 
    <xsl:template              match = "KeyPoints">
     <xsl:if                    test = "KeyPointsList/ListItem/KeyPoint">
      <table align='center' border='1'>
      <tr>
         <td align='middle'>
            <b>Key Points for This Section</b>
         </td>
      </tr>
      <tr>
         <td>
           <xsl:if              test = "KeyPointsList !=''">
           <xsl:apply-templates/>
           </xsl:if>
         </td>
      </tr>
      </table>
      <br />
     </xsl:if>
    </xsl:template>

<!-- ================================================================== 
       Display an Insertion 
     ================================================================== -->
    <xsl:template              match = "Insertion">
     <xsl:choose>
      <xsl:when                 test = "@RevisionLevel = 'proposed'">
       <font color="FUCHSIA">
        <xsl:apply-templates/>
       </font>
      </xsl:when>
      <xsl:otherwise>
       <font color="RED">
        <xsl:apply-templates/>
       </font>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:template>

<!-- ==================================================================
       Display a Deletion 
     ================================================================== -->
    <xsl:template              match = "Deletion">
     <strike>
     <xsl:apply-templates/>
     </strike>
    </xsl:template>
 
<!-- ================================================================
       This template deletes data elements not used in the display 
     ================================================================ -->
    <xsl:template              match = "DocId | PdqKey | PDQBoard | 
                                        SectionType |Diagnosis |
                                        SummaryLanguage | SummaryType |
                                        SummaryAudience | SummaryTitle |
                                        MainTopics | SecondaryTopics | 
                                        PatientVersionOf | TranslationOf |
                                        DateLastModified"/>

<!-- =========================================================
           Display KeyPoint
     ========================================================= -->         
    <xsl:template              match = "KeyPoint">
     <b>
     <xsl:apply-templates/>
     </b>
     <xsl:if test="../SummarySection">
      <br /><br />
     </xsl:if>
    </xsl:template>
 
<!--====================================================================
         Display an ordered list 
    ==================================================================== -->
  <xsl:template                match = "OrderedList">
    <xsl:variable               name = "redline">
      <xsl:text>Redline</xsl:text>
    </xsl:variable>
    <xsl:call-template          name = "OrderedList">
      <xsl:with-param           name = "markup"        
                              select = "$redline"/>
    </xsl:call-template>
  </xsl:template>

<!--=====================================================================
                Display an Itemized List
    ==================================================================== -->
  <xsl:template                match = "ItemizedList">
    <xsl:variable               name = "redline">
      <xsl:text>Redline</xsl:text>
    </xsl:variable>
    <xsl:call-template          name = "ItemizedList">
      <xsl:with-param           name = "markup"        
                              select = "$redline"/>
    </xsl:call-template>
  </xsl:template>

</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>