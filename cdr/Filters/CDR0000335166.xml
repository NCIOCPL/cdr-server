<CdrDoc Type='Filter' Id='CDR0000335166'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Module: Checkbox Formatter</DocTitle>
<DocComment>Restored after refresh of CDR database on Mahler</DocComment><ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<!--
================================================================
$Id: CDR0000335166.xml,v 1.5 2008-01-11 22:33:13 venglisc Exp $

Filter to display Summary elements selected by Checkbox
Written by Volker Englisch, 2004-07-16

$Log: not supported by cvs2svn $
================================================================ -->
<xsl:transform             xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                             version = "1.0"
                           xmlns:cdr = "cips.nci.nih.gov/cdr"
             exclude-result-prefixes = "cdr">

 <!-- 
 Checkbox parameters passed via the Web interface
 ==================================================== -->
 <xsl:param                   name = "DisplayGlossaryTermList"/>
 <xsl:param                   name = "DisplayComments"
                            select = "'N'"/>
 <xsl:param                   name = "ShowStandardWording"/>


 <!-- 
 ================================================================
 Display a Table of Glossary Terms at the end of Patient Summary 
 QC Report if the 'Include Glossary Terms' checkbox is checked.
 ================================================================ -->
 <xsl:template               match = "GlossaryTerms">
  <xsl:if                     test = "$DisplayGlossaryTermList='Y'">
   <hr />
   <b>
    <h1>
     <xsl:text>Table of Glossary Terms</xsl:text>
    </h1>
   </b>
   <p/>
        
   <table                   border = "1"> 
    <tr>
     <th>
      <b>
       <xsl:text>Term Text</xsl:text>
      </b>
     </th>

     <th>
      <b>
       <xsl:text>Term Name</xsl:text>
      </b>
     </th>
     <th>
      <b>
       <xsl:text>Definition Text</xsl:text>
      </b>
     </th>
    </tr>
           
    <xsl:for-each           select = "GlossaryTerm">
     <tr>
       <xsl:choose>
        <xsl:when             test = "GlossaryTermRef/Deletion">
         <xsl:choose>
          <xsl:when           test = "GlossaryTermRef/Deletion/
                                         @RevisionLevel = 'proposed'">
           <td>
            <span class="deleteproposed">
             <xsl:value-of        select = "GlossaryTermRef/Deletion"/>
            </span>
           </td>
           <td>
            <span class="deleteproposed">
             <xsl:value-of        select = "TermName"/>
            </span>
           </td>
           <td>
            <span class="deleteproposed">
             <xsl:value-of        select = "DefinitionText"/>
            </span>
           </td>
          </xsl:when>
          <xsl:otherwise>
           <td>
            <span class="deleteapproved">
             <xsl:value-of        select = "GlossaryTermRef/Deletion"/>
            </span>
           </td>
           <td>
            <span class="deleteapproved">
             <xsl:value-of        select = "TermName"/>
            </span>
           </td>
           <td>
            <span class="deleteapproved">
             <xsl:value-of        select = "DefinitionText"/>
            </span>
           </td>
          </xsl:otherwise>
         </xsl:choose>
        </xsl:when>
        <xsl:when             test = "GlossaryTermRef/Insertion">
         <xsl:choose>
          <xsl:when           test = "GlossaryTermRef/Insertion/
                                         @RevisionLevel = 'proposed'">
           <td>
            <span class="insertproposed">
             <xsl:value-of        select = "GlossaryTermRef/Insertion"/>
            </span>
           </td>
           <td>
            <span class="insertproposed">
             <xsl:value-of        select = "TermName"/>
            </span>
           </td>
           <td>
            <span class="insertproposed">
             <xsl:value-of        select = "DefinitionText"/>
            </span>
           </td>
          </xsl:when>
          <xsl:otherwise>
           <td>
            <span class="insertapproved">
             <xsl:value-of        select = "GlossaryTermRef/Insertion"/>
            </span>
           </td>
           <td>
            <span class="insertapproved">
             <xsl:value-of        select = "TermName"/>
            </span>
           </td>
           <td>
            <span class="insertapproved">
             <xsl:value-of        select = "DefinitionText"/>
            </span>
           </td>
          </xsl:otherwise>
         </xsl:choose>
        </xsl:when>
        <xsl:otherwise>
         <td>
          <xsl:value-of        select = "GlossaryTermRef"/>
         </td>
         <td>
          <xsl:value-of        select = "TermName"/>
         </td>
         <td>
          <xsl:value-of        select = "DefinitionText"/>
         </td>
        </xsl:otherwise>
       </xsl:choose>
     </tr>
    </xsl:for-each>
   </table>
  </xsl:if>
 </xsl:template>


 <!-- 
 ================================================================
 Display Comments - Redline/Strikeout
 The comments are being displayed without insertion/deletion 
 markup for insertions but _with_ markup for deletions
 ================================================================ -->
 <xsl:template               match = "Comment |
                                      ResponseToComment" 
                              mode = "RS">

  <xsl:variable               name = "myScope"
                            select = "name()"/>

  <xsl:if                     test = "substring(@audience, 1, 1) = 
                                                          $DisplayComments
                                      or
                                      not(@audience) and $DisplayComments = 'I'
                                      or
                                      $DisplayComments = 'A'
                                      or 
                                      $whoAmI = 'DrugInfoSummary'">
   <xsl:choose>
    <xsl:when                 test = "Deletion">
     <xsl:choose>
      <xsl:when               test = "Deletion/@RevisionLevel = 'approved'">
       <span class="comdeleteappr">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:when>   
      <xsl:when                 test = "Deletion/@RevisionLevel = 'proposed'">
       <span class="comdeleteprop">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:when>
      <xsl:otherwise>
       <span class="commentnormal">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:when>
    <xsl:when                 test = "Insertion">
     <xsl:choose>
      <xsl:when               test = "Insertion/@RevisionLevel = 'approved'">
       <span class="cominsertappr">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:when>   
      <xsl:when                 test = "Insertion/@RevisionLevel = 'proposed'">
       <span class="cominsertprop">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:when>
      <xsl:otherwise>
       <span class="commentnormal">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:when>
    <xsl:when                 test = "Deletion">
      <xsl:if                   test = "Deletion/@RevisionLevel = 'proposed'">
       <span class="comdeleteprop">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:if>
    </xsl:when>
    <xsl:otherwise>
     <span class="commentnormal">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
      <xsl:apply-templates/>
      <xsl:text>] </xsl:text>
     </span>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:if>
 </xsl:template>


 <!-- 
 ================================================================
 Display the Comment elements with markup if the checkbox
 is checked.
 The comments are being displayed without insertion/deletion
 markup within insertion and are not displayed by default for 
 the deletions.
 ================================================================ -->
 <xsl:template               match = "Comment |
                                      ResponseToComment">

  <xsl:variable               name = "myScope"
                            select = "name()"/>

  <xsl:if                     test = "substring(@audience, 1, 1) = 
                                                $DisplayComments
                                      or
                                      not(@audience) and $DisplayComments = 'I'
                                      or
                                      $DisplayComments = 'A'">
   <xsl:choose>
    <xsl:when                 test = "Insertion">
     <xsl:choose>
      <xsl:when               test = "Insertion/@RevisionLevel = 'approved'">
       <span class="cominsertappr">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:when>   
      <xsl:when                 test = "Insertion/@RevisionLevel = 'proposed'">
       <span class="cominsertprop">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:when>
      <xsl:otherwise>
       <span class="commentnormal">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:when>
    <xsl:when                 test = "Deletion">
     <xsl:if                   test = "Deletion/@RevisionLevel = 'proposed'">
      <span class="comdeleteprop">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
       <xsl:apply-templates/>
       <xsl:text>] </xsl:text>
      </span>
     </xsl:if>
    </xsl:when>
    <xsl:otherwise>
     <span class="commentnormal">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
      <xsl:apply-templates/>
      <xsl:text>] </xsl:text>
     </span>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:if>
 </xsl:template>


 <!-- 
 ================================================================
 Display the Comment elements with markup if the checkbox
 is checked.
 The comments are being displayed without insertion/deletion
 markup within insertion and are not displayed by default for 
 the deletions.
 ================================================================ -->
 <xsl:template               match = "Comment |
                                      ResponseToComment"
                              mode = "compactNo">

  <xsl:variable               name = "myScope"
                            select = "name()"/>

  <xsl:if                     test = "substring(@audience, 1, 1) = 
                                                          $DisplayComments
                                      or
                                      not(@audience) and $DisplayComments = 'I'
                                      or
                                      $DisplayComments = 'A'">
   <xsl:choose>
    <xsl:when                 test = "Insertion">
     <xsl:choose>
      <xsl:when               test = "Insertion/@RevisionLevel = 'approved'">
       <span class="cominsertappr">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:when>   
      <xsl:when                 test = "Insertion/@RevisionLevel = 'proposed'">
       <span class="cominsertprop">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:when>
      <xsl:otherwise>
       <span class="commentnormal">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
        <xsl:apply-templates/>
        <xsl:text>] </xsl:text>
       </span>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:when>
    <xsl:when                  test = "Deletion">
     <xsl:if                   test = "Deletion/@RevisionLevel = 'proposed'">
      <span class="comdeleteprop">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
       <xsl:apply-templates/>
       <xsl:text>] </xsl:text>
      </span>
     </xsl:if>
    </xsl:when>
    <xsl:otherwise>
     <span class="commentnormal">
        <xsl:choose>
         <xsl:when            test = "$myScope = 'Comment'">
          <xsl:text> [Comment: </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:text> [Response: </xsl:text>
         </xsl:otherwise>
        </xsl:choose>
      <xsl:apply-templates/>
      <xsl:text>] </xsl:text>
     </span>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:if>
 </xsl:template>


 <!-- 
 ================================================================
 Display the StandardWording elements with markup if the checkbox
 is checked, otherwise just display regular text.
 ================================================================ -->
 <xsl:template               match = "StandardWording">
  <xsl:choose>                   
   <xsl:when                  test = "$ShowStandardWording = 'Y'">
    <font                    color = "#009900">
     <xsl:apply-templates/>
    </font>
   </xsl:when>
   <xsl:otherwise>
    <xsl:apply-templates/>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>

</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>