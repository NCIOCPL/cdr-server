<CdrDoc Type='Filter' Id='CDR0000385703'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Module: InScopeProtocol Related Links</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml      version = "1.0"?>
<!--
 ================================================================
     $Id: CDR0000385703.xml,v 1.5 2008-01-11 22:51:11 venglisc Exp $

     Filter to generate Study Category and Protocol Related Links
        Written by Volker Englisch, 2004-08-01

     $Log: not supported by cvs2svn $
 ================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "html"/>

 <!-- 
 =============================================================
 Display Protocol Special Category
 ============================================================ -->
 <xsl:template                   match = "ProtocolSpecialCategory">
  <xsl:if                         test = "not(
                                   preceding-sibling::ProtocolSpecialCategory)">
   <span class="big">Protocol Special Category</span>
  </xsl:if>
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <span class="bul">Special Category</span>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "SpecialCategory"/>
    </td>
   </tr>
   <xsl:apply-templates         select = "Comment"
                                  mode = "withAttribute">
    <xsl:with-param               name = "label"
                                select = "'Special Cat Comment'"/>
   </xsl:apply-templates>
  </table>
  <br />
 </xsl:template>


 <!-- 
 ===============================================================
 Display Protocol-Related Links
 =============================================================== -->
 <xsl:template                   match = "ProtocolRelatedLinks">
  <span class="big">Related Protocols</span>
  <br />
          
  <xsl:for-each                 select = "RelatedProtocols/
                                          InScopeProtocol">
   <xsl:choose>
    <xsl:when                     test = "starts-with(ProtocolIDs/
                                                      PrimaryID/
                                                      IDString, '***WARN')">
     <span class="warning"> 
      <xsl:value-of             select = "ProtocolIDs/
                                          PrimaryID/ 
                                          IDString"/>;
     </span>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of             select = "ProtocolIDs/
                                          PrimaryID/ 
                                          IDString"/>;
    </xsl:otherwise>
   </xsl:choose>

   <xsl:if                        test = "ProtocolIDs/
                                          OtherID/
                                          IDString">
    <xsl:value-of               select = "ProtocolIDs/OtherID/IDString"/>;
   </xsl:if>

   <xsl:choose>
    <xsl:when                     test = "starts-with(ProtocolTitle
                                                       [@Type = 'Professional'],
                                                      '***WARN')">
     <span class="warning">
      <xsl:value-of             select = "ProtocolTitle
                                            [@Type = 'Professional']"/>
     </span>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of             select = "ProtocolTitle
                                            [@Type = 'Professional']"/>
    </xsl:otherwise>
   </xsl:choose>
   <p/>                   
  </xsl:for-each>

  <span class="big">Related Websites</span>

  <xsl:for-each                 select = "RelatedWebsites">
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>URL</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:element                name = "a">
       <xsl:attribute             name = "href">
        <xsl:choose>
         <xsl:when                test = "contains(RelatedWebsites/
                                                   @cdr:xref,'http')">
          <xsl:value-of         select = "RelatedWebsites/@cdr:xref"/>
         </xsl:when>
         <xsl:otherwise>
          <xsl:value-of         select = "concat('http://',RelatedWebsites/
                                              @cdr:xref)"/>
         </xsl:otherwise>
        </xsl:choose>
       </xsl:attribute>
       <xsl:value-of            select = "RelatedWebsites/@cdr:xref"/>
      </xsl:element>
     </td>
    </tr>
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Name</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "RelatedWebsites"/>
     </td>
    </tr>
   </table>
  </xsl:for-each>

  <table        xsl:use-attribute-sets = "table">
   <xsl:apply-templates         select = "Comment"
                                  mode = "withAttribute">
    <xsl:with-param               name = "label"
                                select = "'Rel Websites Comment'"/>
   </xsl:apply-templates>
  </table>
  <p/>
 </xsl:template>
</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>