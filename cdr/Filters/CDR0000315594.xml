<CdrDoc Type='Filter' Id='CDR0000315594'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Copy XML for Organization</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<!--
     Copy XML for Organization
     Creator:  Volker Englisch
     Created:  05/22/2003
-->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "xml" 
                  omit-xml-declaration = "no"/>

 <xsl:include  href = "cdr:name:Module: Global Filter Templates"/>
 <xsl:include  href = "cdr:name:Module: Vendor Address Templates"/>
 <xsl:include  href = "cdr:name:Module: Vendor Phone Templates"/>


 <!--
 ======================================================================
 Template is using the default copy mode template from the Global 
 Filter Template module.
 ====================================================================== -->
 <xsl:template                   match = "Organization">
  <xsl:copy>
   <xsl:apply-templates           mode = "copy"/>
  </xsl:copy>
 </xsl:template>


 <!--
 ======================================================================
 Template to extract the Name for a Parent Organization
 ====================================================================== -->
 <xsl:template                   match = "ParentOrganization"
                                  mode = "copy">
  <OrganizationParent>
   <xsl:for-each                select = "Organization/@*">
    <xsl:attribute                name = "{name()}">
     <xsl:value-of              select = "."/>
    </xsl:attribute>
   </xsl:for-each>

   <xsl:value-of                select = "Organization/
                                          OrganizationNameInformation/
                                          OfficialName/
                                          Name"/>
  </OrganizationParent>
 </xsl:template> 


 <!--
 ======================================================================
 ====================================================================== -->
 <xsl:template                   match = "OrganizationLocation"
                                  mode = "copy">
  <OrganizationLocation>
   <xsl:for-each                select = "@*">
    <xsl:attribute                name = "{name()}">
     <xsl:value-of              select = "."/>
    </xsl:attribute>
   </xsl:for-each>
   <xsl:for-each                select = "Location/@*">
    <xsl:attribute                name = "{name()}">
     <xsl:value-of              select = "."/>
    </xsl:attribute>
   </xsl:for-each>
 
   <xsl:apply-templates           mode = "copy"/>
  </OrganizationLocation>
 </xsl:template>
    
 <!-- 
 Template to extract the organization parent name and flatten the hierarchy.
 For the Organization links within the ProfessionalInformation fragment, 
 however, the parent names are being dropped since these are not used for 
 anything.
 =========================================================================== -->
 <xsl:template                   match = "Location"
                                  mode = "copy">
  <OrganizationName>
   <xsl:if                        test = "../@OrderParentNameFirst">
    <xsl:attribute                name = "OrderParentNameFirst">
     <xsl:value-of              select = "../@OrderParentNameFirst"/>
    </xsl:attribute>
   </xsl:if>

   <xsl:value-of                select = "../../../
                                          OrganizationNameInformation/
                                          OfficialName/
                                          Name"/>
  </OrganizationName>

  <xsl:if                         test = "../@IncludeParentName = 'Yes'">
   <xsl:for-each                select = "../../../ParentOrganization">
    <xsl:call-template            name = "getParentName"/>
   </xsl:for-each>
  </xsl:if>
  <xsl:apply-templates          select = "PostalAddress | Phone | 
                                          TollFreePhone | Email |
                                          Fax           | WebSite"/>
 </xsl:template>

</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>