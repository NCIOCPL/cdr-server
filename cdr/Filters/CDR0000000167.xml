<CdrDoc Type='Filter' Id='CDR0000000167'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Person Protocol Review Report Filter 1</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>

<xsl:transform            xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                          xmlns:cdr = "cips.nci.nih.gov/cdr"
                            version = "1.0">

 <xsl:import                      href = "cdr:name:Contact Detail Formatter"/>

 <!-- 
 ======================================================================
 Extract the name and addresses (but not home address).
 This is used for generation of the Person Protocol Review Report.
 ====================================================================== -->
 <xsl:template                match = "/">
  <Person>
   <xsl:apply-templates      select = "/Person/PersonNameInformation"/>
   <xsl:apply-templates      select = "/Person/PersonLocations"/>
  </Person>
 </xsl:template>

 <!-- 
 ======================================================================
 Pull out the name and the professional qualifications.
 ====================================================================== -->
 <xsl:template                match = "PersonNameInformation">
  <xsl:variable                name = "givenName"
                             select = "GivenName"/>
  <Name>
   <xsl:if                     test = "$givenName">
    <xsl:value-of            select = "concat(GivenName, ' ')"/>
   </xsl:if>
   <xsl:value-of             select = "SurName"/>
   <xsl:for-each             select = "GenerationSuffix">
    <xsl:value-of            select = "concat(', ', .)"/>
   </xsl:for-each>
  </Name>
  <xsl:apply-templates       select = "ProfessionalSuffix"/>
 </xsl:template>

 <!-- 
 ======================================================================

 Create a string for the concatenated professional suffixes
 ====================================================================== -->
 <xsl:template                match = "ProfessionalSuffix">
  <ProfessionalSuffix>
   <xsl:for-each             select = "StandardProfessionalSuffix |
                                       CustomProfessionalSuffix">
    <xsl:value-of            select = "concat(', ', .)"/>
   </xsl:for-each>
  </ProfessionalSuffix>
 </xsl:template>

 <!-- 
 ======================================================================
 Drop down to the practice locations.
 ====================================================================== -->
 <xsl:template                match = "PersonLocations">
  <xsl:apply-templates       select = "PrivatePractice/
                                       PrivatePracticeLocation"/>
  <xsl:apply-templates       select = "OtherPracticeLocation"/>
 </xsl:template>

 <!-- 
 ======================================================================
 Extract one PrivatePracticeLocation element.
 ====================================================================== -->
 <xsl:template                match = "PrivatePracticeLocation">
  <PrivatePracticeLocation>
   <xsl:attribute              name = "id">
    <xsl:value-of            select = "@cdr:id"/>
   </xsl:attribute>
   <xsl:if                     test = "../@PreviousLocation">
    <xsl:attribute             name = "PreviousLocation">
     <xsl:value-of           select = "../@PreviousLocation"/>
    </xsl:attribute>
   </xsl:if>
   <Location>
    <xsl:apply-templates     select = "PostalAddress"/>
    <xsl:apply-templates     select = "Phone"/>
    <xsl:apply-templates     select = "TollFreePhone"/>
    <xsl:apply-templates     select = "Fax"/>
    <xsl:apply-templates     select = "Email"/>
    <xsl:apply-templates     select = "WebSite"/>
   </Location>
  </PrivatePracticeLocation>
 </xsl:template>

 <!-- 
 ======================================================================
 Assemble an other practice location.
 ====================================================================== -->
 <xsl:template                match = "OtherPracticeLocation">
  <xsl:variable                name = "orgLink"
                             select = "OrganizationLocation/@cdr:ref"/>
  <xsl:variable                name = "orgFrag"
                             select = "substring-after($orgLink, '#')"/>
  <xsl:variable                name = "org"
                             select = "document(concat('cdrx:', $orgLink))"/>
  <xsl:variable                name = "orgAddress"
                             select = "$org/Organization
                                           /OrganizationLocations
                                           /OrganizationLocation
                                           /Location[@cdr:id = $orgFrag]"/>
  <OtherPracticeLocation>

   <xsl:attribute              name = "id">
    <xsl:value-of            select = "@cdr:id"/>
   </xsl:attribute>

   <xsl:if                     test = "@PreviousLocation">
    <xsl:attribute             name = "PreviousLocation">
     <xsl:value-of           select = "@PreviousLocation"/>
    </xsl:attribute>
   </xsl:if>

   <OrgName>
    <xsl:value-of            select = "$org/Organization
                                           /OrganizationNameInformation
                                           /OfficialName/Name"/>
   </OrgName>

   <PersonTitle>
    <xsl:value-of            select = "PersonTitle"/>
   </PersonTitle>

   <Location>

    <!-- Get the postal address. -->
    <xsl:choose>
     <xsl:when                  test = "SpecificPostalAddress">
      <xsl:apply-templates    select = "SpecificPostalAddress"/>
     </xsl:when>
     <xsl:otherwise>
      <xsl:apply-templates    select = "$orgAddress/PostalAddress"/>
     </xsl:otherwise>
    </xsl:choose>

    <!-- Get the phone. -->
    <xsl:choose>
     <xsl:when                 test = "SpecificPhone">
      <xsl:apply-templates   select = "SpecificPhone"/>
     </xsl:when>
     <xsl:otherwise>
      <xsl:apply-templates   select = "$orgAddress/Phone"/>
     </xsl:otherwise>
    </xsl:choose>

    <!-- Get the toll-free phone. -->
    <xsl:choose>
     <xsl:when                 test = "SpecificTollFreePhone">
      <xsl:apply-templates   select = "SpecificTollFreePhone"/>
     </xsl:when>
     <xsl:otherwise>
      <xsl:apply-templates   select = "$orgAddress/TollFreePhone"/>
     </xsl:otherwise>
    </xsl:choose>

    <!-- Get the fax number. -->
    <xsl:choose>
     <xsl:when                 test = "SpecificFax">
      <xsl:apply-templates   select = "SpecificFax"/>
     </xsl:when>
     <xsl:otherwise>
      <xsl:apply-templates   select = "$orgAddress/Fax"/>
     </xsl:otherwise>
    </xsl:choose>

    <!-- Get the email address.  Don't use org's email (per LG 21May02). -->
    <xsl:apply-templates     select = "SpecificEmail"/>

    <!-- Get the web site address.  Don't use org's (per LG 21May02). -->
    <xsl:apply-templates     select = "SpecificWebSite"/>

   </Location>

  </OtherPracticeLocation>

 </xsl:template>

</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>