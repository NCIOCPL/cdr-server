<CdrDoc Type='Filter' Id='CDR0000000079'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Health Professional Summary Report</DocTitle>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>

<!-- ===================================================================
      Filter to create Health Professional Summary Report
     =================================================================== -->

  <xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                 version="1.0"
                 xmlns:cdr="cips.nci.nih.gov/cdr">
      <xsl:import    href = "cdr:name:InLine Markup Formatter"/>
      <xsl:include   href = "cdr:name:Table Formatter"/>

   <xsl:output method="html"/>
   <xsl:template match="/">
   <!--Filter written by C.Burg - 6/12/2001 -->
    <!-- Modified to correct format of citations imbedded in text 6-24-2002 -->
    <!-- fixed bug in TOC  7/10/2002 -->
   <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
    <HTML>
    <HEAD>
     <xsl:variable name="cdrdocs" select="document('cdrx:/*/CdrCtl')"/>

    <TITLE><xsl:value-of select="document('cdrutil:/docid')"/>&#xa0;&#xa0;<xsl:value-of select="substring-before($cdrdocs/CdrDocCtl/DocTitle,';')"/></TITLE>
     
   <!--Inline sytle sheet to display H2 and H4 headers in Navy -->
     <STYLE>
       h2 { font style: bold font size: 14pt}
       h3 { font style: bold font size: 13pt}
       h4 { font style: bold font size: 12pt}
       td { font size: 10pt}
          <!-- P {font size: 12pt}
           p {font size: medium}
           dd {font size: medium}
           dt {font size: medium}
           li {font size: medium}
           pre {font size: medium}
           H3  {font size: medium}-->
           li.lnone {list-style-type: none}
  
     </STYLE>
     <!--
     <LINK REL='stylesheet' 
           HREF='/stylesheets/protocol2.css' 
           TYPE='text/css' /> -->
    </HEAD>
     <BASEFONT FACE='Arial, Helvetica, sans-serif' /> 
    <xsl:apply-templates select="Summary"/>
    </HTML>
   </xsl:template>

  <!-- ==================================================================
           Display summary title
       ================================================================== -->

<xsl:template match="Summary">
<!--<xsl:if test="SummaryMetaData/SummaryAudience='Health professionals'">--><BODY>
 <xsl:for-each select="SummaryTitle">
 <H2><xsl:value-of select="."/></H2>
 </xsl:for-each>

<!-- ==================================================================
          Display a Contents List of Summary Section Titles 
     =================================================================== -->


<dl>
<xsl:for-each select="SummarySection">
<dt><xsl:value-of select="Title"/></dt><br />
<xsl:choose>
<xsl:when test="descendant::SummarySection">
<dl>
<xsl:for-each select="./SummarySection">
<xsl:if test="not(SummarySection/SummarySection/SummarySection/Title)">
<dt><xsl:value-of select="Title"/></dt><br />
<dl>
<xsl:for-each select=".//SummarySection">
<dt><xsl:value-of select="Title"/></dt><br />
</xsl:for-each>
</dl>
</xsl:if>
</xsl:for-each>
</dl>
</xsl:when>
<xsl:otherwise>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</dl>
<xsl:apply-templates/>
</BODY>
</xsl:template>

 

<!-- ======================================================================
    templates to handle summary section anchors,list formats, and paragraphs
     that can occur in any order in the summaries 
     ====================================================================== -->

<!-- Display a summary section title and include anchor --> 

<!--<xsl:template match="SummarySection/Title | SummarySection/SummarySection/Title">
<h4><a name="{translate(.,' ','')}"><xsl:apply-templates/></a></h4>
</xsl:template>-->

<xsl:template match="SummarySection/Title">
<h2><a name="{translate(.,' ','')}"><xsl:apply-templates/></a></h2>
</xsl:template>

<xsl:template match="SummarySection/SummarySection/Title">
<h3><a name="{translate(.,' ','')}"><xsl:apply-templates/></a></h3>
</xsl:template>

<xsl:template match="SummarySection/SummarySection/SummarySection/Title | SummarySection/SummarySection/SummarySection/SummarySection/Title">
<h4><a name="{translate(.,' ','')}"><xsl:apply-templates/></a></h4>
</xsl:template>


<!-- ======================================================================
                           display footnotes
     =================================================================== -->

             <xsl:template match="CitationLink">
             <xsl:variable name="nextRef" select="position()+1"/>
             <xsl:variable name="firstRef" select="position()-1"/>
             <xsl:variable name="ref" select="."/>
             <xsl:if test="name(../node()[$firstRef])!='CitationLink'">
	     <xsl:value-of select="'['"/>
	     </xsl:if>
                    
           
	    <xsl:value-of select="@refidx"/>

	    
	    	
	     <xsl:if test="name(../node()[$nextRef])='CitationLink'">
	    <xsl:value-of select="','"/>
	    </xsl:if>
            
          
           <xsl:if test="name(../node()[$nextRef])!='CitationLink'">
	    <xsl:value-of select="']'"/>
           </xsl:if>   
             
	   </xsl:template>

           <!-- <xsl:template match="CitationLink">
            <xsl:if test="position()=position()+1">
            <xsl:for-each select="@refidx">
            <xsl:sort order="descending">
            <xsl:value-of select="."/>
            </xsl:sort>
            </xsl:for-each>
            </xsl:if>-->
             

   <!--  =========================================================              
                           display footnotes
         ========================================================== 

             <xsl:template match="ProtocolLink">
            <xsl:variable name="nextRef" select="position()+1"/>
            <xsl:variable name="firstRef" select="position()-1"/>
            <xsl:variable name="ref" select="."/>
            <xsl:if test="name(../node()[$firstRef])!='ProtocolLink'">
	    <xsl:value-of select="'['"/>
	    </xsl:if>
                      
           
	    <xsl:value-of select="@refidx"/>

	    
	
	     <xsl:if test="name(../node()[$nextRef])='ProtocolLink'">
	    <xsl:value-of select="','"/>
	    </xsl:if>
            
           
           <xsl:if test="name(../node()[$nextRef])!='ProtocolLink'">
	    <xsl:value-of select="']'"/>
           </xsl:if>
            
	    </xsl:template>-->

 <!-- ============================================================ 
                         Display a note
      ============================================================ 

                    <xsl:template match=" ">
                   <i><xsl:text>Note:</xsl:text></i>
                    <i><xsl:value-of select="."/></i>
                    </xsl:template>-->

<!-- =========================================================
                       Link to glossaryTermRefs 
     =========================================================-->
<xsl:template match="GlossaryTermRef">
 <a>
 <xsl:attribute name="href">
 <xsl:value-of select="concat('/cgi-bin/cdr/Filter.py?DocId=',@cdr:href,'&amp;Filter=name:Glossary+Term+Display+for+Patient+Summaries')"/>
 </xsl:attribute>
<xsl:value-of select="."/>
</a>
</xsl:template>



<!-- ===================================================================
                 display references 
     ================================================================== -->

<xsl:template match="ReferenceList">
<xsl:if test="Reference">
<h3><b>References:</b></h3>
<ol>
<xsl:for-each select="Reference">
<xsl:variable name="Refidx" select="@refidx"/>
<p><li><a name="{$Refidx}"><xsl:apply-templates select=".">
</xsl:apply-templates></a></li></p>
</xsl:for-each>
</ol>
</xsl:if>
</xsl:template>



<!-- =======================================================================
       This template deletes data elements not used in the display 
     ==================================================================== -->

<xsl:template match="PdqKey | PDQBoard | SectionType |Diagnosis | SummaryLanguage| SummaryType |SummaryAudience | SummaryTitle |MainTopics | SecondaryTopics | DocId| DateLastModified"/>

<!-- ============================================================
                          Display Paragraphs 
     ============================================================== -->

                         <xsl:template match="Para">
                         <p><xsl:apply-templates/></p>
                         </xsl:template>

                       
<!-- ================================================================== 
                       Display an Insertion 
     =================================================================== -->

                 <xsl:template match="Insertion">
                 <font color="#FF0000"><xsl:apply-templates/></font>
                 </xsl:template>

<!-- ==================================================================
                     Display a Deletion 
     =================================================================== -->

              <xsl:template match="Deletion">
              <strike><xsl:apply-templates/></strike>
              </xsl:template>




<!-- =====================================================================
            Create a link to another document or website 
     ================================================================== -->

          <xsl:template match="ExternalRef">
          <xsl:variable name="nlink" select="@cdr:xref"/>
          <a href="{$nlink}"><xsl:apply-templates/></a>
          </xsl:template>

           <xsl:template match="Reference/ExternalRef">
          <xsl:variable name="nlink" select="@cdr:xref"/>
          <a href="{$nlink}"><xsl:apply-templates/></a>
          </xsl:template>


<!--=====================================================================
                              Display tables -old format
    ==================================================================== -->

<xsl:template match="Para/TT">
<pre><xsl:apply-templates/></pre>
</xsl:template>

  <!-- ====================================================================
                    Display a table-new format
      =================================================================== -->
            <!-- <xsl:template match="Table">
             <xsl:if test="Title">
                 <br />
             <b><xsl:apply-templates select="Title"/></b><br />
              </xsl:if>
              <table border='1' valign='top' cellspacing='0' cellpadding='0' width='90%'>-->
              <!-- <xsl:attribute name='border'>1</xsl:attribute>
              <xsl:for-each select="TGroup/THead/Row">
              <tr>
              <xsl:for-each select="entry">
              <th><xsl:apply-templates/></th>
              </xsl:for-each>
              </tr>
              </xsl:for-each>
              <xsl:for-each select="TGroup/TBody/Row">
              <tr>
              <xsl:for-each select='entry'>
              <xsl:variable name="cols" select="../../..@Cols"/>
              <xsl:if test="not(@NameEnd)"> 
              <td><xsl:apply-templates select="."/></td>
              </xsl:if>
              <xsl:if test="@NameEnd"> 
              
             <td colspan='{$cols}width='80%'><xsl:apply-templates select="."/></td>
            </xsl:if>
       
            </xsl:for-each>
            </tr>
            </xsl:for-each>
            <xsl:for-each select="TGroup/TFoot/Row">
              <tr>
              <xsl:for-each select="entry">
               <xsl:variable name="cols" select="../../..@Cols"/>
              <td colspan='{$cols}' width='60%'><xsl:apply-templates/></td>
              </xsl:for-each>
              </tr>
              </xsl:for-each>
      
            </table>

           </xsl:template>-->
                
            

             
            
        

</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>