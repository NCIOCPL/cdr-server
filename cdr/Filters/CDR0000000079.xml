<CdrDoc Type='Filter' Id='CDR0000000079'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Health Professional Summary Report</DocTitle>
<DocComment>CVS-V1.32: Proposed deletion</DocComment><ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<!-- 
===================================================================
Filter to create Health Professional Summary Report
(Based on new Denormalization)
=================================================================== -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
               exclude-result-prefixes = "cdr">

 <xsl:output                    method = "html" 
                                indent = "no"/>

 <xsl:include   href = "cdr:name:Module: InLine Markup Formatter"/>
 <xsl:include   href = "cdr:name:Module: Checkbox Formatter"/>
 <xsl:include   href = "cdr:name:Module: Table Formatter"/>
 <xsl:include   href = "cdr:name:Module: STYLE Default"/>  

 <!-- 
 ==================================================================
 Create HTML Output
 ================================================================== -->
 <xsl:template                   match = "/">
  <!--Filter written by C.Burg - 6/12/2001 -->
  <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
  <HTML>
   <HEAD>
    <xsl:variable                 name = "cdrdocs" 
                                select = "document('cdrx:/*/CdrCtl')"/>
    <TITLE>
     <xsl:value-of              select = "document('cdrutil:/docid')"/>
     <xsl:text>: </xsl:text>
     <xsl:value-of              select = "substring-before($cdrdocs/
                                          CdrDocCtl/DocTitle,';')"/>
    </TITLE>
     
    <!--Inline sytle sheet to display H2 and H4 headers in Navy -->
    <STYLE type='text/css'>
     <xsl:call-template           name = "defaultStyle"/>  

     h2 { font style: bold font size: 14pt}
     h3 { font style: bold font size: 13pt}
     h4 { font style: bold font size: 12pt}
     td { font size: 8pt}
    </STYLE>
   </HEAD>
   <BASEFONT                      FACE = 'Arial, Helvetica, sans-serif'/> 
   <xsl:apply-templates         select = "Summary"/>
  </HTML>
 </xsl:template>

 <!-- 
 ==================================================================
 Display summary title
 ================================================================== -->
 <xsl:template                   match = "Summary">
  <!-- 
  Do not run this report if this is a newly reformatted patient 
  summary.  The Patient Summary QC report will need to be used
  instead
  ============================================================= -->
  <xsl:choose>
   <xsl:when                      test = "//SummaryAudience='Patients'
                                          and
                                          //KeyPoint">
    <BODY>
     <h2>ERROR:</h2>
     <h3>Redline/Strikeout QC Report not valid for reformatted patient 
         summaries</h3>
    </BODY>
   </xsl:when>
   <xsl:otherwise>
    <BODY>
     <xsl:apply-templates       select = "SummaryTitle" 
                                  mode = "TOC"/>  

     <!-- 
     ==================================================================
     Display a Contents List of Summary Section Titles 
     10/06/2002 - Modified code to remove 4th level titles (CB) 
     10/08/2002 - took breaks out at end of titles.
     =================================================================== -->
     <ul Class="lnone">
      <xsl:for-each             select = "SummarySection">
       <xsl:call-template         name = "TocSummarySection">
        <xsl:with-param           name = "level"
                                select = "1"/>
       </xsl:call-template>  
      </xsl:for-each>
     </ul>

     <xsl:apply-templates/>

    </BODY>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!-- Remove the CdrDocCtl elements from the HTML output -->
 <xsl:template                  match = "CdrDocCtl"/>


 <!-- 
 ======================================================================
 Display CitationLinks
 ===================================================================== -->
    <xsl:template              match = "Citation">
     <xsl:variable              name = "nextRef" 
                              select = "position()+1"/>
     <xsl:variable              name = "firstRef" 
                              select = "position()-1"/>
     <xsl:variable              name = "ref" 
                              select = "."/>
      
     <!--
     Displaying the Left Bracket of a list of citations with marked up 
     ================================================================= -->
     <xsl:if                   test = "name(../node()[$firstRef])!= 'Citation'">
      <xsl:choose>
       <xsl:when                 test = "@InsertionOrDeletion = 'Insertion'">
        <font color="RED">
         <xsl:text>[</xsl:text>
        </font>
       </xsl:when>
       <xsl:when                 test = "@InsertionOrDeletion = 'Deletion'">
        <xsl:choose>
         <xsl:when               test = "@existing">
          <xsl:text>[</xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <strike>
           <xsl:text>[</xsl:text>
          </strike>
         </xsl:otherwise>
        </xsl:choose>
       </xsl:when>
       <xsl:otherwise>
        <xsl:text>[</xsl:text>
       </xsl:otherwise>
      </xsl:choose>
     </xsl:if>
                    
     <xsl:choose>
      <xsl:when                 test = "@InsertionOrDeletion
                                       = 'Deletion'">
       <strike>
        <xsl:value-of         select = "@refidx"/>
       </strike>
      </xsl:when> 
      <xsl:when                 test = "@InsertionOrDeletion
                                        = 'Insertion'">
       <xsl:choose>
        <xsl:when               test = "@RevisionLevel='proposed'">
         <font color="FUCHSIA">
          <xsl:value-of       select = "@refidx"/>
         </font>
        </xsl:when>
        <xsl:otherwise>
         <font color="RED">
          <xsl:value-of       select = "@refidx"/>
         </font>
        </xsl:otherwise>
       </xsl:choose>
      </xsl:when> 
      <xsl:otherwise>
        <xsl:value-of         select = "@refidx"/>
      </xsl:otherwise> 
     </xsl:choose>  	    
	    	
     <!--
     Displaying the comma of a list of citations with marked up 
     ========================================================== -->
     <xsl:if                    test = "name(../node()[$nextRef])= 'Citation'">
      <xsl:choose>
       <xsl:when                 test = "@InsertionOrDeletion = 'Insertion'">
        <font color="RED">
         <xsl:text>, </xsl:text>
        </font>
       </xsl:when>
       <xsl:when                 test = "@InsertionOrDeletion = 'Deletion'">
        <xsl:choose>
         <xsl:when               test = "@existing">
          <xsl:text>, </xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <strike>
           <xsl:text>, </xsl:text>
          </strike>
         </xsl:otherwise>
        </xsl:choose>
       </xsl:when>
       <xsl:otherwise>
        <xsl:text>, </xsl:text>
       </xsl:otherwise>
      </xsl:choose>
     </xsl:if>
          
     <!--
     Displaying the Right Bracket of a list of citations with marked up 
     ================================================================== -->
     <xsl:if                    test = "name(../node()[$nextRef])!= 'Citation'">
      <xsl:choose>
       <xsl:when                 test = "@InsertionOrDeletion = 'Insertion'">
        <font color="RED">
         <xsl:text>]</xsl:text>
        </font>
       </xsl:when>
       <xsl:when                 test = "@InsertionOrDeletion = 'Deletion'">
        <xsl:choose>
         <xsl:when               test = "@existing">
          <xsl:text>]</xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <strike>
           <xsl:text>]</xsl:text>
          </strike>
         </xsl:otherwise>
        </xsl:choose>
       </xsl:when>
       <xsl:otherwise>
        <xsl:text>]</xsl:text>
       </xsl:otherwise>
      </xsl:choose>
     </xsl:if>
    </xsl:template>

<!-- =======================================================================
       This template deletes data elements not used in the display 
     ==================================================================== --> 
    <xsl:template              match = "PdqKey | PDQBoard | SectionType |
                                        Diagnosis | SummaryLanguage |       
                                        SummaryType |SummaryAudience |
                                        SummaryTitle |MainTopics | 
                                        SecondaryTopics | DocId| 
                                        DateLastModified | PatientVersionOf |
                                        TranslationOf | ReplacementFor"/>
                       
<!-- ================================================================== 
       Display an Insertion 
     =================================================================== -->
    <xsl:template              match = "Insertion">
     <xsl:choose>
      <xsl:when                 test = "@RevisionLevel = 'proposed'">
       <font color="FUCHSIA">
        <xsl:apply-templates/>
       </font>
      </xsl:when>
      <xsl:otherwise>
       <font color="RED">
        <xsl:apply-templates/>
       </font>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:template>
         
<!-- ==================================================================
       Display a Deletion 
     =================================================================== -->
    <xsl:template              match = "Deletion">
      <xsl:choose>
      <xsl:when                 test = "@RevisionLevel = 'proposed'">
       <strike>
       <font color="FUCHSIA">
        <xsl:apply-templates/>
       </font>
       </strike>
      </xsl:when>
      <xsl:otherwise>
       <strike>
        <xsl:apply-templates/>
       </strike>
      </xsl:otherwise>
     </xsl:choose>
     </xsl:template>

 <!-- 
 ================================================================
 Display Comments 
 ================================================================ -->
 <xsl:template                  match = "Comment">
  <xsl:apply-templates         select = "." 
                                 mode = "RS"/>
 </xsl:template>  


 <!-- 
 ================================================================
 Display a Note
 ================================================================ -->
 <xsl:template                  match = "Note">
  <xsl:apply-templates         select = "." 
                                 mode = "RS"/>
 </xsl:template>  


<!-- =====================================================================
       Display references
     ===================================================================== -->
 <xsl:template              match = "ReferenceList"> 
   <xsl:choose>
    <xsl:when                test = "//SummaryLanguage='Spanish'">
     <h3>Referencias:</h3>
    </xsl:when>
    <xsl:otherwise>
     <h3>References:</h3>
    </xsl:otherwise>
   </xsl:choose>    
       
   <ol>
    <xsl:for-each           select = "Citation">
     <xsl:call-template       name = "markupCitation"/>
    </xsl:for-each>
   </ol>
 </xsl:template>

 <!--
   ==============================================================
      Display Section Titles 
      Temporary until all Patient summaries are in new format
   ============================================================  -->
    <xsl:template               match ="Title">
    <xsl:apply-templates        select = "."
                                mode="RB"/>
    </xsl:template>
       
     

 <!-- 
 =====================================================================
 Display Citations with Markup
 ===================================================================== -->
 <xsl:template                 name = "markupCitation"> 
  <xsl:choose>
   <xsl:when                 test = "@InsertionOrDeletion = 'Insertion'">
    <xsl:choose>
     <xsl:when               test = "@existing">
      <li>
       <xsl:value-of       select = "."/>
       <br/>
       <br/>
      </li>
     </xsl:when>
     <xsl:otherwise>
      <li>
       <font color="RED">
        <xsl:value-of       select = "."/>
       </font>
       <br/>
       <br/>
      </li>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:when>
   <xsl:when                 test = "@InsertionOrDeletion = 'Deletion'">
    <xsl:choose>
     <xsl:when               test = "@existing">
      <li>
       <xsl:value-of       select = "."/>
       <br/>
       <br/>
      </li>
     </xsl:when>
     <xsl:otherwise>
      <li>
       <strike>
        <xsl:value-of       select = "."/>
       </strike>
       <br/>
       <br/>
      </li>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:when>
   <xsl:otherwise>
    <li>
     <xsl:value-of         select = "."/>
     <br/>
     <br/>
    </li>
   </xsl:otherwise>
  </xsl:choose>    
 </xsl:template>

 

 <!-- 
 ==============================================================
 Display a Glossary Link
 ============================================================== -->
 <xsl:template                  match = "GlossaryTermRef | LOERef">
  <xsl:choose>
   <xsl:when                     test = "/Summary/SummaryMetaData/
                                          SummaryAudience = 
                                                        'Health professionals'
                                          and 
                                         /Summary/SummaryMetaData/
                                          SummaryType != 
                                       'Complementary and alternative medicine' 
                                          and
                                         /Summary/SummaryMetaData/
                                          SummaryLanguage = 'English'">
                                                                    
    
                              
    <xsl:apply-templates      select = "."  
                                mode = "HPE"/>
   </xsl:when>
   <xsl:when                    test = "/Summary/SummaryMetaData/
                                         SummaryType = 
                                     'Complementary and alternative medicine'">
        
    <xsl:apply-templates      select = "."  
                                mode = "PE"/>
   </xsl:when>
   <xsl:when                    test = "/Summary/
                                         SummaryMetaData/SummaryAudience =
                                                         'Health professionals' 
                                         and 
                                        /Summary/SummaryMetaData/
                                         SummaryLanguage = 'Spanish'">
    <xsl:apply-templates      select = "."  
                                mode = "HPS"/>
   </xsl:when>
   <xsl:otherwise>
    <xsl:apply-templates/>
   </xsl:otherwise>
  </xsl:choose> 
 </xsl:template>
</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>