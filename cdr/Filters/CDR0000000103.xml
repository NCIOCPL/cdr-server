<CdrDoc Type='Filter' Id='CDR0000000103'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Denormalization Filter (1/1): Political SubUnit </DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<!-- =====================================================================
        Filter to Denormalize Political SubUnit XML
     ===================================================================== -->

  <xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                 version="1.0"
                 xmlns:cdr="cips.nci.nih.gov/cdr">
    <xsl:output method="xml" omit-xml-declaration="no"/>

        <xsl:template match="PoliticalSubUnit">
   <xsl:copy>

 <!-- ==================================================================
           copy control information and generate current date 
      ================================================================== -->
<xsl:apply-templates select="document('cdrutil:/docid')" mode="copy"/>
<xsl:apply-templates select="document('cdrx:/*/CdrCtl')" mode="copy"/>

<!-- ==================================================================
                   copy country full and short name data elements 
     ================================================================ -->

<xsl:apply-templates select="PoliticalSubUnitFullName" mode="copy"/>    
<xsl:apply-templates select="PoliticalSubUnitShortName" mode="copy"/>
 <xsl:for-each select="Country">
 <xsl:variable name="cdr:ref" select="@cdr:ref"/>
 <CountryName cdr:ref="{$cdr:ref}">
<xsl:if test="contains(@cdr:ref,'CDR')">
     <xsl:variable name="CtyID" select="@cdr:ref"/>
     <xsl:variable name="CtyInfo" select="document(concat('cdr:',$CtyID,'/lastp'))"/>
     
      <xsl:for-each select="$CtyInfo/Country">
      <xsl:apply-templates select="CountryFullName"/>
      </xsl:for-each>
      </xsl:if>
      </CountryName>
      </xsl:for-each>

<!-- =====================================================================
                      copy PDQ key ID 
     ==================================================================== -->
          <xsl:apply-templates select="PdqKey" mode="copy"/> 
          </xsl:copy> 
          </xsl:template> 

  <!-- ================================================================= 
     Template rule used to do XML to XML transformations which
     copies any attribute node, or node that is child of of something 
     ================================================================== -->

    <xsl:template match="@*|node()" mode="copy">
       <xsl:copy>
       <xsl:apply-templates select="@*" mode="copy"/>
       <xsl:apply-templates mode="copy"/>
       </xsl:copy> 
    </xsl:template>
    
</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>