<CdrDoc Type='Filter' Id='CDR0000000135'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Vendor Filter: Country</DocTitle>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>

  <!--======================================================================
             Filter to create Vendor XML for Country
      ====================================================================== -->
  <xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                    version="1.0"
                 xmlns:cdr="cips.nci.nih.gov/cdr"
            exclude-result-prefixes="cdr">
    
    <xsl:output method="xml" omit-xml-declaration="no" indent="yes"/>

  <!-- =================================================================== 
         Copy DocId, CountryFullName, Continent, and PostalCodePosition
        ================================================================= -->
   
<xsl:template match="Country">
 <xsl:text disable-output-escaping="yes">
&lt;!DOCTYPE Country &gt;</xsl:text>

<xsl:element name='{name()}'>
<xsl:for-each  select="document('cdrutil:/docid')">
<xsl:attribute name="id">
<xsl:value-of select="."/>
</xsl:attribute>
</xsl:for-each>
<xsl:if test="PdqKey">
<xsl:attribute name="LegacyPDQID">
<xsl:value-of select="PdqKey"/>
</xsl:attribute>
</xsl:if>

<xsl:apply-templates  select="CountryFullName" mode="copy"/>
<xsl:apply-templates  select="CountryShortName" mode="copy"/>
<xsl:apply-templates  select="CountryAlternativeName" mode="copy"/>
<xsl:apply-templates  select="Continent" mode="copy"/>
<xsl:apply-templates  select="PostalCodePosition" mode="copy"/>
</xsl:element>
</xsl:template>

<!-- ===================================================================
     Template rule used to do XML to XML transformations which
     copies any attribute node, or node that is child of of something 
     ==================================================================== -->

  <!--  <xsl:template match="@*|node()" mode="copy">
       <xsl:copy>
       <xsl:apply-templates select="@*" mode="copy"/>
       <xsl:apply-templates mode="copy"/>
       </xsl:copy> 
    </xsl:template>-->

      <xsl:template                  match = "@*"
                                 mode = "copy">
  <xsl:copy/>
 </xsl:template>

 <xsl:template                  match = "*"
                                 mode = "copy">
  <xsl:element                   name = "{name()}">
   <xsl:apply-templates        select = "@*"
                                 mode = "copy"/>
   <xsl:apply-templates          mode = "copy"/> 
  </xsl:element>
 </xsl:template>


</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>