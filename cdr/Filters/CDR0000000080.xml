<CdrDoc Type='Filter' Id='CDR0000000080'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">InScopeProtocol Patient QC Content Report filter</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>

<!-- ================================================================
      Filter to create a Patient InScope Protocol QC Report
     ================================================================= -->
    
  <xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                 version="1.0"
                 xmlns:cdr="cips.nci.nih.gov/cdr">
  <xsl:include  href = "cdr:name:Module: HP InScopeProtocol Titles"/>
  <xsl:include  href = "cdr:name:Module: HP InScopeProtocol Identification"/>
  <xsl:include   href = "cdr:name:Module: Patient InScopeProtocol Abstract"/>
  <xsl:include   href = "cdr:name:Module: HP InScopeProtocol Abstract"/>
  <xsl:include   href = "cdr:name:Module: HP InScopeProtocol Record Information"/>
   <xsl:include   href="cdr:name:Module: InLine Markup Formatter"/> 
  <xsl:include   href = "cdr:name:Module: Table Formatter"/>
  <xsl:include   href = "cdr:name:Module: STYLE Default"/> 
 

                   <xsl:output method="html"/>
   <xsl:template match="/">

  <!--Filter written by C. Burg - 6/21/2001 -->
  <!-- Made tabular by Nanci - 8/7/2003 -->
  
   <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
    <HTML>
    <xsl:variable name="cdrdocs" select="document('cdrx:/*/CdrCtl')"/>
<HEAD>
    <xsl:variable                name="cdrmydoc" 
                                 select="document('cdrx:/*/CdrCtl')"/>
      
     <xsl:variable      name = "docID"
                                select = "document('cdrutil:/docid')"/>
 
            <TITLE>
         <xsl:value-of   select = "concat('CDR', 
                                   number(
                                   substring-after($docID, 'CDR')))"/>
                                   <xsl:text>: </xsl:text>
                                   <xsl:value-of  select="
                                   substring-before
                                   ($cdrmydoc/CdrDocCtl/DocTitle,';')"/>  
                                                                                                                                           
            </TITLE>
                    
     
     <!--
     <LINK REL='stylesheet' 
           HREF='/stylesheets/protocol2.css' 
           TYPE='text/css' /> -->
    </HEAD>
   <!-- <STYLE>
       li.disc  {list-style:disc}
       li.square {list-style:square}
       li.lnone {list-style-type: none}
       ol.little-alpha { list-style: lower-alpha; }
       ol.A { list-style: upper-alpha; }
       ol.little-roman { list-style: lower-roman; }
       ol.I { list-style: upper-roman; }
       ol.d { list-style: decimal; }

    </STYLE>-->
     <STYLE type='text/css'>
     <xsl:call-template           name = "defaultStyle"/>  

    <!-- h2 { font style: bold font size: 14pt}
     h3 { font style: bold font size: 13pt}
     h4 { font style: bold font size: 12pt}
     td { font size: 8pt}-->
    </STYLE>
   
     <BASEFONT FACE='Arial, Helvetica, sans-serif' /> 
    <xsl:apply-templates select="InScopeProtocol | ScientificProtocolInfo"/>
    </HTML>
    </xsl:template>
  <!-- Generate the HTML for the Patient QC Report-->
  <xsl:template match="InScopeProtocol | ScientificProtocolInfo">
    <BODY>

 <!-- ====================================================================
       Display Report heading and subheading
      ==================================================================== -->
  
  <b><font size='4'><center>Patient Protocol<br />QC Report</center></font></b>
 <b><font size='3'><center><xsl:value-of select="document('cdrutil:/date/%25B %25#d, %25Y %25#I:%25M%25p')"/></center></font></b><br /><br />

  <p>
   <xsl:variable                name = "docID"
                                select = "document('cdrutil:/docid')"/>
  <b>
 <font size='4'>
 <xsl:value-of                 select = "concat('CDR', 
                                         number(
                                         substring-after($docID, 'CDR')))"/>

 </font>
 </b>
  
  </p>
  <xsl:variable name="cdrdoc" select="document('cdrx:/*/CdrCtl')"/>
  <xsl:apply-templates/>
   </BODY>
 </xsl:template>


<!--===============================================================
    Display Protocol Professional or Patient Title
    ================================================================ -->

     <xsl:template match="ProtocolTitle[@Type='Patient']">
      <hr />
      <b>
      <font size='5'>Patient Abstract</font>
      </b>
      <br />
      <br />
      <b><font size='3'>Patient Title</font></b><br />
      <xsl:apply-templates/>
       <br />
      </xsl:template>

  <!-- 
 ================================================================
 Display a Note
 ================================================================ -->
 <xsl:template                  match = "Note">
  <xsl:apply-templates         select = "." 
                                 mode = "RS"/>
 </xsl:template>  

 <!-- 
 ================================================================
 Display a GlossaryTermRef-Patient
 ================================================================ -->
  <xsl:template                  match = "GlossaryTermRef">
  <xsl:apply-templates         select = "." 
                                 mode = "PE"/>
  </xsl:template> 

   <!-- 
 ================================================================
 Display a GlossaryTermRef-Health Professional
 ================================================================ -->
  
  <xsl:template                match = "GlossaryTermRef | LOERef">
  <xsl:apply-templates         select="."
                               mode = "HPE" />
 </xsl:template>




<!-- ====================================================================
       Do not display EnteredBy or EntryDate
     ==================================================================== -->

<xsl:template match="EnteredBy | EntryDate"/>

 </xsl:transform>]]>
</CdrDocXml>
</CdrDoc>