<CdrDoc Type='Filter' Id='CDR0000000044'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Denormalization Filter (2/5): Summary</DocTitle>
<DocComment>CVS-V1.10</DocComment><ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>

<!-- ===================================================================
      Filter to remove duplicate references from HP Summaries
     ================================================================== -->
<xsl:transform                xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                                version = "1.0"
                              xmlns:cdr = "cips.nci.nih.gov/cdr">
<xsl:output                      method = "xml" 
                   omit-xml-declaration = "no"/>
    
<!-- Written by Cheryl Burg 8-2-2001 -->
<!-- ====================================================================
      Select data elements to be copied and add tags when an incomplete
      node is copied
     =================================================================== -->
 <xsl:template match = "Summary">
  <xsl:copy>
   <xsl:apply-templates          select = "DocId" 
                                   mode = "copy"/>
   <!--copy summary meta data, and title -->
   <SummaryMetaData>
    <xsl:apply-templates         select = "SummaryMetaData/SummaryType" 
                                   mode = "copy"/>
    <xsl:apply-templates         select = "SummaryMetaData/SummaryAudience" 
                                   mode = "copy"/>
    <xsl:apply-templates         select = "SummaryMetaData/SummaryLanguage" 
                                   mode = "copy"/>
    <xsl:apply-templates         select = "SummaryMetaData/PDQBoard" 
                                   mode = "copy"/>

    <xsl:apply-templates         select = "SummaryMetaData/MainTopics" 
                                   mode = "copy"/>
    <xsl:apply-templates         select = "SummaryMetaData/SecondaryTopics" 
                                   mode = "copy"/>
   </SummaryMetaData>

   <xsl:apply-templates          select = "SummaryTitle" 
                                   mode = "copy"/>

  <!-- This filter removes the duplicate citation links at the end of each
      summary section -->
   <xsl:for-each                 select = "SummarySection | Insertion 
                                                          | Deletion">
    <xsl:variable                  name = "ID" 
                                 select = "@cdr:id"/>
   <!-- SummarySection  cdr:id="{$ID}" -->
    <xsl:element                   name = "{name()}">
     <xsl:choose>
      <xsl:when                    test = "name() = 'SummarySection'">
       <xsl:attribute              name = "cdr:id">
        <xsl:value-of            select = "$ID"/>
       </xsl:attribute>
      </xsl:when>
      <xsl:when                    test = "name() = 'Deletion'">
        <xsl:attribute             name = "UserName">
         <xsl:value-of           select = "@UserName"/>
        </xsl:attribute>
        <xsl:attribute             name = "Time">
         <xsl:value-of           select = "@Time"/>
        </xsl:attribute>
        <xsl:attribute             name = "RevisionLevel">
         <xsl:value-of           select = "@RevisionLevel"/>
        </xsl:attribute>
      </xsl:when>
      <xsl:otherwise>
        <xsl:attribute             name = "UserName">
         <xsl:value-of           select = "@UserName"/>
        </xsl:attribute>
        <xsl:attribute             name = "Time">
         <xsl:value-of           select = "@Time"/>
        </xsl:attribute>
        <xsl:attribute             name = "RevisionLevel">
         <xsl:value-of           select = "@RevisionLevel"/>
        </xsl:attribute>
      </xsl:otherwise>
     </xsl:choose>

     <xsl:apply-templates        select = "SectMetaData"
                                   mode = "copy"/>
     <xsl:apply-templates        select = "KeyPoint"
                                   mode = "copy"/>
   
     <xsl:apply-templates        select = "Title" 
                                   mode = "copy"/>

     <!-- Added Insertion and Deletion tags to copy 10/07/2002 CB -->
     <xsl:apply-templates        select = "Para         | OrderedList    |
                                           ItemizedList | SummarySection |
                                           Table        | Insertion      | 
                                           Deletion     | Comment"  
                                   mode = "copy"/>
     <xsl:apply-templates        select = "PdqKey" 
                                   mode = "copy"/>

  <!-- ==============================================================
        Remove duplicate references
       =============================================================== -->
     <xsl:if                       test = "ReferenceList/Reference">
      <ReferenceList>
       <xsl:for-each             select = "ReferenceList/Reference">
        <xsl:variable              name = "cits-list" 
                                 select = "@cdr:ref"/>
        <xsl:if                    test = "not(boolean(
                          preceding-sibling::Reference[@cdr:ref=$cits-list]))">
         <xsl:apply-templates    select = "." 
                                   mode = "copy"/>
        </xsl:if>
       </xsl:for-each>
      </ReferenceList>
     </xsl:if>
    </xsl:element>
   <!-- /SummarySection -->
   </xsl:for-each>

   <xsl:apply-templates         select = "PatientVersionOf" 
                                  mode = "copy"/>
   <xsl:apply-templates         select = "TranslationOf" 
                                  mode = "copy"/>
   <xsl:apply-templates         select = "ReplacementFor" 
                                  mode = "copy"/>
   <xsl:apply-templates         select = "DateLastModified" 
                                  mode = "copy"/>
   <xsl:apply-templates         select = "PdqKey" 
                                  mode = "copy"/>
  </xsl:copy> 
 </xsl:template>


<!-- ======================================================================
     Template rule used to do XML to XML transformations which
     copies any attribute node, or node that is child of of something 
     ======================================================================= -->
 <xsl:template                    match = "@*|node()" 
                                   mode = "copy">
  <xsl:copy>
   <xsl:apply-templates          select = "@*" 
                                   mode = "copy"/>
   <xsl:apply-templates            mode = "copy"/>
  </xsl:copy> 
 </xsl:template> 

</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>