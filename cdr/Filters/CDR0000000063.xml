<?xml version="1.0"?>

<!--
      $Id: CDR0000000063.xml,v 1.1.1.1 2002-07-01 15:34:20 bkline Exp $

      Demonstration of following CDR links using XSL/T.

      $Log: not supported by cvs2svn $
      Revision 1.1  2001/05/02 20:56:20  bkline
      Initial revision

  -->

<xsl:transform xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
               version   = "1.0"
               xmlns:cdr = "cips.nci.nih.gov/cdr">
 <xsl:output method="html"/>

 <!-- Generate the skeletal HTML for the whole document. -->
 <xsl:template match="/">
  <HTML>
   <HEAD>
    <TITLE>Demonstration of Following Document Links</TITLE>
   </HEAD>
   <BODY>
    <H1>Demonstration of Following Document Links</H1>
    <xsl:apply-templates select="//ProtOrg"/>
   </BODY>
  </HTML>
 </xsl:template>

 <!-- Handle each of the organizations connected with the protocol. -->
 <xsl:template match='ProtOrg'>
  <H2><xsl:value-of select='ProtOrgName'/></H2>

  <!-- Make sure we can find the document ID for the organization. -->
  <xsl:choose>
   <xsl:when test='contains(ProtOrgName/@cdr:ref, "CDR")'>
    <xsl:variable name='orgId' select='ProtOrgName/@cdr:ref'/>
    <xsl:variable name='orgInfo' select="document(concat('cdr:', $orgId))"/>
    <xsl:apply-templates select="ProtOrgPerson/ProtOrgPersonName">
     <xsl:with-param name='orgInfo' select='$orgInfo'/>
    </xsl:apply-templates>
   </xsl:when>
   
   <!-- Complain if we can't locate the org's document ID -->
   <xsl:otherwise>
    <H2>
     <FONT COLOR='red'>
      Error! We can't find the document ID for 
      <xsl:value-of select='ProtOrgName'/>!
     </FONT>
    </H2>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>

 <!-- Output an address for each person associated with the protocol. -->
 <xsl:template match='ProtOrgPersonName'>
  <xsl:param name='orgInfo'/>
  <H3><xsl:value-of select='.'/></H3>

  <!-- Make sure we can find the person's document ID. -->
  <xsl:choose>
   <xsl:when test='contains(@cdr:ref, "CDR")'>

    <!-- Gather the information we'll need for the address. -->
    <xsl:variable name='pcLoc'
                  select="$orgInfo/Org/OrgPostalCodeLocation"/>
    <xsl:variable name='personInfo'
                  select="document(concat('cdr:', @cdr:ref))"/>
    <xsl:variable name='affilInfo'
                  select="$personInfo/Person/PersonAffil
                                     [PersonAffilType = 'primary contact']"/>

    <!-- Lakshmi says we always use the primary contact info for the
         person, regardless of which organization that information
         is connected with in the Person record. -->
    <xsl:choose>
     <xsl:when test="$affilInfo/PersonAffilOrgAddressUsage">
      <xsl:variable name='addrUsage'
                    select="$affilInfo/PersonAffilOrgAddressUsage"/>
      <xsl:variable name='includeOrgPhone'
                    select="$affilInfo/PersonAffilIncludeOrgPhone"/>

      <!-- Pull in address lines from the organization as appropriate. -->
      <xsl:choose>
       <xsl:when test="$addrUsage = 'inherit all address lines'">
        <xsl:for-each select="$orgInfo/Org/OrgAddressLine">
         <xsl:value-of select="."/><BR />
        </xsl:for-each>
       </xsl:when>
       <xsl:when test="$addrUsage = 'inherit inheritable address lines'">
        <xsl:for-each select="$orgInfo/Org/OrgAddressLine
                               [@Usage='inheritable']">
         <xsl:value-of select="."/><BR />
        </xsl:for-each>
       </xsl:when>
      </xsl:choose>

      <!-- Append the person's own address lines. -->
      <xsl:for-each select="$affilInfo/PersonAffilAddrLine">
       <xsl:value-of select="."/><BR />
      </xsl:for-each>

      <!-- There are several places the postal code might belong. -->
      <xsl:if test="$pcLoc = 'before city'">
       <xsl:value-of select="$orgInfo/Org/OrgPostalCode"/>
       <xsl:text> </xsl:text>
      </xsl:if>

      <!-- Add the city from the organization's address information. -->
      <xsl:value-of select="$orgInfo/Org/OrgCity"/>
      <xsl:if test="$pcLoc = 'after city'">
       <xsl:value-of select="$orgInfo/Org/OrgPostalCode"/>
       <xsl:text> </xsl:text>
      </xsl:if>

      <!-- Add a state only if we have one. -->
      <xsl:if test = "$orgInfo/Org/OrgState/@cdr:ref">
       <xsl:if test = "not($pcLoc = 'after city')">
        <xsl:text>, </xsl:text>
       </xsl:if>
       <xsl:value-of select="document(concat('cdr:', 
                                             $orgInfo/Org/OrgState/@cdr:ref,
                                             '/CdrCtl'))//DocTitle"/>
      </xsl:if>

      <!-- This is where most of the postal codes will go. -->
      <xsl:if test="$pcLoc = 'after state or equivalent' or not($pcLoc)">
       <xsl:text> </xsl:text>
       <xsl:value-of select="$orgInfo/Org/OrgPostalCode"/>
      </xsl:if>
      <BR />

      <!-- Make sure the country name can be found. -->
      <xsl:choose>
       <xsl:when test="$orgInfo/Org/OrgCountry[@cdr:ref]">
        <xsl:value-of select="document(concat('cdr:', 
                                  $orgInfo/Org/OrgCountry/@cdr:ref,
                                  '/CdrCtl'))//DocTitle"/>
       </xsl:when>
       <xsl:otherwise>
        <FONT COLOR='red'>
         UNRECOGNIZED COUNTRY <xsl:value-of select="$orgInfo/Org/OrgCountry"/>
        </FONT>
       </xsl:otherwise>
      </xsl:choose>
      <xsl:if test="$pcLoc = 'after country'">
       <xsl:text> </xsl:text>
       <xsl:value-of select="$orgInfo/Org/OrgPostalCode"/>
      </xsl:if>
      <BR />

      <!-- Put any phones from the organization first. -->
      <xsl:if test = "$includeOrgPhone = 'Y'">
       <xsl:for-each select="$orgInfo/Org/OrgPhone[@Type = 'voice']">
        <xsl:value-of select="."/><BR />
       </xsl:for-each>
      </xsl:if>

      <!-- Finally, add any voice phone numbers specific to the person. -->
      <xsl:for-each select="$affilInfo/PersonAffilPhone
                                      [PersonAffilPhoneType='voice']">
       <xsl:value-of select='PersonAffilPhoneNumber'/><BR />
      </xsl:for-each>
     </xsl:when>

     <!-- The rest is error handling. -->
     <xsl:otherwise>
      <H2>
       <FONT COLOR='red'>
        Oops!  <xsl:value-of select='.'/>
        doesn't have any primary contact info.
       </FONT>
      </H2>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:when>
   <xsl:otherwise>
    <H2><FONT COLOR='red'>
     Yow!  We can't get the document ID for this person! (
     <xsl:value-of select='.'/>)
    </FONT></H2>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>

</xsl:transform>
