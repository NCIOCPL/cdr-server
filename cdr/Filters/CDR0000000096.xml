<CdrDoc Type='Filter' Id='CDR0000000096'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Person QC Report Filter</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<!-- 
================================================================
Filter to create a Person Content QC Report 
================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "html"/>

 <!-- Defining standard HTML Attribute Sets -->
 <xsl:attribute-set               name = "table">
  <xsl:attribute                  name = "border">0</xsl:attribute>
  <xsl:attribute                  name = "width">100%</xsl:attribute>
  <xsl:attribute                  name = "cellspacing">0</xsl:attribute>
  <xsl:attribute                  name = "cellpadding">0</xsl:attribute>
 </xsl:attribute-set>

 <xsl:attribute-set               name = "cell1of2">
  <xsl:attribute                  name = "width">35%</xsl:attribute>
  <xsl:attribute                  name = "valign">top</xsl:attribute>
 </xsl:attribute-set>

 <xsl:attribute-set               name = "cell2of2">
  <xsl:attribute                  name = "width">65%</xsl:attribute>
  <xsl:attribute                  name = "valign">top</xsl:attribute>
 </xsl:attribute-set>

 <!-- 
 ===============================================================
 Main Template
 Filter written by C.Burg - 4/26/2002
 =============================================================== -->
 <xsl:template                   match = "/">
  <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
  <HTML>
   <HEAD>
    <xsl:variable                 name = "cdrmydoc" 
                                select = "document('cdrx:/*/CdrCtl')"/>

    <TITLE>
     <xsl:value-of              select = "document('cdrutil:/docid')"/>
     <xsl:text>: </xsl:text>
     <xsl:value-of              select = "substring-before
                                          ($cdrmydoc/CdrDocCtl/DocTitle,';')"/>
    </TITLE>
    <STYLE type='text/css'>
     ul {margin-left: 16 ; padding-left: 0;}
    </STYLE>
   </HEAD>
   <BASEFONT                      FACE = 'Arial, Helvetica, sans-serif' />
   <xsl:apply-templates         select = "Person"/>
  </HTML>
 </xsl:template>


 <!-- 
 ===================================================================
 Generate the HTML for the Person QC Report
 =================================================================== -->
 <xsl:template                   match = "Person">
  <BODY>

  <!-- 
  ==================================================================
  Display Report heading and subheading 
  ================================================================== -->
   <b>
    <font size='4'>
     <center>
      <xsl:text>Person</xsl:text>
      <br/>
      <xsl:text>QC Report</xsl:text>
     </center>
    </font>
    <font size='3'>
     <center>
      <xsl:value-of             select = "document('cdrutil:/date/%25B %25#d, %25Y %25#I:%25M% 25p')"/>
     </center>
    </font>
   </b>
   <p/>

   <!-- 
   ====================================================================
   Display Name Header, and PersonNameInformation
   ==================================================================== -->
   <b>
    <font size='4'>
     <xsl:value-of select="document('cdrutil:/docid')"/>
    </font>
   </b>
   <p/>

   <xsl:apply-templates         select = "PersonNameInformation"/>
   <p/>
   <!-- 
   ============================================================
   Display Professional information 
   ============================================================ -->
   <xsl:apply-templates         select = "ProfessionalInformation"/>


   <!-- 
   ======================================================================
   Display the Administrative Information Section
   ===================================================================== -->
   <b>
    <font size='4'>Administrative Information</font>
   </b>
   <xsl:apply-templates         select = "ProfessionalInformation/
                                          PhysicianDetails/
                                          AdministrativeInformation"/>

   <table      xsl:use-attribute-sets = "table">
    <tr>
     <td       xsl:use-attribute-sets = "cell1of2">
      <b><u>Status</u></b>
     </td>
     <td       xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of            select = "Status/CurrentStatus"/>
     </td>
    </tr>  
    <tr>
     <td       xsl:use-attribute-sets = "cell1of2">
      <b>Entered By</b>
     </td>
     <td       xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of            select = "Status/EnteredBy"/>
     </td>
    </tr>  
    <tr>
     <td       xsl:use-attribute-sets = "cell1of2">
      <b>Entry Date</b>
     </td>
     <td       xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of            select = "Status/EntryDate"/>
     </td>
    </tr>  
    <tr>
     <td       xsl:use-attribute-sets = "cell1of2">
      <b>Comment</b>
     </td>
     <td       xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of            select = "Status/Comment"/>
     </td>
    </tr>  
    <tr>
     <td       xsl:use-attribute-sets = "cell1of2">
      <b>Preferred Contact Mode</b>
     </td>
     <td       xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of            select = "ProfessionalInformation/
                                         PhysicianDetails/
                                         AdministrativeInformation/
                                         PreferredContactMode"/>
     </td>
    </tr>
   </table>
   <p/>

<!-- ======================================================================
                 Display Location Information for Home Office
     ===================================================================== -->

<b><font size='4'>Location Information</font></b><br />

   <b><font size='3'>Home</font></b><br />
    <xsl:if test="PersonLocations/Home">
    <xsl:if test="PersonLocations/CIPSContact=PersonLocations/Home/@cdr:id">
    <b><font size="3">CIPS Contact</font></b><br />
    </xsl:if>
    <xsl:for-each         select="PersonLocations/Home/PostalAddress">
    <xsl:for-each         select="Street">
    <xsl:value-of         select="."/><br />
    </xsl:for-each>
    <xsl:if               test="Country/PostalCodePosition='before City'">
    <xsl:value-of         select="PostalCode_ZIP"/>&#xa0;
<xsl:if test="CitySuffix">
<xsl:value-of             select="concat(City,' ',CitySuffix)"/>
</xsl:if> 
<xsl:if                  test="not(CitySuffix)">   
<xsl:value-of            select="City"/>,
</xsl:if>
<xsl:text>&#xa0;</xsl:text>
<xsl:value-of           select="PoliticalSubUnit_State/
                                PoliticalSubUnitShortName"/><br />
<xsl:value-of           select="Country/CountryFullName"/><br />
</xsl:if>
<xsl:if                 test="Country/PostalCodePosition='after City'">
<xsl:if                 test="CitySuffix">
<xsl:value-of           select="concat(City,' ',CitySuffix )"/>
</xsl:if> 
<xsl:if                 test="not(CitySuffix)">   
<xsl:value-of           select="City"/>,
</xsl:if>
<xsl:value-of           select="PostalCode_ZIP"/>&#xa0;
<xsl:value-of           select="PoliticalSubUnitShortName"/><br />
<xsl:value-of           select="Country/CountryFullName"/><br />
</xsl:if>
 
<xsl:if                 test="Country/
                              PostalCodePosition=
                             'after PoliticalSubUnit_State'">
<xsl:if                 test="CitySuffix">
<xsl:value-of           select="concat(City,' ',CitySuffix, ', ')"/>
</xsl:if> 
<xsl:if                 test="not(CitySuffix)">   
<xsl:value-of           select="City"/>,
</xsl:if>
<xsl:value-of           select="PoliticalSubUnit_State
                              /PoliticalSubUnitShortName"/>&#xa0;
<xsl:value-of           select="PostalCode_ZIP"/><br />
<xsl:value-of           select="Country/CountryFullName"/><br />
</xsl:if>
<xsl:if                 test="Country/Country/
                              PostalCodePosition='after Country'">
<xsl:if                 test="CitySuffix">
<xsl:value-of           select="concat(City,' ',CitySuffix)"/>
</xsl:if> 
<xsl:if                 test="not(CitySuffix)">   
<xsl:value-of           select="City"/>,&#xa0;
</xsl:if>
<xsl:value-of           select="PoliticalSubUnit_State/
                                PoliticalSubUnitShortName"/>&#xa0;
<xsl:value-of           select="Country/CountryFullName"/><br />
<xsl:value-of           select="PostalCode_ZIP"/><br />
</xsl:if>
 <xsl:text>Phone:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
                 &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text>
  <xsl:value-of         select="../Phone"/>&#xa0;
<xsl:if                 test="../Phone/@Public">
<xsl:text>(Public=</xsl:text>
<xsl:value-of           select="../Phone/@Public"/>
<xsl:text>)</xsl:text>
</xsl:if>
<br />

  <xsl:value-of         select="concat('TollFreePhone:&#xa0;&#xa0;&#xa0;',../TollFreePhone)"/><br />

  <xsl:value-of         select="concat(      
                                   'Fax:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
                                    &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
                                    &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
                                    &#xa0;&#xa0;
                                    ',../Fax)"/>
   <br />
<xsl:text>Email:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
                &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text>
 
 <u><xsl:value-of     select="../Email"/></u>&#xa0;
<xsl:if               test="../Email/@Public">
<xsl:text>(Public=</xsl:text>
<xsl:value-of         select="../Email/@Public"/>
<xsl:text>)</xsl:text>
</xsl:if>
<br />

 <xsl:text>Website:&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text>
 <u><xsl:value-of   select="../WebSite/@cdr:xref"/></u>
  <br />
  <xsl:text>>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;
  </xsl:text>
 <xsl:value-of   select="../WebSite"/><br />
 <br />
 </xsl:for-each>
 </xsl:if>
 <br />
<!-- =====================================================================
        Display Person Location Information for Private Practice Location
     ===================================================================== -->

    <b><font size='3'>Private Practice</font></b><br /><br />

   <xsl:if              test="PersonLocations/PrivatePractice/
                              PrivatePracticeLocation">
      <xsl:for-each     select="PersonLocations/PrivatePractice/
                                PrivatePracticeLocation/PostalAddress">
      <xsl:variable     name="contact" select="../../../CIPSContact"/>
      <xsl:if test="$contact=../@cdr:id">
      <b><font size="3">CIPS Contact</font></b><br />
      </xsl:if>
      
    <xsl:if             test="../../PreviousLocation">
    <b><xsl:text>(Previous Location)</xsl:text></b><br />
    </xsl:if>
     <xsl:for-each                 select="Street">
     <xsl:value-of                 select="."/><br />
     </xsl:for-each>
    <xsl:if                        test="Country/
                                         PostalCodePosition='before City'">
<xsl:value-of                      select="PostalCode_ZIP"/>&#xa0;
<xsl:if                            test="CitySuffix">
<xsl:value-of                      select="concat(City,' ',CitySuffix)"/>
</xsl:if> 
<xsl:if                            test="not(CitySuffix)">   
<xsl:value-of                      select="City"/>,
</xsl:if>
<xsl:value-of                      select="PoliticalSubUnit_State/
                                           PoliticalSubUnitShortName"/><br />
<xsl:value-of                      select="Country/CountryFullName"/><br />
</xsl:if>
<xsl:if                            test="PostalCodePosition='after City'">
<xsl:if                            test="CitySuffix">
<xsl:value-of                      select="concat(City,' ',CitySuffix)"/>
</xsl:if> 
<xsl:if                            test="not(CitySuffix)">   
<xsl:value-of                      select="City"/>,
</xsl:if>
<xsl:value-of                      select="PostalCode_ZIP"/>&#xa0;
<xsl:value-of                      select="PoiticalSubUnit_State/
                                          PoliticalSubUnitShortName"/><br />
<xsl:value-of                      select="Country/CountryFullName"/><br />
</xsl:if>
 
<xsl:if                           test="Country/
                                        PostalCodePosition=
                                        'after PoliticalSubUnit_State'">
                                       
<xsl:if                           test="CitySuffix">
<xsl:value-of                     select="concat(City,' ',CitySuffix)"/>
</xsl:if> 
<xsl:if                          test="not(CitySuffix)">   
<xsl:value-of                    select="City"/>,
</xsl:if>
<xsl:value-of                    select="PoliticalSubUnit_State/
                                         PoliticalSubUnitShortName"/>&#xa0;
<xsl:value-of                    select="PostalCode_ZIP"/><br />
<xsl:value-of                    select="Country/CountryFullName"/><br />
</xsl:if>
<xsl:if                          test="PostalCodePosition='after Country'">
<xsl:if                          test="CitySuffix">
<xsl:value-of                    select="concat(City,' ',CitySuffix)"/>
</xsl:if> 
<xsl:if                          test="not(CitySuffix)">   
<xsl:value-of                    select="City"/>,
</xsl:if>
<xsl:value-of                    select="PoliticalSubUnit_State/
                                         PoliticalSubUnitShortName"/>&#xa0;
<xsl:value-of                    select="Country/
                                         CountryFullName"/><br />
<xsl:value-of                    select="PostalCode_ZIP"/><br />
</xsl:if>

 <xsl:value-of                   select="concat('Phone:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
        &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;',../Phone)"/>&#xa0;
<xsl:if                          test="../Phone/@Public">
<xsl:text>(Public=</xsl:text>
<xsl:value-of                    select="../Phone/@Public"/>
<xsl:text>)</xsl:text>
</xsl:if>
<br />

 <xsl:value-of                  select="concat('TollFreePhone:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;',../../TollFreePhone)"/><br />

  <xsl:value-of                 select="concat('Fax:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;',../Fax)"/><br />

<xsl:text>Email:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
                &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
</xsl:text>
 <u><xsl:value-of              select="../Email"/></u>&#xa0;
 <xsl:if                       test="../../Email/@Public">
<xsl:text>(Public=</xsl:text>
<xsl:value-of                  select="../Email/@Public"/>
<xsl:text>)</xsl:text>
</xsl:if>
<br />

 <xsl:text>Website:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;&#xa0;&#xa0;&#xa0;  
 </xsl:text>
 <u><xsl:value-of             select="../WebSite/@cdr:xref"/></u>
  <br />
  <xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           
  </xsl:text>
  <xsl:value-of             select="../WebSite"/><br />
 <br />
 <br />
 </xsl:for-each>
 </xsl:if>

<!-- ====================================================================
      Display Other Practice Locations Information
     ================================================================== -->
      <b><font size='3'>Other Practice Locations</font></b><br /><br />
 
     <xsl:for-each            select="PersonLocations/OtherPracticeLocation">
      
                           
     <xsl:if                  test="../CIPSContact= @cdr:id">
     <b>
    <font size="3">CIPS Contact</font>
    </b><br />
    </xsl:if>
       
    <xsl:if                  test="@PreviousLocation">
    <b><xsl:text>(Previous Location)</xsl:text>
    </b><br />
    </xsl:if>
    
    <xsl:if                  test="PersonTitle">
    <xsl:value-of            select="PersonTitle"/><br />
    </xsl:if>
    
    <xsl:if                 test="PersonRole">
    <xsl:value-of           select="PersonRole"/><br />
    </xsl:if>

   
    

    <xsl:for-each             select="OrganizationLocation/Organization/
                                      OrganizationName">
    <i>
    <xsl:value-of             select="."/>
    </i>
    <br />
  <!--  <xsl:text>&#xa0;</xsl:text>  -->                    
    </xsl:for-each>
  
   <xsl:if                    test = "not(SpecificPostalAddress)">
   <xsl:if                   test="OrganizationLocation/Organization/OrganizationLocations/OrganizationLocation/Location/PostalAddress">
   <xsl:for-each             select="OrganizationLocation/Organization/
                                     OrganizationLocations/
                                     OrganizationLocation/Location">
  <xsl:variable             name="Loid" select="@cdr:id"/>
  <xsl:variable    name="OID" select="substring-after(../../../@cdr:ref,'#')"/>
    
  <xsl:if                 test= "$OID = $Loid"> 
                                   
                                    
                                                                   

   <xsl:if                   test="PostalAddress/@Public">
   <xsl:text>(Public=No)</xsl:text><br />
   </xsl:if>                   
   <xsl:for-each            select="PostalAddress/Street">  
    <i>
    <xsl:value-of          select="."/>
    </i>
    <br />
    </xsl:for-each>
    <xsl:if                test="PostalAddress/Country/
                                 PostalCodePosition='before City'">
    <i>
    <xsl:value-of         select="PostalAddress/
                                  PostalCode_ZIP"/>
   </i>
   <xsl:text>&#xa0;</xsl:text>
    <xsl:if               test="PostalAddress/CitySuffix">
     <i>
    <xsl:value-of         select="concat (PostalAddress/City,'
                                          ',PostalAddress/CitySuffix)"/>
     </i>
    </xsl:if> 
    <xsl:if              test="not(PostalAddress/CitySuffix)"> 
    <i>  
    <xsl:value-of        select="PostalAddress/City"/>
     </i>
     <xsl:text>,</xsl:text>
    </xsl:if>
     <i>
    <xsl:value-of        select="PostalAddress/PoliticalSubUnit_State/
                                 PoliticalSubUnitShortName"/>
    </i>
    <br />
     <i>
    <xsl:value-of        select="PostalAddress/Country/
                                 CountryFullName"/>
     </i>
     <br />
    </xsl:if>
    <xsl:if              test="PostalAddress/Country/
                               PostalCodePosition='after City'">
    <xsl:if              test="PostalAddress/CitySuffix">
    <i>
    <xsl:value-of        select="concat(PostalAddress/City,'
                                        ',PostalAddress/CitySuffix)"/>
    </i>
    </xsl:if> 
    <xsl:if              test="not(PostalAddress/CitySuffix)"> 
    <i>  
    <xsl:value-of        select="PostalAddress/City"/>
    </i>
    <xsl:text>,</xsl:text>
    </xsl:if>
    <i>
    <xsl:value-of        select="PostalAddress/PostalCode_ZIP"/>
    </i>
     <xsl:text>&#xa0;</xsl:text>
    <i>
    <xsl:value-of        select="PostalAddress/PoliticalSubUnit_State/
                                 PoliticalSubUnitShortName"/>
     </i>
    <br />
    <i>
    <xsl:value-of        select="PostalAddress/Country/
                                 CountryFullName"/>
    </i>
    <br />
    </xsl:if>
 
   <xsl:if               test="PostalAddress/Country/
                               PostalCodePosition=
                               'after PoliticalSubUnit_State'">
  <xsl:if                test="PostalAddress/CitySuffix">
  <i>
  <xsl:value-of          select="concat(PostalAddress/City,'
                                        ',PostalAddress/CitySuffix)"/>
   </i>
   </xsl:if> 
   <xsl:if              test="not(PostalAddress/CitySuffix)">   
   <i>
   <xsl:value-of        select="PostalAddress/City"/>
   </i>
   <xsl:text>,</xsl:text>
   </xsl:if>
    <i>
   <xsl:value-of        select="PostalAddress/PoliticalSubUnit_State/
                               PoliticalSubUnitShortName"/>
   </i>
   <xsl:text>&#xa0;</xsl:text>
    
    <i>
   <xsl:value-of        select="PostalAddress/PostalCode_ZIP"/>
   </i>
   <br />
   <i>
   <xsl:value-of        select="PostalAddress/Country/
                                CountryFullName"/>
   </i>
  <br /><br />
   </xsl:if>
   <xsl:if              test="PostalAddress/Country/
                              PostalCodePosition='after Country'">
   <xsl:if              test="PostalAddress/CitySuffix">
   <i>
   <xsl:value-of        select="concat(PostalAddress/City,'
                                       ',PostalAddress/CitySuffix)"/>
    </i>
   </xsl:if> 
   <xsl:if              test="not(PostalAddress/CitySuffix)">  
    <i> 
   <xsl:value-of        select="PostalAddress/City"/>
    </i>
    <xsl:text>,</xsl:text>
   </xsl:if>
   <i>
   <xsl:value-of        select="PostalAddress/PoliticalSubUnit_State/
                                PoliticalSubUnitShortName"/>
   </i>
   <xsl:text>&#xa0;</xsl:text>
    
   <i>
   <xsl:value-of         select="PostalAddress/Country/
                                 CountryFullName"/>
   </i>
   <br />
   <i>
   <xsl:value-of         select="PostalAddress/PostalCode_ZIP"/>
   </i>
   <br />
   </xsl:if>
 
 <!-- adding end of for loop-->
   </xsl:if> 
  </xsl:for-each>
   </xsl:if>
   </xsl:if>

  <xsl:if                test="SpecificPostalAddress">
   <xsl:for-each         select="SpecificPostalAddress">
   <xsl:if               test="@Public">
   <xsl:text>(Public=No)</xsl:text><br />
   </xsl:if> 
        
   <xsl:for-each        select="Street">                     
    <xsl:value-of       select="."/>
    <br />
    </xsl:for-each>
    <xsl:if            test="Country/PostalCodePosition='before City'">
    <xsl:value-of      select="PostalCode_ZIP"/>&#xa0;
    <xsl:if            test="CitySuffix">
    <xsl:value-of      select="concat(City,' ',CitySuffix)"/>
    </xsl:if> 
    <xsl:if            test="not(CitySuffix)">   
    <xsl:value-of      select="City"/>,
    </xsl:if>
    <xsl:value-of     select="PoliticalSubUnit_State/
                      PoliticalSubUnitShortName"/><br />
    <xsl:value-of     select="Country/CountryFullName"/><br />
    </xsl:if>
    <xsl:if           test="Country/PostalCodePosition='after City'">
    <xsl:if           test="CitySuffix">
    <xsl:value-of     select="concat(City,' ',CitySuffix)"/>
    </xsl:if> 
    <xsl:if           test="not(CitySuffix)">   
    <xsl:value-of     select="City"/>,
    </xsl:if>
    <xsl:value-of     select="PostalCode_ZIP"/>&#xa0;
    <xsl:value-of     select="PoliticalSubUnit_State/
                              PoliticalSubUnitShortName"/><br />
    <xsl:value-of     select="Country/CountryFullName"/><br />
    </xsl:if>
 
   <xsl:if           test="Country/PostalCodePosition=
                          'after PoliticalSubUnit_State'">
   <xsl:if           test="CitySuffix">
   <xsl:value-of     select="concat(City,' ',CitySuffix)"/>
   </xsl:if> 
   <xsl:if           test="not(CitySuffix)">   
   <xsl:value-of     select="City"/>,
   </xsl:if>
   <xsl:value-of     select="PoliticalSubUnit_State/
                             PoliticalSubUnitShortName"/>&#xa0;
   <xsl:value-of     select="PostalCode_ZIP"/><br />
   <xsl:value-of     select="Country/CountryFullName"/><br />
   </xsl:if>
   <xsl:if           test="Country/PostalCodePosition='after Country'">
   <xsl:if           test="CitySuffix">
   <xsl:value-of     select="concat(City,' ',CitySuffix)"/>
   </xsl:if> 
   <xsl:if           test="not(CitySuffix)">   
   <xsl:value-of     select="City"/>,
   </xsl:if>
   <xsl:value-of     select="PoliticalSubUnit_State/
                             PoliticalSubUnitShortName"/>&#xa0;
   <xsl:value-of     select="Country/CountryFullName"/><br />
   <xsl:value-of     select="PostalCode_ZIP"/><br />
   </xsl:if>
 
 <!-- adding end of for loop-->
  </xsl:for-each>
   </xsl:if>
    
   <xsl:text>Phone:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
             &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
  </xsl:text> 
  <xsl:if           test="SpecificPhone">
  <xsl:value-of     select="SpecificPhone"/>
  <xsl:if           test="SpecificPhone/@Public">
  <xsl:text>(Public=</xsl:text>
  <xsl:value-of      select="SpecificPhone/@Public"/>
  <xsl:text>)</xsl:text>
  </xsl:if>
  </xsl:if>

<xsl:if                        test="not(SpecificPhone)">
<xsl:if                        test="OrganizationLocation/
                                     Organization/OrganizationLocations/
                                     OrganizationLocation/Location/Phone">
<i>
<xsl:value-of                  select="OrganizationLocation/
                                       Organization/OrganizationLocations/
                                       OrganizationLocation/Location/Phone"/>
 </i>
 
 <xsl:if                       test="OrganizationLocation/Organization/
                                     OrganizationLocations/
                                     OrganizationLocation/Location/Phone/
                                     @Public">
<xsl:text>(Public=</xsl:text>
<xsl:value-of                 select="OrganizationLocation/
                                      Organization/
                                      OrganizationLocations/
                                      OrganizationLocation/Location/Phone/
                                      @Public"/>
 <xsl:text>)</xsl:text>
</xsl:if>
</xsl:if>
</xsl:if>
 <br />
 <xsl:text>TollFreePhone:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text>
<xsl:if                     test="SpecificTollFreePhone">
<xsl:value-of               select="SpecificTollFreePhone"/>
<br />
</xsl:if>
<xsl:if                     test="not(SpecificTollFreePhone)">
 <xsl:if                    test="OrganizationLocation/Organization/
                                  OrganizationLocations/
                                  OrganizationLocation/Location/TollFreePhone">
 <i>
 <xsl:value-of               select="OrganizationLocation/
                                     Organization/OrganizationLocations/
                                     OrganizationLocation/
                                     Location/TollFreePhone"/>
  </i>
 </xsl:if>
 </xsl:if>
  <br />

  <xsl:text>Fax:</xsl:text>
  <xsl:text> &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
                 &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
                 &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
 </xsl:text>
  
  <xsl:if               test="SpecificFax">
  <xsl:value-of         select="SpecificFax"/>
   <br />
  </xsl:if>
<xsl:if                  test="not(SpecificFax)">
 <xsl:if                 test="OrganizationLocation/Organization/
                               OrganizationLocations/
                               OrganizationLocation/Location/Fax">
  <i>
 <xsl:value-of           select="OrganizationLocation/Organization/
                                 OrganizationLocations/
                                 OrganizationLocation/Location/Fax"/>
 </i>
 </xsl:if>
 <br />
 </xsl:if>
 
 <xsl:text>Email:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
 </xsl:text>
 <xsl:if              test="SpecificEmail">
 <u><xsl:value-of     select="SpecificEmail"/></u>
<xsl:text>&#xa0;</xsl:text>
<xsl:if               test="SpecificEmail/@Public">
<xsl:text>(Public=</xsl:text>
<xsl:value-of         select="SpecificEmail/@Public"/>
<xsl:text>)</xsl:text>
</xsl:if>
</xsl:if>

<!-- <xsl:if              test="not(SpecificEmail)">
 <xsl:if              test="OrganizationLocation/Organization/
                            OrganizationLocations/
                            OrganizationLocation/Location/Email">
  
 <i>
 <xsl:value-of        select="OrganizationLocation/
                               Organization/
                               OrganizationLocations/
                               OrganizationLocation/Location/Email"/>
  </i>
  </xsl:if>
  </xsl:if>-->
   <br />
 
 

  <xsl:text>Website:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
             &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
  </xsl:text>
   <xsl:if                        test="SpecificWebSite">
   <xsl:value-of                  select="SpecificWebSite/@cdr:xref"/>
   <br />
   <xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;

   </xsl:text>
  <xsl:value-of                  select="SpecificWebSite"/>
                                  
  </xsl:if>
 
 <xsl:if                          test="not(SpecificWebSite)">
 <xsl:if                          test="OrganizationLocation/Organization/
                                        OrganizationLocations/
                                        OrganizationLocation/Location
                                       /WebSite/@cdr:xref">
 <i>
<xsl:value-of                  select="OrganizationLocation/Organization/
                                                                                                                       OrganizationLocations/
                                       OrganizationLocation/Location/WebSite/
                                       @cdr:xref"/></i>
 <br />   
 <xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
           &#xa0;
 
 </xsl:text>
                              
 <xsl:value-of                select="OrganizationLocation/
                                            Organization/
                                            OrganizationLocations/
                               OrganizationLocation/Location/WebSite"/>
    
  </xsl:if>
  </xsl:if>
  <br />

  <br />
 <xsl:if                    test="ComplexAffiliation">
 <b><font size='3'>Complex Affiliation</font></b><br /><br />
 <xsl:for-each            select="ComplexAffiliation">
<xsl:for-each             select="Organization/Organization">
<b><xsl:text>Organization:&#xa0;</xsl:text></b>
<xsl:value-of             select="OrganizationName"/>
                                   <br />
<b><xsl:text>Role:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text></b>
<xsl:value-of            select="../../RoleAtAffiliatedOrganization"/>
 <br /><br />
</xsl:for-each>
</xsl:for-each>
</xsl:if>
</xsl:for-each>
  <br /><br />



<!--- =================================================================
       Display links to other documents, Dated Actions, Date Last Modified
      ===================================================================== -->
<b><font size='4'>Links to Other Documents</font></b><br />

<!--Variable names should be replaced with a Yes or a No depending on the    
    query results for the links -->
  <table xsl:use-attribute-sets = "table">
   <tr>
    <td  xsl:use-attribute-sets = "cell1of2">
     <b>Active, Approved, Temporarily Closed Protocols</b>
    </td>
    <td  xsl:use-attribute-sets = "cell2of2">@@ACTIVE_APPR0VED_TEMPORARILY_CLOSED_PROTOCOLS@@</td>
   </tr>
   <tr>
    <td>
     <b>Closed, Completed Protocols</b>
    </td>
    <td>@@CLOSED_COMPLETED_PROTOCOLS@@</td>
   </tr>
   <tr>
    <td>
     <b>Health Professional Summaries</b>
    </td>
    <td>@@HEALTH_PROFESSIONAL_SUMMARIES@@</td>
   </tr>
   <tr>
    <td>
     <b>Patient Summaries</b>
    </td>
    <td>@@PATIENT_SUMMARIES@@</td>
   </tr>
  </table>
  <p/>

<b><font size='4'>Dated Action(s)</font></b><br />
<xsl:for-each               select="DatedAction">
<xsl:value-of               select="ActionDescription"/><br />
<xsl:value-of               select="ActionDate"/><br />
</xsl:for-each>
<p/>

<b><font size='4'>Date Last Modified</font></b>
<xsl:apply-templates        select="DateLastModified"/>
<p/>

  <!-- =====================================================================
             Display Record Information ( Date created, Modified, and User
     =====================================================================  -->
              <b><font size='4'>Record</font></b><br />
              <table cellpadding='0' cellspacing = '0' width='90%'>
              <xsl:for-each               select="CdrDocCtl">
              <tr>
              <th align='left' width='40%'>   
              <b>
              <font size='3'>Created By
              </font>
              </b>
              </th>
               <td width='60%'>
              <xsl:value-of               select="Create/User"/>
              </td>
              </tr>
              <tr>
              <th align='left' width='40%'>   
              <b>
              <font size='3'>Date
              </font>
              </b>
              </th>
              <td width='60%'>
              <xsl:value-of               select="substring-before 
                                                 (Create/Date,'T')"/>
             </td>
             </tr>
              <tr>
              <th align='left' width='40%'>   
               <b>
              <font size='3'>Updated By
              </font>
              </b>
              </th>
              <td width='60%'>
              <xsl:value-of               select="Modify/User"/><br />
              </td>
              </tr>
               <tr>
              <th align='left' width='40%'>   
              <b>
              <font size='3'>Date
              </font>
              </b>
              </th>
              <td width='60%'>
              <xsl:value-of               select="substring-before
                                                  (Modify/Date,'T')"/>
              </td>
              </tr>
              </xsl:for-each>
              </table>
              <p/>

<!-- =================================================================
        Display most recent Mailer Information
     ================================================================= -->
   <b><font size='4'>Most Recent Mailer</font></b>

   <table cellpadding='0' width='90%'>
    <tr>
     <th align='left' width='40%'>   
      <b>Date Sent</b>
     </th>
     <td  width='60%'>@@MAILER_DATE_SENT@@</td>
    </tr>
    <tr>
     <th align='left' width='40%'>   
      <b>Date Received</b>
     </th>
     <td width='35%'>@@MAILER_RESPONSE_RECEIVED@@</td>
    </tr>
    <tr>
     <th align='left' width='40%'>   
      <b>Type of Change</b>
     </th>
     <td width='60%'>@@MAILER_TYPE_OF_CHANGE@@</td>
    </tr>
   </table>
   <p/>
  </BODY>
 </xsl:template>


 <!--
 =================================================================
 Template for PersonNameInformation
 ================================================================= -->
 <xsl:template                   match = "PersonNameInformation">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>
      <font size='4'>Name</font>
     </b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:if                      test = "Prefix">
      <xsl:apply-templates      select = "Prefix"/>
      <xsl:text> </xsl:text>
     </xsl:if>
     <xsl:apply-templates       select = "GivenName"/>
     <xsl:text> </xsl:text>
     <xsl:apply-templates       select = "MiddleInitial"/>
     <xsl:text> </xsl:text>
 
     <!-- check for Professional suffix and display -->
     <xsl:choose>
      <xsl:when                   test = "ProfessionalSuffix">
       <xsl:apply-templates     select = "SurName"/>
       <xsl:text>,</xsl:text>
       <xsl:apply-templates     select = "GenerationSuffix"/>
       <xsl:text> </xsl:text>
       <xsl:for-each            select = "ProfessionalSuffix">
        <xsl:value-of           select = "."/>
        <xsl:if                   test = "position() !=last()">
         <xsl:text>, </xsl:text>
        </xsl:if>
       </xsl:for-each>
      </xsl:when>
      <xsl:otherwise>
      <!-- Display surname if no Suffix is present -->
       <xsl:apply-templates     select = "SurName"/>
      </xsl:otherwise>
     </xsl:choose>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>
      <font size='4'>Comment</font>
     </b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "Comment"/>
    </td>
   </tr>
  </table>
 </xsl:template>


 <!-- 
 ============================================================
 Display Professional information 
 ============================================================ -->
 <xsl:template                   match = "ProfessionalInformation">
  <b>
   <font size='4'>
    <xsl:text>Professional Information</xsl:text>
   </font>
  </b>

  <xsl:apply-templates          select = "PDQBoardMembershipDetails"/>
  <xsl:apply-templates          select = "PhysicianDetails"/>
 </xsl:template>


 <!-- 
 =======================================================================
 ======================================================================= -->
 <xsl:template                   match = "PDQBoardMembershipDetails">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>
      <font size='3'>PDQ Board</font>
     </b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <ul>
      <xsl:apply-templates      select = "PDQEditorialBoard |
                                          PDQAdvisoryBoard  |
                                          PDQVoluntaryProtocolReviewBoard"/>
     </ul>
    </td>
   </tr>
  </table>
  <br/>
 </xsl:template>


 <!-- 
 =========================================================================
 ========================================================================= -->
 <xsl:template                    match = "PDQEditorialBoard |
                                          PDQAdvisoryBoard  |
                                          PDQVoluntaryProtocolReviewBoard">
  <li>
   <xsl:value-of                 select = "Organization/
                                           OrganizationName"/>
  </li>
 </xsl:template>


 <!--
 =========================================================================
 ========================================================================= -->
 <xsl:template                   match = "PhysicianDetails">
  <xsl:for-each                 select = "PhysicianSpecialtyInformation">
   
    <xsl:for-each               select = "BoardCertifiedSpecialty">
   <table       xsl:use-attribute-sets = "table">
     <tr>
      <td       xsl:use-attribute-sets = "cell1of2">
       <b>Specialty</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of            select = "BoardCertifiedSpecialtyName"/>
      </td>
     </tr>
     <tr>
      <td       xsl:use-attribute-sets = "cell1of2">
       <b>Board Certification</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of            select = "Certified"/>
      </td>
     </tr>
     <tr>
      <td       xsl:use-attribute-sets = "cell1of2">
       <b>Verification</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of            select = "Verified"/>
      </td> 
     </tr>
   </table>
   <br/>
    </xsl:for-each>
   <p>
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td       xsl:use-attribute-sets = "cell1of2">
      <b>Other Specialty</b>
     </td>
     <td       xsl:use-attribute-sets = "cell2of2">
      <table   xsl:use-attribute-sets = "table">
       <xsl:for-each           select = "OtherSpecialty">
        <tr>
         <td   xsl:use-attribute-sets = "cell2of2">
          <xsl:value-of        select = "."/>
         </td>
        </tr>
       </xsl:for-each>
      </table>
     </td>
    </tr>
   </table>
   </p>
  </xsl:for-each>

  <xsl:apply-templates         select = "PhysicianMembershipInformation"/>
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td>
      <b>Comment</b>
     </td>
     <td>
      <xsl:apply-templates      select = "Comment"/>
     </td>
    </tr>
   </table>
  <p/>

 </xsl:template>


 <!-- 
 ===================================================================
 Display Membership Information
 =================================================================== -->
 <xsl:template                  match = "PhysicianMembershipInformation">
  <table       xsl:use-attribute-sets = "table">
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b>Membership Information</b>
    </td>
   </tr>
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b><u>Cooperative Group(s)</u></b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <ul>
      <xsl:for-each            select = "MemberOfCooperativeGroup/
                                         CooperativeGroup/
                                         Organization/
                                         OrganizationName">
       <li>
        <xsl:choose>
         <xsl:when              test = "../../../@GroupChair">
          <xsl:value-of      select = "."/>
          <xsl:text> (Group Chair)</xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:value-of      select = "."/>
         </xsl:otherwise>
        </xsl:choose>
       </li>
      </xsl:for-each> 
     </ul>
    </td>
   </tr>
  </table>
  <p>
  <table       xsl:use-attribute-sets = "table">
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b><u>Medical Societies</u></b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <ul>
      <xsl:for-each            select = "MemberOfMedicalSociety">
       <li>
        <xsl:value-of          select = "."/>
       </li>
      </xsl:for-each> 
     </ul>
    </td>
   </tr>
  </table>
  </p>
 </xsl:template>


 <!-- 
 =====================================================================
 ===================================================================== -->
 <xsl:template                  match = "AdministrativeInformation">
  <table       xsl:use-attribute-sets = "table">
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b><u>Directory</u></b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of             select = "Directory/Include"/>
    </td>
   </tr>  
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b>Entered By</b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of             select = "Directory/EnteredBy"/>
    </td>
   </tr>  
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b>Entry Date</b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of             select = "Directory/Date"/>
    </td>
   </tr>  
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b>Comment</b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of             select = "Directory/Comment"/>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template> 
</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>