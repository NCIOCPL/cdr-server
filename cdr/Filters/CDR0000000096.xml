<CdrDoc Type='Filter' Id='CDR0000000096'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Person QC Report Filter</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<!-- 
================================================================
Filter to create a Person Content QC Report 
================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "html"/>

 <!-- Defining standard HTML Attribute Sets -->
 <xsl:attribute-set               name = "table">
  <xsl:attribute                  name = "border">0</xsl:attribute>
  <xsl:attribute                  name = "width">100%</xsl:attribute>
  <xsl:attribute                  name = "cellspacing">0</xsl:attribute>
  <xsl:attribute                  name = "cellpadding">0</xsl:attribute>
 </xsl:attribute-set>

 <xsl:attribute-set               name = "cell1of2">
  <xsl:attribute                  name = "width">35%</xsl:attribute>
  <xsl:attribute                  name = "valign">top</xsl:attribute>
 </xsl:attribute-set>

 <xsl:attribute-set               name = "cell2of2">
  <xsl:attribute                  name = "width">65%</xsl:attribute>
  <xsl:attribute                  name = "valign">top</xsl:attribute>
 </xsl:attribute-set>

 <xsl:variable                    name = "docID"
                                select = "document('cdrutil:/docid')"/>
 <!-- 
 ===============================================================
 Main Template
 Filter written by C.Burg - 4/26/2002
 =============================================================== -->
 <xsl:template                   match = "/">
  <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
  <HTML>
   <HEAD>
    <xsl:variable                 name = "cdrdocs" 
                                select = "document('cdrx:/*/CdrCtl')"/>

    <TITLE>
     <xsl:value-of              select = "concat('CDR', 
                                           number(
                                           substring-after($docID, 'CDR')))"/>
     <xsl:text>: </xsl:text>
     <xsl:value-of              select = "substring-before(
                                           concat($cdrdocs/CdrDocCtl/
                                                  DocTitle, ';'), ';')"/> 
    </TITLE>
    <STYLE type='text/css'>
     ul {margin-left: 16 ; padding-left: 0;}
    </STYLE>
   </HEAD>
   <BASEFONT                      FACE = 'Arial, Helvetica, sans-serif' />
   <xsl:apply-templates         select = "Person"/>
  </HTML>
 </xsl:template>


 <!-- 
 ===================================================================
 Generate the HTML for the Person QC Report
 =================================================================== -->
 <xsl:template                   match = "Person">
  <BODY>

  <!-- 
  ==================================================================
  Display Report heading and subheading 
  ================================================================== -->
   <b>
    <font size='4'>
     <center>
      <xsl:text>Person</xsl:text>
      <br/>
      <xsl:text>QC Report</xsl:text>
     </center>
    </font>
    <font size='3'>
     <center>
      <xsl:value-of             select = "document('cdrutil:/date/%25B %25#d, %25Y %25#I:%25M% 25p')"/>
     </center>
    </font>
   </b>
   <p/>

   <!-- 
   ====================================================================
   Display Name Header, and PersonNameInformation
   ==================================================================== -->
   <b>
    <font size='4'>
    <xsl:value-of               select = "concat('CDR', 
                                           number(
                                           substring-after($docID, 'CDR')))"/>
    </font>
   </b>
   <p/>

   <xsl:apply-templates         select = "PersonNameInformation"/>
   <p/>
   <!-- 
   ============================================================
   Display Professional information 
   ============================================================ -->
   <xsl:apply-templates         select = "ProfessionalInformation"/>


   <!-- 
   ======================================================================
   Display the Administrative Information Section
   ===================================================================== -->
   <b>
    <font size='4'>Administrative Information</font>
   </b>
   <xsl:apply-templates         select = "ProfessionalInformation/
                                          PhysicianDetails/
                                          AdministrativeInformation"/>

   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b><u>Status</u></b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "Status/CurrentStatus"/>
     </td>
    </tr>  
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Entered By</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "Status/EnteredBy"/>
     </td>
    </tr>  
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Entry Date</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "Status/EntryDate"/>
     </td>
    </tr>  
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Comment</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "Status/Comment"/>
     </td>
    </tr>  
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Preferred Contact Mode</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "ProfessionalInformation/
                                         PhysicianDetails/
                                         AdministrativeInformation/
                                         PreferredContactMode"/>
     </td>
    </tr>
   </table>
   <p/>

   <!-- 
   ======================================================================
   Display Location Information section
   ====================================================================== -->
   <b>
    <font size='4'>Location Information</font>
   </b>
   <p/>
   <xsl:apply-templates         select = "PersonLocations"/>

  <!--- 
  ===================================================================
  Display links to other documents, Dated Actions, Date Last Modified
  =================================================================== -->
  <b>
   <font size='4'>Links to Other Documents</font>
  </b>
  <br />

  <!--Variable names (@@...@@) will be replaced with a Yes/No depending
      on the query results for the links -->
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Active, Approved, Temporarily Closed Protocols</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@ACTIVE_APPR0VED_TEMPORARILY_CLOSED_PROTOCOLS@@</xsl:text>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Closed, Completed Protocols</b>
    </td>
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:text>@@CLOSED_COMPLETED_PROTOCOLS@@</xsl:text>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Health Professional Summaries</b>
    </td>
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:text>@@HEALTH_PROFESSIONAL_SUMMARIES@@</xsl:text>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Patient Summaries</b>
    </td>
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:text>@@PATIENT_SUMMARIES@@</xsl:text>
    </td>
   </tr>
  </table>
  <p/>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>In External_Map Table</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@IN_EXTERNAL_MAP_TABLE@@</xsl:text>
    </td>
   </tr>
  </table>
  <p/>

  <xsl:apply-templates          select = "DatedAction"/>

  <!-- 
  =====================================================================
  Display Record Information Date created, Modified, and User
  =====================================================================  -->
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b><font size="4">Date Last Modified</font></b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:apply-templates      select = "DateLastModified"/>
     </td>
    </tr>
   </table>
  <p/>

  <b>
   <font size='4'>Record Information</font>
  </b>
  <br />
  <table        xsl:use-attribute-sets = "table">
   <xsl:for-each                select = "CdrDocCtl">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>
       <font size='3'>Created By</font>
      </b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "Create/User"/>
     </td>
    </tr>
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>
       <font size='3'>Date</font>
      </b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "substring-before(Create/Date,'T')"/>
     </td>
    </tr>
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>
       <font size='3'>Updated By</font>
      </b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "Modify/User"/><br />
     </td>
    </tr>
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>
       <font size='3'>Date</font>
      </b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "substring-before(Modify/Date,'T')"/>
     </td>
    </tr>
   </xsl:for-each>
  </table>
  <p/>

  <!-- 
  =================================================================
  Display most recent Mailer Information
  ================================================================= -->
  <b>
   <font size='4'>Most Recent Mailer</font>
  </b>

   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Date Sent</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:text>@@MAILER_DATE_SENT@@</xsl:text>
     </td>
    </tr>
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Date Received</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:text>@@MAILER_RESPONSE_RECEIVED@@</xsl:text>
     </td>
    </tr>
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Type of Change</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:text>@@MAILER_TYPE_OF_CHANGE@@</xsl:text>
     </td>
    </tr>
   </table>
   <p/>
  </BODY>
 </xsl:template>


 <!--
 =================================================================
 Template for PersonNameInformation
 ================================================================= -->
 <xsl:template                   match = "PersonNameInformation">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>
      <font size='4'>Name</font>
     </b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <b>
      <xsl:if                     test = "Prefix">
       <xsl:apply-templates     select = "Prefix"/>
       <xsl:text> </xsl:text>
      </xsl:if>
      <xsl:apply-templates      select = "GivenName"/>
      <xsl:text> </xsl:text>
      <xsl:apply-templates      select = "MiddleInitial"/>
      <xsl:text> </xsl:text>
 
      <!-- check for Professional suffix and display -->
      <xsl:choose>
       <xsl:when                  test = "ProfessionalSuffix">
        <xsl:apply-templates    select = "SurName"/>
        <xsl:text>,</xsl:text>
        <xsl:apply-templates    select = "GenerationSuffix"/>
        <xsl:text> </xsl:text>
        <xsl:for-each           select = "ProfessionalSuffix">
         <xsl:value-of          select = "."/>
         <xsl:if                  test = "position() !=last()">
          <xsl:text>, </xsl:text>
         </xsl:if>
        </xsl:for-each>
       </xsl:when>
       <xsl:otherwise>
       <!-- Display surname if no Suffix is present -->
        <xsl:apply-templates    select = "SurName"/>
       </xsl:otherwise>
      </xsl:choose>
      <br/><br/>
     </b>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>
      <font size='4'>Comment</font>
     </b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "Comment"/>
    </td>
   </tr>
  </table>
 </xsl:template>


 <!-- 
 ============================================================
 Display Professional information 
 ============================================================ -->
 <xsl:template                   match = "ProfessionalInformation">
  <b>
   <font size='4'>
    <xsl:text>Professional Information</xsl:text>
   </font>
  </b>

  <xsl:apply-templates          select = "PDQBoardMembershipDetails"/>
  <xsl:apply-templates          select = "PhysicianDetails"/>
 </xsl:template>


 <!-- 
 =======================================================================
 Template to display Board Membership Information
 ======================================================================= -->
 <xsl:template                   match = "PDQBoardMembershipDetails">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>
      <font size='3'>PDQ Board</font>
     </b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <ul>
      <xsl:apply-templates      select = "PDQEditorialBoard |
                                          PDQAdvisoryBoard  |
                                          PDQVoluntaryProtocolReviewBoard"/>
     </ul>
    </td>
   </tr>
  </table>
  <br/>
 </xsl:template>


 <!-- 
 =========================================================================
 Template to display Board Names
 ========================================================================= -->
 <xsl:template                    match = "PDQEditorialBoard |
                                           PDQAdvisoryBoard  |
                                           PDQVoluntaryProtocolReviewBoard">
  <li>
   <xsl:value-of                 select = "Organization/
                                           OrganizationName"/>
  </li>
 </xsl:template>


 <!--
 =========================================================================
 Template to display Physician Details information
 ========================================================================= -->
 <xsl:template                   match = "PhysicianDetails">
  <xsl:for-each                 select = "PhysicianSpecialtyInformation">
   
    <xsl:for-each               select = "BoardCertifiedSpecialty">
   <table       xsl:use-attribute-sets = "table">
     <tr>
      <td       xsl:use-attribute-sets = "cell1of2">
       <b>Specialty</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of            select = "BoardCertifiedSpecialtyName"/>
      </td>
     </tr>
     <tr>
      <td       xsl:use-attribute-sets = "cell1of2">
       <b>Board Certification</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of            select = "Certified"/>
      </td>
     </tr>
     <tr>
      <td       xsl:use-attribute-sets = "cell1of2">
       <b>Verification</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of            select = "Verified"/>
      </td> 
     </tr>
   </table>
   <br/>
    </xsl:for-each>
   <p>
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td       xsl:use-attribute-sets = "cell1of2">
      <b>Other Specialty</b>
     </td>
     <td       xsl:use-attribute-sets = "cell2of2">
      <table   xsl:use-attribute-sets = "table">
       <xsl:for-each           select = "OtherSpecialty">
        <tr>
         <td   xsl:use-attribute-sets = "cell2of2">
          <xsl:value-of        select = "."/>
         </td>
        </tr>
       </xsl:for-each>
      </table>
     </td>
    </tr>
   </table>
   </p>
  </xsl:for-each>

  <xsl:apply-templates         select = "PhysicianMembershipInformation"/>
   <table      xsl:use-attribute-sets = "table">
    <tr>
     <td       xsl:use-attribute-sets = "cell1of2">
      <b>Comment</b>
     </td>
     <td       xsl:use-attribute-sets = "cell2of2">
      <xsl:apply-templates     select = "Comment"/>
     </td>
    </tr>
   </table>
  <p/>

 </xsl:template>


 <!-- 
 ===================================================================
 Display Membership Information
 =================================================================== -->
 <xsl:template                  match = "PhysicianMembershipInformation">
  <table       xsl:use-attribute-sets = "table">
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b>Membership Information</b>
    </td>
   </tr>
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b><u>Cooperative Group(s)</u></b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <ul>
      <xsl:for-each            select = "MemberOfCooperativeGroup/
                                         CooperativeGroup/
                                         Organization/
                                         OrganizationName">
       <li>
        <xsl:choose>
         <xsl:when              test = "../../../@GroupChair">
          <xsl:value-of      select = "."/>
          <xsl:text> (Group Chair)</xsl:text>
         </xsl:when>
         <xsl:otherwise>
          <xsl:value-of      select = "."/>
         </xsl:otherwise>
        </xsl:choose>
       </li>
      </xsl:for-each> 
     </ul>
    </td>
   </tr>
  </table>
  <p>
  <table       xsl:use-attribute-sets = "table">
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b><u>Medical Societies</u></b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <ul>
      <xsl:for-each            select = "MemberOfMedicalSociety">
       <li>
        <xsl:value-of          select = "."/>
       </li>
      </xsl:for-each> 
     </ul>
    </td>
   </tr>
  </table>
  </p>
 </xsl:template>


 <!-- 
 =====================================================================
 Template to display Administrative Information
 ===================================================================== -->
 <xsl:template                  match = "AdministrativeInformation">
  <table       xsl:use-attribute-sets = "table">
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b><u>Directory</u></b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of             select = "Directory/Include"/>
    </td>
   </tr>  
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b>Entered By</b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of             select = "Directory/EnteredBy"/>
    </td>
   </tr>  
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b>Entry Date</b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of             select = "Directory/Date"/>
    </td>
   </tr>  
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b>Comment</b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of             select = "Directory/Comment"/>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template> 


 <!-- 
 =====================================================================
 Template to display the Person Locations
 ===================================================================== -->
 <xsl:template                  match = "PersonLocations">

  <xsl:apply-templates         select = "Home"/>
  <xsl:apply-templates         select = "PrivatePracticeLocation"/>
  <xsl:apply-templates         select = "OtherPracticeLocation"/>
 </xsl:template>


 <!-- 
 =====================================================================
 Display Person Location Information for Private Practice and 
 Home Location
 ===================================================================== -->
 <xsl:template                    match = "Home                    | 
                                          PrivatePracticeLocation"> 
  <b>
   <xsl:choose>
    <xsl:when                      test = "name() = 'Home'">
     <font size='3'>Home</font>
    </xsl:when>
    <xsl:otherwise>
     <font size='3'>Private Practice</font>
    </xsl:otherwise>
   </xsl:choose>
  </b>

  <xsl:if                          test = "../CIPSContact = @cdr:id">
   <b><font size="3"> - CIPS Contact</font></b>
  </xsl:if>
  <xsl:if                          test = "@PreviousLocation = 'Yes'">
   <b>
    <font size="3"> - Previous Location</font>
   </b>
  </xsl:if>
  <br/>

  <xsl:for-each                  select = "PostalAddress">
   <xsl:choose>
   <xsl:when                       test = "@Public">
    <table cellpadding="0" cellspacing="0">
     <tr>
      <td>
   <xsl:choose>
    <xsl:when                      test = "@native">
     <i>
      <xsl:call-template              name = "listAddress"/>
     </i>
    </xsl:when>
    <xsl:otherwise>
     <xsl:call-template              name = "listAddress"/>
    </xsl:otherwise>
   </xsl:choose>
      </td><td valign="center"><font size="10">&#125;</font></td>
      <td valign="center"><b><xsl:text> (Public = No)</xsl:text></b></td>
     </tr>
    </table>
   </xsl:when>
   <xsl:otherwise>
   <xsl:choose>
    <xsl:when                      test = "@native">
     <i>
      <xsl:call-template              name = "listAddress"/>
     </i>
    </xsl:when>
    <xsl:otherwise>
     <xsl:call-template              name = "listAddress"/>
    </xsl:otherwise>
   </xsl:choose>
   </xsl:otherwise>
   </xsl:choose>
   <xsl:call-template              name = "listPhone"/>
  </xsl:for-each>
  <br />
 </xsl:template>


 <!-- 
 =====================================================================
 Display Person Location Information for Other Practice Location 
 ===================================================================== -->
 <xsl:template                 match = "OtherPracticeLocation">
  <b>
   <font size='3'>Other Practice Location</font>
  </b>
 
  <xsl:if                       test = "../CIPSContact = @cdr:id">
   <b>
    <font size="3"> - CIPS Contact</font>
   </b>
  </xsl:if>
  <xsl:if                       test = "@PreviousLocation = 'Yes'">
   <b>
    <font size="3"> - Previous Location</font>
   </b>
  </xsl:if>
  <br/>

  <!-- Display the Person Title if available -->
  <xsl:if                     test = "PersonTitle">
   <xsl:value-of            select = "PersonTitle"/>
   <br/>
  </xsl:if>

  <xsl:for-each             select = "OrganizationLocation/OrganizationName">
   <xsl:value-of            select = "."/>
   <br />
  </xsl:for-each>

  <xsl:for-each               select = "OrganizationLocation/
                                        PostalAddress">
   <xsl:choose>
   <xsl:when                       test = "@Public">
    <table cellpadding="0" cellspacing="0">
     <tr>
      <td>
   <xsl:choose>
    <xsl:when                      test = "@native">
     <i>
      <xsl:call-template              name = "listAddress"/>
     </i>
    </xsl:when>
    <xsl:otherwise>
     <xsl:call-template              name = "listAddress"/>
    </xsl:otherwise>
   </xsl:choose>
      </td><td valign="center"><font size="10">&#125;</font></td>
      <td valign="center"><b><xsl:text> (Public = No)</xsl:text></b></td>
     </tr>
    </table>
   </xsl:when>
   <xsl:otherwise>
   <xsl:choose>
    <xsl:when                      test = "@native">
     <i>
      <xsl:call-template              name = "listAddress"/>
     </i>
    </xsl:when>
    <xsl:otherwise>
     <xsl:call-template              name = "listAddress"/>
    </xsl:otherwise>
   </xsl:choose>
   </xsl:otherwise>
   </xsl:choose>
   <xsl:call-template           name = "listPhone"/>
  </xsl:for-each>

  <xsl:if                       test = "ComplexAffiliation">
   <b>
    <font size='3'>Complex Affiliation</font>
   </b>
   <xsl:apply-templates       select = "ComplexAffiliation"/>
  </xsl:if>
  <br/>
 </xsl:template>


 <!--
 ========================================================================
 Template to display the Dated Action
 ======================================================================== -->
 <xsl:template                 match = "DatedAction">
  <b>
   <font size='4'>Dated Action(s)</font>
  </b>
  <br />

  <table      xsl:use-attribute-sets = "table">
   <tr>
    <td       xsl:use-attribute-sets = "cell1of2">
     <b>Action Description</b>
    </td>
    <td       xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of            select = "ActionDescription"/>
    </td>
   </tr>
   <tr>
    <td       xsl:use-attribute-sets = "cell1of2">
     <b>Action Date</b>
    </td>
    <td       xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of            select = "ActionDate"/>
    </td>
   </tr>
   <tr>
    <td       xsl:use-attribute-sets = "cell1of2">
     <b>Comment</b>
    </td>
    <td       xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of            select = "Comment"/>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>


 <!--
 ========================================================================
 Template to display the Complex Affiliation
 ======================================================================== -->
 <xsl:template                 match = "ComplexAffiliation">
  <br/>
  <table      xsl:use-attribute-sets = "table">
   <tr>
    <td       xsl:use-attribute-sets = "cell1of2">
     <b>Organization</b>
    </td>
    <td       xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of            select = "OrganizationName"/>
    </td>
   </tr>
   <tr>
    <td       xsl:use-attribute-sets = "cell1of2">
     <b>Role</b>
    </td>
    <td       xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of            select = "RoleAtAffiliatedOrganization"/>
    </td>
   </tr>
  </table>
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                  name = "listAddress">
  <xsl:for-each               select = "Street">
   <xsl:value-of              select = "."/>
   <br/>
  </xsl:for-each>
  <xsl:choose>
   <xsl:when                    test = "PostalCodePosition = 'before City'">
    <xsl:value-of             select = "PostalCode_ZIP"/>
    <xsl:text> </xsl:text>
    <xsl:value-of             select = "City"/>
    <xsl:if                     test = "CitySuffix">
     <xsl:text> </xsl:text>
     <xsl:value-of            select = "CitySuffix"/>
    </xsl:if>
   </xsl:when>
   <xsl:when                    test = "PostalCodePosition = 'after City'">
    <xsl:value-of             select = "City"/>
    <xsl:if                     test = "CitySuffix">
     <xsl:text> </xsl:text>
     <xsl:value-of            select = "CitySuffix"/>
    </xsl:if>
    <xsl:text> </xsl:text>
    <xsl:value-of             select = "PostalCode_ZIP"/>
   </xsl:when>
   <!-- 
   This section is for US addresses
   =================================================================== -->
   <xsl:when                    test = "PostalCodePosition = 
                                         'after PoliticalSubUnit_State'">
    <xsl:value-of             select = "City"/>
    <xsl:if                     test = "CitySuffix">
     <xsl:text> </xsl:text>
     <xsl:value-of            select = "CitySuffix"/>
    </xsl:if>
    <xsl:text>, </xsl:text>
    <xsl:value-of             select = "PoliticalSubUnitShortName"/>
    <xsl:text> </xsl:text>
    <xsl:value-of             select = "PostalCode_ZIP"/>
   </xsl:when>
  </xsl:choose>
  <br/>
  <xsl:value-of               select = "CountryName"/>
  <br/>
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Phone, Fax, WebSite, Role information
 ======================================================================== -->
 <xsl:template                  name = "listPhone">
  <!--
  Display the Phone, Fax, Email, etc. in a table format
  ========================================================== -->
  <table      xsl:use-attribute-sets = "table">
   <tr> 
    <td       xsl:use-attribute-sets = "cell1of2">
     <xsl:choose>
      <xsl:when                 test = "../Phone/@native">
       <i><xsl:text>Phone</xsl:text></i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:text>Phone</xsl:text>
      </xsl:otherwise>
     </xsl:choose>
    </td>
    <td       xsl:use-attribute-sets = "cell2of2">
     <xsl:choose>
      <xsl:when                 test = "../Phone/@native">
       <i>
        <xsl:value-of         select = "../Phone"/>
        <xsl:if                test = "../Phone/@Public">
         <b>
          <xsl:text> (Public = No)</xsl:text>
         </b>
        </xsl:if>
       </i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:value-of          select = "../Phone"/>
       <xsl:if                  test = "../Phone/@Public">
        <b>
         <xsl:text> (Public = No)</xsl:text>
        </b>
       </xsl:if>
      </xsl:otherwise>
     </xsl:choose>
    </td>
   </tr>
   <tr>
    <td>
     <xsl:choose>
      <xsl:when                 test = "../TollFreePhone/@native">
       <i><xsl:text>TollFreePhone</xsl:text></i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:text>TollFreePhone</xsl:text>
      </xsl:otherwise>
     </xsl:choose>
    </td>
    <td       xsl:use-attribute-sets = "cell2of2">
     <xsl:choose>
      <xsl:when                 test = "../TollFreePhone/@native">
       <i>
        <xsl:value-of         select = "../TollFreePhone"/>
       </i>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of         select = "../TollFreePhone"/>
      </xsl:otherwise>
     </xsl:choose>
    </td>
   </tr>
   <tr>
    <td       xsl:use-attribute-sets = "cell1of2">
     <xsl:choose>
      <xsl:when                 test = "../Fax/@native">
       <i>
        <xsl:text>Fax</xsl:text>
       </i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:text>Fax</xsl:text>
      </xsl:otherwise>
     </xsl:choose>      
    </td>
    <td       xsl:use-attribute-sets = "cell2of2">
     <xsl:choose>
      <xsl:when                 test = "../Fax/@native">
       <i>
        <xsl:value-of            select = "../Fax"/>
       </i>
      </xsl:when>
      <xsl:otherwise>
       <xsl:value-of            select = "../Fax"/>
      </xsl:otherwise>
     </xsl:choose>      
    </td>
   </tr>
    <tr>
     <td       xsl:use-attribute-sets = "cell1of2">Email</td>
     <xsl:choose>
      <xsl:when                 test = "../Email">
       <td    xsl:use-attribute-sets = "cell2of2">
        <xsl:call-template      name = "listEmail">
         <xsl:with-param        name = "email"
                              select = "../Email"/>
        </xsl:call-template>
        <xsl:if                 test = "../Email/@Public">
         <b>
         <xsl:text> (Public = No)</xsl:text>
         </b>
        </xsl:if>
       </td>
      </xsl:when>
     </xsl:choose>
    </tr>
    <tr>
     <td      xsl:use-attribute-sets = "cell1of2">
      <xsl:choose>
       <xsl:when                test = "../WebSite/@native">
        <i>
         <xsl:text>Website</xsl:text>
        </i>
       </xsl:when>
       <xsl:otherwise>
         <xsl:text>Website</xsl:text>
       </xsl:otherwise>
      </xsl:choose>
     </td>
     <xsl:choose>
      <xsl:when                 test = "../WebSite">
       <td    xsl:use-attribute-sets = "cell2of2">
        <xsl:choose>
         <xsl:when              test = "../WebSite/@native">
          <i>
           <xsl:call-template      name = "listWebSite">
            <xsl:with-param        name = "webSite"
                              select = "../WebSite/@xref"/>
           </xsl:call-template>
           <br/>
           <xsl:value-of         select = "../WebSite"/>
          </i>
         </xsl:when>
         <xsl:otherwise>
           <xsl:call-template      name = "listWebSite">
            <xsl:with-param        name = "webSite"
                              select = "../WebSite/@xref"/>
           </xsl:call-template>
           <br/>
           <xsl:value-of         select = "../WebSite"/>
         </xsl:otherwise>
        </xsl:choose>
       </td>
      </xsl:when>
     </xsl:choose>
    </tr>
    <xsl:if                        test = "../../PersonRole">
     <tr>
      <td        xsl:use-attribute-sets = "cell1of2">
       <xsl:text>Person Role</xsl:text>
      </td>
      <td        xsl:use-attribute-sets = "cell2of2">
       <table    xsl:use-attribute-sets = "table">
        <xsl:for-each            select = "../../PersonRole">
         <tr>
          <td    xsl:use-attribute-sets = "cell1of2">
           <xsl:value-of         select = "."/>
          </td>
         </tr>
        </xsl:for-each>
       </table>
      </td>
     </tr>
    </xsl:if>
   <br/>
  </table>
  <p/>
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Email information
 ======================================================================== -->
 <xsl:template                 name = "listEmail">
  <xsl:param                   name = "email"/>

  <xsl:element         name = "a">
   <xsl:attribute      name = "href">
    <xsl:text>mailto:</xsl:text>
    <xsl:value-of    select = "$email"/>
   </xsl:attribute>
    <xsl:value-of    select = "$email"/>
  </xsl:element>

 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Website information
 ======================================================================== -->
 <xsl:template                 name = "listWebSite">
  <xsl:param                   name = "webSite"/>

  <xsl:element         name = "a">
   <xsl:attribute      name = "href">
    <xsl:choose>
     <xsl:when         test = "contains($webSite, 'http://')">
      <xsl:value-of  select = "$webSite"/>
     </xsl:when>
     <xsl:otherwise>
      <xsl:text>http://</xsl:text>
      <xsl:value-of  select = "substring-after($webSite, 'http://')"/>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:attribute>
   <xsl:attribute      name = "target">
    <xsl:text>new</xsl:text>
   </xsl:attribute>

   <xsl:value-of    select = "$webSite"/>
  </xsl:element>

 </xsl:template>
</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>