<?xml version="1.0"?>
  <xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                 version="1.0"
                 xmlns:cdr="cips.nci.nih.gov/cdr">
   <xsl:output method="html"/>
   <xsl:template match="/">
     <!--Filter written by C.Burg - 9/25/2001 -->
  <!-- This program is a filter to create a Person
       Content QC Report -->
      
   <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
    <HTML>
    <HEAD>
    <TITLE>Person Content QC Report</TITLE>
     <!--
     <LINK REL='stylesheet' 
           HREF='/stylesheets/protocol2.css' 
           TYPE='text/css' /> -->
    </HEAD>
   <BASEFONT FACE='Arial, Helvetica, sans-serif' />
    <xsl:apply-templates select="Person"/>
    
    </HTML>
    </xsl:template>
  <!-- Generate the HTML for the Person QC Report-->
  <xsl:template match="Person">
    <BODY>
    <!--Display Report heading and subheading 
  <b><font size='4'><left>Person Content<br />
      QC Report</left></font></b><br />-->
<!-- <table>
 <tr align='right'>
 <th align='right'><xsl:text>September 24,2001</xsl:text></th>
 <td></td>
 </tr>
</table>-->
<!-- <font size='3'>Maxine L. Hetherington&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;September 13, 2001</font><br />
 <font size='3'><xsl:text>CDR0000243848</xsl:text></font><br /><br />-->
<!-- Display report title -->
 <b><font size='4'><xsl:text>Person QC Report</xsl:text></font></b><br /><br />
<!-- Display name header -->
 <b><font size='4'><xsl:text>Name</xsl:text></font></b><br /><br />
 <xsl:apply-templates select="PersonNameInformation/GivenName"/>
  <xsl:text>&#xa0;</xsl:text>
<!--test for generation suffix and display if present -->
   <xsl:if test="PersonNameInformaton/GenerationSuffix">
   <xsl:for-each select="PersonNameInformation/GenerationSuffix">
   <xsl:value-of select="."/>
   <xsl:text>&#xa0;</xsl:text>
   </xsl:for-each>
   </xsl:if>
<!--check for Professional suffix and display -->
   <xsl:choose>
   <xsl:when test="PersonNameInformation/ProfessionalSuffix">
    <xsl:apply-templates select="PersonNameInformation/SurName"/>,
   <xsl:for-each select="PersonNameInformation/ProfessionalSuffix">
   <xsl:value-of select="."/>
   <xsl:text>&#xa0;</xsl:text>
   </xsl:for-each>
   <br /><br />
   </xsl:when>
   <xsl:otherwise>
   <!-- Display surname if no Suffix is present -->
    <xsl:apply-templates select="PersonNameInformation/SurName"/><br /><br />
    </xsl:otherwise>
    </xsl:choose>
 <!-- Display Professional information -->

   <b><font size='4'><xsl:text>Professional Information</xsl:text></font></b><br /><br />
<!-- <dl>
<xsl:for-each select="ProfessionalInformation/PDQBoardMembershipDetails">
<dt><b><xsl:text>PDQ Board</xsl:text></b><xsl:text>..........................................</xsl:text><xsl:value-of select="PDQBoardMemberDetails"/></dt>
</xsl:for-each>
</dl>-->
  
 
 <dl>
<xsl:for-each select="ProfessionalInformation/PhysicianDetails/PhysicianSpecialtyInformation">
<dt><b><xsl:text>Specialty</xsl:text></b><xsl:text>...........................................</xsl:text><xsl:value-of select="PhysicianSpecialtyName"/></dt>
</xsl:for-each>
</dl>
  
 
 <dl>
 <xsl:for-each select="ProfessionalInformation/PhysicianDetails/PhysicianSpecialtyInformation/PhysiciansBoardCertification">
<dt><b><xsl:text>Board Certification</xsl:text></b><xsl:text>..........................</xsl:text><xsl:value-of select="PhysicianBoardName"/></dt>
<xsl:if test="CertificationVerification">
<dl>
<dt><b><xsl:text>Verification</xsl:text></b><xsl:text>..............................</xsl:text><xsl:value-of select="CertificationVerification"/></dt>
<xsl:if test="Comment">
<dt><xsl:value-of select="concat('Comment.......................',Comment)"/></dt>
</xsl:if>
</dl>
</xsl:if>
</xsl:for-each>
 </dl>

 
 <b><font size='3'><xsl:text>Membership Information</xsl:text></font></b><br />
  
 <xsl:if test="ProfessionalInformation/PhysicianDetails/PhysicianMembershipInformation/MemberOfCooperativeGroup">
 
<xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text><b><font size='3'>Cooperative Group(s)</font></b><xsl:text>..................</xsl:text>
 <xsl:for-each  select="ProfessionalInformation/PhysicianDetails/PhysicianMembershipInformation/MemberOfCooperativeGroup">
 <xsl:if test="contains(@cdr:ref,'CDR')">
 <xsl:variable name="CoopGroupID" select="@cdr:ref"/>
 <xsl:variable name="CoopInfo" select="document(concat('cdr:',$CoopGroupID))"/>

<xsl:value-of select="$CoopInfo/Organization/OrganizationNameInformation/OfficialName"/><br /><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;</xsl:text>
</xsl:if>
</xsl:for-each>
</xsl:if>
 
 

 
  
<br /> <xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text><b><font size='3'>Medical Societies</font></b><xsl:text>..........................</xsl:text> 
   <xsl:for-each  select="ProfessionalInformation/PhysicianDetails/PhysicianMembershipInformation/MemberOfMedicalSociety">
<xsl:value-of select="."/><br /><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;</xsl:text>
</xsl:for-each>


<!-- Display Administrative Information -->
<br />
<b><font size='4'>Administrative Information</font></b><br />
    <dl>
  <xsl:for-each  select="ProfessionalInformation/PhysicianDetails/AdministrativeInformation/Directory">
    <dt><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text><b><xsl:text>Directory</xsl:text></b><xsl:text>...................................</xsl:text><xsl:value-of select="Include"/></dt>
    <dt><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text><b><xsl:text>Date</xsl:text></b><xsl:value-of select="concat('&#xa0;&#xa0;&#xa0;         &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;',Date)"/></dt>
    <dt><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text><b><xsl:text>Comment</xsl:text></b><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0; &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text><xsl:value-of select="Comment"/></dt>
</xsl:for-each>
   </dl>
<dl>
<xsl:for-each select="Status">
<dt><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text><b><xsl:text>Status</xsl:text></b><xsl:value-of select="concat('........................................',CurrentStatus)"/></dt>
 </xsl:for-each>
 </dl> 
  <dl>
<xsl:for-each select="Status/Comment">
<dt><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text><b><xsl:text>Comment</xsl:text></b><xsl:value-of select="concat('&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;',Comment)"/></dt>
 </xsl:for-each>
 </dl> 
  <dl>
  
  <xsl:for-each  select="ProfessionalInformation/PhysicianDetails/AdministrativeInformation">
    <dt><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text><b><xsl:text>Preferred Contact Mode</xsl:text></b><xsl:value-of select="concat('..........',PreferredContactMode)"/></dt>
  </xsl:for-each>
  </dl>
  <!-- Display location information for home, private practice or other
       practice locations -->

<b><font size='4'>Location Information</font></b><br /><br />
<b><font size='3'>Home</font></b>
 <xsl:if test="PersonLocations">
 <xsl:for-each select="PersonLocations">
    <xsl:variable name="Cipscontact" select="CIPSContact"/>
    <!--<xsl:value-of select="$Cipscontact"/>-->
    <!--<xsl:if test="$Cipscontact">
    <b><font size='3'>CIPS Contact</font></b><br />
     </xsl:if>-->
     </xsl:for-each>
     
    
   <xsl:for-each select="PersonLocations/Home/PostalAddress/Street">
    <xsl:value-of select="."/><br />
    </xsl:for-each>
 <xsl:if test="PersonLocations/Home/PostalAddress/CodePosition='before city'">
  <xsl:if test="PersonLocations/Home/PostalAddress/PostalCode_ZIP">
  <xsl:for-each select="PersonLocations/Home/PostalAddress/PostalCode_ZIP">
  <xsl:value-of select="."/><br />
  </xsl:for-each>
  </xsl:if>
  </xsl:if>
  <xsl:choose>
  <xsl:when test="PersonLocations/Home/PostalAddress/CitySuffix">
  <xsl:for-each select="PersonLocations/Home/PostalAddress">
    <xsl:value-of select="concat(City,' ',CitySuffix)"/>,
    </xsl:for-each>
    </xsl:when>
    <xsl:otherwise>
    <xsl:for-each select="PersonLocations/Home/PostalAddress">
    <xsl:value-of select="City"/>
    </xsl:for-each>
    </xsl:otherwise>
    </xsl:choose>

   <xsl:if test="PersonLocations/Home/PostalAddress/CodePosition='after City'">
  <xsl:if test="PersonLocations/Home/PostalAddress/PostalCode_ZIP">
  <xsl:for-each select="PersonLocations/Home/PostalAddress/PostalCode_ZIP">
  <xsl:value-of select="."/><br />
  </xsl:for-each>
  </xsl:if>
  </xsl:if>
 
       
  <!--  <xsl:choose>
    <xsl:when test="contains(PersonLocations/Home/PostalAddress/PoliticalUnit_State/@cdr:ref,'CDR')">
   <xsl:variable name="StateID" select="PersonLocations/Home/PostalAddress/PoliticalUnit_State/@cdr:ref"/>
    <xsl:variable name="StateInfo" select="document(concat('cdr:',$StateID))"/>
    <xsl:if test="$StateInfo/State/StateName">
    <xsl:text>,&#xa0;</xsl:text>
    <xsl:apply-templates select="$StateInfo/State/StateName"/>
    <xsl:text>&#xa0;&#xa0;</xsl:text>
    </xsl:if>
   </xsl:when>
   <xsl:otherwise>
   <xsl:value-of select="$StateID"/>
    <xsl:text>not available in database</xsl:text>
    </xsl:otherwise>
    </xsl:choose>-->

  <xsl:if test="PersonLocations/Home/PostalAddress/CodePosition='after PoliticalUnit_State'">
  <xsl:if test="PersonLocations/Home/PostalAddress/PostalCode_ZIP">
  <xsl:for-each select="PersonLocations/Home/PostalAddress/PostalCode_ZIP">
  <xsl:value-of select="."/><br />
  </xsl:for-each>
  </xsl:if>
  </xsl:if>

 
   
 <!-- <xsl:choose>
    <xsl:when test="contains(Home/PostalAddress/Country/@cdr:ref,'CDR')">
   <xsl:variable name="CountryID" select="Home/PostalAddress/Country/@cdr:ref"/>
    <xsl:variable name="CountryInfo" select="document(concat('cdr:',$CountryID))"/>
    <xsl:if test="$CountryInfo/Country/CountryName">
    <xsl:apply-templates select="$CountryInfo/Country/CountryName"/><br />
    </xsl:if>
   </xsl:when>
   <xsl:otherwise>
    <xsl:value-of select="$CountryID"/>
    <xsl:text>not available in database</xsl:text>
    </xsl:otherwise>
    </xsl:choose>-->
  
   <xsl:if test="PersonLocations/Home/PostalAddress/CodePosition='after Country'">
  <xsl:if test="PersonLocations/Home/PostalAddress/PostalCode_ZIP">
  <xsl:for-each select="PersonLocations/Home/PostalAddress/PostalCode_ZIP">
  <xsl:value-of select="."/><br />
  </xsl:for-each>
  </xsl:if>
  </xsl:if>

    
  <xsl:for-each select="PersonLocations/Home">
    <xsl:value-of select="concat('Phone:&#xa0;&#xa0;&#xa0;&#xa0;',Phone)"/><br />
 <xsl:value-of select="concat('Fax:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;',Fax)"/><br />
 <xsl:if test="Email">
 <xsl:text>Email:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text>
 <u><xsl:value-of select="Email"/></u>
 </xsl:if>
 </xsl:for-each>
 <br /><br />
 </xsl:if>

<b><font size='3'>Private Practice</font></b><br /><br />

 <xsl:if test="PersonLocations/PrivatePractice">
 <xsl:for-each select="PersonLocations">
    <xsl:variable name="Cipscontact" select="CIPSContact"/>
    <xsl:if test="$Cipscontact">
    <b><font size='3'>CIPS Contact</font></b><br />
     </xsl:if>
    </xsl:for-each>
    
   <xsl:for-each select="PersonLocations/PrivatePractice/PostalAddress/Street">
    <xsl:value-of select="."/><br />
    </xsl:for-each>
   
     <xsl:if test="PersonLocations/PrivatePractice/PostalAddress/CodePosition='before city'">
  <xsl:if test="PersonLocations/PrivatePractice/PostalAddress/PostalCode_ZIP">
  <xsl:for-each select="PersonLocations/PrivatePractice/PostalAddress/PostalCode_ZIP">
  <xsl:value-of select="."/><br />
  </xsl:for-each>
  </xsl:if>
  </xsl:if> 

   <xsl:choose>
  <xsl:when test="PersonLocations/PrivatePractice/PostalAddress/CitySuffix">
  <xsl:for-each select="PersonLocations/PrivatePractice/PostalAddress">
    <xsl:value-of select="concat(City,' ',CitySuffix)"/>,
    </xsl:for-each>
    </xsl:when>
    <xsl:otherwise>
    <xsl:for-each select="PersonLocations/PrivatePractice/PostalAddress">
    <xsl:value-of select="City"/>
    </xsl:for-each>
    </xsl:otherwise>
    </xsl:choose>
     <xsl:if test="PersonLocations/PrivatePractice/PostalAddress/CodePosition='after City'">
  <xsl:if test="PersonLocations/PrivatePractice/PostalAddress/PostalCode_ZIP">
  <xsl:for-each select="PersonLocations/PrivatePractice/PostalAddress/PostalCode_ZIP">
  <xsl:value-of select="."/><br />
  </xsl:for-each>
  </xsl:if>
  </xsl:if>
   
  
 

  <!--  <xsl:choose>
    <xsl:when test="contains(PersonLocations/PrivatePractice/PostalAddress/PoliticalUnit_State/@cdr:ref,'CDR')">
   <xsl:variable name="StateID" select="PersonLocations/PrivatePractice/PostalAddress/PoliticalUnit_State/@cdr:ref"/>
    <xsl:variable name="StateInfo" select="document(concat('cdr:',$StateID))"/>
    <xsl:if test="$StateInfo/State/StateName">
    <xsl:text>,&#xa0;</xsl:text>
    <xsl:apply-templates select="$StateInfo/State/StateName"/>
    <xsl:text>&#xa0;&#xa0;</xsl:text>
    </xsl:if>
   </xsl:when>
   <xsl:otherwise>
   <xsl:value-of select="$StateID"/>
    <xsl:text>not available in database</xsl:text>
    </xsl:otherwise>
    </xsl:choose>-->
  <xsl:if test="PersonLocations/PrivatePractice/PostalAddress/CodePosition='after PoliticalUnit_State'">
  <xsl:if test="PersonLocations/PrivatePractice/PostalAddress/PostalCode_ZIP">
  <xsl:for-each select="PersonLocations/PrivatePractice/PostalAddress/PostalCode_ZIP">
  <xsl:value-of select="."/><br />
  </xsl:for-each>
  </xsl:if>
  </xsl:if> 

   
 <!-- <xsl:choose>
    <xsl:when test="contains(PrivatePractice/PostalAddress/Country/@cdr:ref,'CDR')">
   <xsl:variable name="CountryID" select="PrivatePractice/PostalAddress/Country/@cdr:ref"/>
    <xsl:variable name="CountryInfo" select="document(concat('cdr:',$CountryID))"/>
    <xsl:if test="$CountryInfo/Country/CountryName">
    <xsl:apply-templates select="$CountryInfo/Country/CountryName"/><br />
    </xsl:if>
   </xsl:when>
   <xsl:otherwise>
    <xsl:value-of select="$CountryID"/>
    <xsl:text>not available in database</xsl:text>
    </xsl:otherwise>
    </xsl:choose>-->
   <xsl:if test="PersonLocations/PrivatePractice/PostalAddress/CodePosition='after Country'">
  <xsl:if test="PersonLocations/PrivatePractice/PostalAddress/PostalCode_ZIP">
  <xsl:for-each select="PersonLocations/PrivatePractice/PostalAddress/PostalCode_ZIP">
  <xsl:value-of select="."/><br />
  </xsl:for-each>
  </xsl:if>
  </xsl:if>

    
  <xsl:for-each select="PersonLocations/PrivatePractice">
    <xsl:value-of select="concat('Phone:&#xa0;&#xa0;&#xa0;&#xa0;',Phone)"/><br />
 <xsl:value-of select="concat('Fax:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;',Fax)"/><br />
 <xsl:if test="Email">
 <xsl:text>Email:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text>
 <u><xsl:value-of select="Email"/></u>
 </xsl:if>
 </xsl:for-each>
 <br /><br />
 <xsl:text>&#xa0;</xsl:text>
 <!--</xsl:for-each>-->
 <br /><br />
</xsl:if>
<xsl:if test="PersonLocations/OtherPracticeLocation">
<b><font size='3'>Other Practice Locations</font></b><br /><br />
<xsl:if test="PersonLocations/OtherPracticeLocation[@cdr:id='F1']">
   <b><font size='3'>CIPS Contact</font></b><br />
   </xsl:if>
 
<xsl:for-each select="PersonLocations/OtherPracticeLocation">
  <!-- <xsl:variable name="Cipscontact" select="CIPSContact"/>
    <xsl:if test="$Cipscontact">
    <b><font size='3'>CIPS Contact</font></b><br />
    </xsl:if>-->
    <xsl:value-of select="Organization"/><br />
    <xsl:for-each select="SpecificContact/PostalAddress/Street">
    <xsl:value-of select="."/><br />
    </xsl:for-each>
  <!-- </xsl:if>  
    </xsl:for-each>-->
     <xsl:if test="SpecificContact/PostalAddress/CodePosition='before city'">
   <xsl:if test="SpecificContact/PostalAddress/PostalCode_ZIP">
  <xsl:for-each select="SpecificContact/PostalAddress/PostalCode_ZIP">
  <xsl:value-of select="."/><br />
  </xsl:for-each>
  </xsl:if>
  </xsl:if>
    <xsl:choose>
  <xsl:when test="SpecificContact/PostalAddress/CitySuffix">
  <xsl:for-each select="SpecificContact/PostalAddress">
    <xsl:value-of select="concat(City,' ',CitySuffix)"/>,
    </xsl:for-each>
    </xsl:when>
    <xsl:otherwise>
    <xsl:for-each select="SpecificContact/PostalAddress">
    <xsl:value-of select="City"/>
    </xsl:for-each>
    </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="PersonLocations/Home/PostalAddress/CodePosition='after City'">
  <xsl:if test="SpecificContact/PostalAddress/PostalCode_ZIP">
  <xsl:for-each select="SpecificContact/PostalAddress/PostalCode_ZIP">
  <xsl:value-of select="."/><br />
  </xsl:for-each>
  </xsl:if>
  </xsl:if>
      
 
   
    <xsl:choose>
    <xsl:when test="contains(SpecificContact/PostalAddress/PoliticalUnit_State/@cdr:ref,'CDR')">
   <xsl:variable name="StateID" select="SpecificContact/PostalAddress/PoliticalUnit_State/@cdr:ref"/>
    <xsl:variable name="StateInfo" select="document(concat('cdr:',$StateID))"/>
    <xsl:if test="$StateInfo/State/StateName">
     <xsl:text>,&#xa0;</xsl:text>
    <xsl:apply-templates select="$StateInfo/State/StateName"/>
    <xsl:text>&#xa0;&#xa0;</xsl:text>
    </xsl:if>
   </xsl:when>
   <xsl:otherwise>
   <xsl:value-of select="$StateID"/>
    <xsl:text>not available in database</xsl:text>
    </xsl:otherwise>
    </xsl:choose>
   <xsl:if test="/SpecificContact/PostalAddress/CodePosition='after PoliticalUnit_State'">
   <xsl:if test="SpecificContact/PostalAddress/PostalCode_ZIP">
  <xsl:for-each select="SpecificContact/PostalAddress/PostalCode_ZIP">
  <xsl:value-of select="."/><br />
  </xsl:for-each>
  </xsl:if>
  </xsl:if>
   
  <xsl:choose>
    <xsl:when test="contains(SpecificContact/PostalAddress/Country/@cdr:ref,'CDR')">
   <xsl:variable name="CountryID" select="SpecificContact/PostalAddress/Country/@cdr:ref"/>
    <xsl:variable name="CountryInfo" select="document(concat('cdr:',$CountryID))"/>
    <xsl:if test="$CountryInfo/Country/CountryName">
    <xsl:apply-templates select="$CountryInfo/Country/CountryName"/><br />
    </xsl:if>
   </xsl:when>
   <xsl:otherwise>
    <xsl:value-of select="$CountryID"/>
    <xsl:text>not available in database</xsl:text>
    </xsl:otherwise>
    </xsl:choose>
  <xsl:if test="PersonLocations/OtherPrivateLocation/PostalAddress/CodePosition='after Country'">
  <xsl:if test="PersonLocations/OtherPrivateLocation/PostalAddress/PostalCode_ZIP">
  <xsl:for-each select="PersonLocations/OtherPrivateLocation/PostalAddress/PostalCode_ZIP">
  <xsl:value-of select="."/><br />
  </xsl:for-each>
  </xsl:if>
  </xsl:if>

    
  <xsl:for-each select="SpecificContact">
    <xsl:value-of select="concat('Phone:&#xa0;&#xa0;&#xa0;&#xa0;',Phone)"/><br />
 <xsl:value-of select="concat('Fax:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;',Fax)"/><br />
 <xsl:if test="Email">
 <xsl:text>Email:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text>
 <u><xsl:value-of select="Email"/></u>
 </xsl:if>
 </xsl:for-each>
 <br /><br />
 <xsl:text>&#xa0;</xsl:text>
 </xsl:for-each>
 <br /><br />
 </xsl:if>
 <!-- Display other Organization affiliations
<xsl:text>&#xa0;</xsl:text>
  <xsl:for-each  select="PersonLocations/OtherPracticeLocation/ComplexAffiliation/Organization">
 <xsl:if test="contains(@cdr:ref,'CDR')">
 <xsl:variable name="OrgID" select="@cdr:ref"/>
 <xsl:variable name="OrgInfo" select="document(concat('cdr:',$OrgID))"/>
 <xsl:value-of select="$OrgInfo/Organization/OrganizationNameInformation/OfficialName"/><br />
   <xsl:for-each select="$OrgInfo/Organization/OrganizationLocations/Location/PostalAddress/Street">
    <xsl:value-of select="."/><br />
    </xsl:for-each>
         
   <xsl:value-of select="$OrgInfo/Organization/OrganizationLocations/Location/PostalAddress/City"/>;

    <xsl:choose>
    <xsl:when test="contains($OrgInfo/Organization/OrganizationLocations/Location/PostalAddress/PoliticalUnit_State/@cdr:ref,'CDR')">
   <xsl:variable name="StateID" select="$OrgInfo/Organization/OrganizationLocations/Location/PostalAddress/PoliticalUnit_State/@cdr:ref"/>
    <xsl:variable name="StateInfo" select="document(concat('cdr:',$StateID))"/>
    <xsl:if test="$StateInfo/State/StateName">
    <xsl:apply-templates select="$StateInfo/State/StateName"/>
    <xsl:text>&#xa0;&#xa0;</xsl:text>
    </xsl:if>
   </xsl:when>
   <xsl:otherwise>
    <xsl:value-of select="$StateID"/>
    <xsl:text>not available in database</xsl:text>
    </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="$OrgInfo/Organization/OrganizationLocations/Location/PostalAddress/PostalCode_ZIP">
   <xsl:for-each select="$OrgInfo/Organization/OrganizationLocations/Location/PostalAddress/PostalCode_ZIP">
   <xsl:value-of select="."/><br />
   </xsl:for-each>
   </xsl:if>
        
    <xsl:choose>
    <xsl:when test="contains($OrgInfo/Organization/OrganizationLocations/Location/PostalAddress/Country/@cdr:ref,'CDR')">

   <xsl:variable name="CountryID" select="$OrgInfo/Organization/OrganizationLocations/Location/PostalAddress/Country/@cdr:ref"/>
    <xsl:variable name="CountryInfo" select="document(concat('cdr:',$CountryID))"/>
    <xsl:if test="$CountryInfo/Country/CountryName">
    <xsl:apply-templates select="$CountryInfo/Country/CountryName"/><br />
    </xsl:if>
   </xsl:when>
   <xsl:otherwise>
   <xsl:value-of select="$CountryID"/>
    <xsl:text>not available in database</xsl:text>
    </xsl:otherwise>
    </xsl:choose>
  
 <xsl:for-each select="$OrgInfo/Organization/OrganizationLocations/Location">
    <xsl:value-of select="concat('Phone:&#xa0;&#xa0;&#xa0;&#xa0;',Phone)"/><br />
 <xsl:value-of select="concat('Fax:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;',Fax)"/><br />
<xsl:text>Email:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</xsl:text>
 <u><xsl:value-of select="Email"/></u><br />
 <xsl:text>&#xa0;</xsl:text>
 </xsl:for-each>
  <br />
 </xsl:if>
 </xsl:for-each>-->
<!-- Display footer information -->
<br />


<font size='3'><xsl:apply-templates select="PersonNameInformation/GivenName"/></font>
  <xsl:text>&#xa0;</xsl:text>
 <font size='3'><xsl:apply-templates select="PersonNameInformation/SurName"/></font>
 <font size='3'><xsl:text>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
September 13, 2001</xsl:text></font><br />
 <font size='3'><xsl:text>CDR0000243848</xsl:text></font><br /><br />
 

   </BODY>
   </xsl:template>
  </xsl:transform>