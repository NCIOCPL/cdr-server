<CdrDoc Type='Filter' Id='CDR0000000062'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Summary Filter6</DocTitle>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="1.0"
                xmlns:cdr="cips.nci.nih.gov/cdr">
  <xsl:output method="html"/>

  <xsl:template match="/">
  <!--Filter written by C.Burg - 6/12/2001 -->
  <!-- This program is a filter to display the health professional
        summary in approximate CancerNet format -->
      
   <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
    <HTML>
    <HEAD>
    <TITLE>Formats Health Professional Summary Test</TITLE>

   <!--Inline sytle sheet to display H2 and H4 headers in Navy -->
     <STYLE>
       H2,H3,H4 {color: Navy}
       <!-- H2,H4 {font-size: medium} -->
       p {font-size: 12pt}
       dt {font-size: 12pt}
       dd {font-size: 12pt}
     </STYLE>
     <!--
     <LINK REL='stylesheet' 
           HREF='/stylesheets/protocol2.css' 
           TYPE='text/css' /> -->
    </HEAD>
    <!-- <BASEFONT FACE='Arial, Helvetica, sans-serif' /> -->
    <xsl:apply-templates select="Summary"/>
    </HTML>
   </xsl:template>

<!-- Display summary title -->

<xsl:template match="Summary">
<BODY>
 <xsl:for-each select="SummaryTitle">
 <H2><xsl:value-of select="."/></H2>
 </xsl:for-each>

<!--Display summary type and audience -->

 <xsl:for-each select="SummaryMetaData">
 <H3><xsl:value-of select="concat(SummaryType,' - ',SummaryAudience)"/></H3>
 </xsl:for-each>

<!--Display a Contents List of Summary Section Titles -->

<h2>Table of Contents</h2>
<!--
<dl>
<xsl:for-each select="SummarySection ">
<dt><a href="#{translate(Title,' ','')}"><xsl:value-of select="Title"/></a></dt><br />
<xsl:choose>
<xsl:when test="descendant::SummarySection">
<dl>
<xsl:for-each select="SummarySection">
<dt><a href="#{translate(Title,'&#xa0;','')}"><xsl:value-of select="Title"/></a></dt><br />
</xsl:for-each>
</dl>
</xsl:when>
<xsl:otherwise>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</dl>
<hr />-->
<dl>
<xsl:for-each select="SummarySection">
<dt><a href="#{translate(Title,' ','-')}"><xsl:value-of select="Title"/></a></dt><br />
<!--<xsl:if test="SummarySection/SummarySection">
<xsl:for-each select="SummarySection">
<dt><a href="#{translate(Title,' ','')}"><xsl:value-of select="Title"/></a></dt><br />
</xsl:for-each>
</xsl:if>-->
<xsl:choose>
<xsl:when test="descendant::SummarySection">
<dl>
<xsl:for-each select="SummarySection">
<dt><a href="#{translate(Title,' ','-')}"><xsl:value-of select="Title"/></a></dt><br />
</xsl:for-each>
</dl>
<!--<xsl:if test="descendant::SummarySection/SummarySection">
<dl>
<xsl:for-each select="SummarySection">
<dt><a href="#{translate(Title,' ','')}"><xsl:value-of select="Title"/></a></dt><br />
</xsl:for-each>
</dl>
</xsl:if>
</xsl:for-each>
</dl>-->
</xsl:when>
<xsl:otherwise>
</xsl:otherwise>
</xsl:choose>

<xsl:if test="descendant::SummarySection/SummarySection">
<dl>
<xsl:for-each select="SummarySection/SummarySection">
<dt><a href="#{translate(Title,' ','-')}"><xsl:value-of select="Title"/></a></dt><br />
</xsl:for-each>
</dl>
</xsl:if>
</xsl:for-each>
</dl>
<hr />
<xsl:apply-templates/>
</BODY>

</xsl:template>

<!-- templates to handle summary section anchors,list formats, and paragraphs
     that can occur in any order in the summaries -->

<!-- Display a summary section title and include anchor --> 

<xsl:template match="SummarySection/Title">
<h2><a name="{translate(.,' ','-')}"><xsl:apply-templates/></a></h2>
</xsl:template>

<xsl:template match="SummarySection/SummarySection/Title">
<h3><a name="{translate(.,' ','-')}"><xsl:apply-templates/></a></h3>
</xsl:template>

<!--Display an ordered list -->

<xsl:template match="OrderedList/ListItem">
<dl>
<dd><xsl:apply-templates/></dd><br /><br />
</dl>
</xsl:template>

<!--display footnotes-->

<xsl:template match="CitationLink">
<xsl:variable name="ref-list" select="@refidx"/>[<a href="#{$ref-list}"><xsl:apply-templates select="$ref-list"/></a>
<xsl:text>] </xsl:text>
</xsl:template>


<!--display references -->

<xsl:template match="References">
<xsl:if test="Reference">
<h4>References:</h4>
<ol>
<xsl:for-each select="Reference">
<xsl:variable name="Refidx" select="@refidx"/>
<li><a name="{$Refidx}"><xsl:apply-templates select=".">
</xsl:apply-templates></a></li><br /><!-- <br /> -->
</xsl:for-each>
</ol>
</xsl:if>
</xsl:template>

<!--Display an itemized list -->

<xsl:template match="ItemizedList | ItemizedList/ListItem">
<dl>
<dd><xsl:apply-templates/></dd><br />
</dl>
</xsl:template>

<!-- This template deletes data elements not used in the display -->

<xsl:template match="PdqKey | PDQBoard | SectionType |Diagnosis | SummaryLanguage| SummaryType |SummaryAudience | SummaryTitle |MainTopics | ScondaryTopics"/>

<!--Display Paragraphs -->

<xsl:template match="Para">
<p><xsl:apply-templates/></p>
</xsl:template>

<!-- Create a link to another document or website -->

<xsl:template match="ZLNK">
<xsl:variable name="nlink" select="."/>
<a href="{$nlink}"><xsl:apply-templates/></a>
</xsl:template>

<!--Display tables [preliminary version RMK 17Nov2001; to be expanded. -->
<xsl:template match="Table">
 <center>
 <xsl:if test="Title">
  <h3><xsl:apply-templates select="Title"/></h3>
 </xsl:if>
  <table border='1' cellspacing='0' cellpadding='3'>
   <xsl:if test="@Frame='all'">
    <xsl:attribute name='border'>1</xsl:attribute>
   </xsl:if>
   <xsl:for-each select="TGroup/THead/Row">
    <tr>
     <xsl:for-each select='entry'>
      <th><xsl:apply-templates/></th>
     </xsl:for-each>
    </tr>
   </xsl:for-each>
   <xsl:for-each select="TGroup/TBody/Row">
    <tr>
     <xsl:for-each select='entry'>
      <td><xsl:apply-templates/></td>
     </xsl:for-each>
    </tr>
   </xsl:for-each>
  </table>
  <xsl:for-each select='TGroup//Row/entry/Note'>
   <i><xsl:value-of select="."/><br /></i>
  </xsl:for-each>
 </center>
</xsl:template>

<xsl:template match="entry/Note"/>

<xsl:template match="Para/TT">
<pre><xsl:apply-templates/></pre>
</xsl:template>

</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>