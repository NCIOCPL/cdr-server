<?xml version="1.0"?>
  <xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                 version="1.0"
                 xmlns:cdr="cips.nci.nih.gov/cdr">
   <xsl:output method="xml" omit-xml-declaration="no"/>
<!--Filter to create subset of CDR Protocol XML data for UDB-->
<!-- Elements copied are limited to elements available in current
     test data. Program will be updated when new test data is 
     available.-->
<!-- Written by Cheryl Burg  9-5-2001 -->
<!-- Select data elements to be copied and add tags when an incomplete
     node is copied -->
  <xsl:template match="InScopeProtocol">
  <xsl:copy>
<!--Copy Protocol Identifiers  -->
<IdentificationInfo><ProtocolIDs><PrimaryID><xsl:apply-templates select="/InScopeProtocol/IdentificationInfo/ProtocolIDs/PrimaryID/IDString" mode="copy"/></PrimaryID>

<xsl:for-each select="IdentificationInfo/ProtocolIDs/OtherID">
<OtherID><xsl:apply-templates select="IDType" mode="copy"/>
<xsl:apply-templates select="IDString" mode="copy"/>
</OtherID>
</xsl:for-each></ProtocolIDs></IdentificationInfo>

<!--Copy Funding Information 
<FundingInfo><xsl:apply-templates select="/InScopeProtocol/FundingInfo/NIHGrantContractType" mode="copy"/>
<xsl:apply-templates select-->
<!-- copy sponsor names -->
<ProtocolSponsors><xsl:apply-templates select="/InScopeProtocol/ProtocolSponsors/SponsorName" mode="copy"/>
</ProtocolSponsors>

<!-- Copy protocol titles -->
<xsl:apply-templates select="/InScopeProtocol/ProtocolTitle" mode="copy"/>

<!-- Copy protocol abstract -->
<xsl:apply-templates select="/InScopeProtocol/ProtocolAbstract" mode="copy"/>

<!--code below can be used to select specific elements for Protocol Abstract
    XML node -->
<!--<Outline><Para><xsl:apply-templates select="/InScopeProtocol/ProtocolAbstract/Professional/Outline/Para" mode="copy"/></Para></Outline>
<EntryCriteria><Para><xsl:apply-templates select="/InScopeProtocol/ProtocolAbstract/Professional/EntryCriteria/Para" mode="copy"/></Para></EntryCriteria></Professional>
<Patient><Rationale><Para><xsl:apply-templates select="/InScopeProtocol/ProtocolAbstract/Patient/Rationale/Para" mode="copy"/></Para></Rationale>
<Purpose><Para><xsl:apply-templates select="/InScopeProtocol/ProtocolAbstract/Patient/Purpose/Para" mode="copy"/></Para></Purpose>
<TreatmentIntervention><Para><xsl:apply-templates select="/InScopeProtocol/ProtocolAbstract/Patient/TreatmentIntervention/Para" mode="copy"/></Para></TreatmentIntervention>
<EligibilityText><Para><xsl:apply-templates select="/InScopeProtocol/ProtocolAbstract/Patient/EligibilityText/Para" mode="copy"/></Para></EligibilityText></Patient></ProtocolAbstract>-->

<!--Copy protocol-related links and copy Protocol title and Indentification 
    Info from related protocol record if valid link is provided 
<ProtocolRelatedLinks><xsl:apply-templates select="/InScopeProtocol/ProtocolRelatedLinks/RelatedProtocols" mode="copy"/>

<xsl:choose>
 <xsl:when test="contains(RelatedProtocols/@cdr:ref,'CDR')">
 <xsl:variable name="ProId" select="RelatedProtocols/@cdr:ref"/>
 <xsl:variable name="ProInfo" select="document(concat('cdr:',$ProId))"/>
 <xsl:apply-templates select="$ProInfo/InScopeProtocol/IndentificationInfo" mode="copy"/>
 <xsl:apply-templates select="$ProInfo/InScopeProtocol/ProtocolTitle" mode="copy"/>
 </xsl:when>
 <xsl:otherwise>
   Error, Protocol Record is missing
 </xsl:otherwise>
 </xsl:choose>
 <xsl:apply-templates select="ProtocolRelatedLinks/RelatedWebsites" mode="copy"/></ProtocolRelatedLinks>-->



<!--Copy Published Results- may need to add additional code if decision
    is made to denormalize -->
<PublishedResults><xsl:apply-templates select="/InScopeProtocol/PublishedResults/CitationID" mode="copy"/></PublishedResults>

<!--Copy Protocol Details, Eligibility, Phase, and Design -->
<xsl:apply-templates select="/InScopeProtocol/ProtocolDetails" mode="copy"/>

<xsl:apply-templates select="/InScopeProtocol/Eligibility" mode="copy"/>

<xsl:apply-templates select="/InScopeProtocol/ProtocolPhase" mode="copy"/>

<xsl:apply-templates select="/InScopeProtocol/ProtocolDesign" mode="copy"/>

<!-- Copy Protocol Special Category element
<ProtocolSpecialCategory><xsl:apply-templates select="/InScopeProtocol/ProtocolSpecialCategory/SpecialCategory" mode="copy"/></ProtocolSpecialCategory>-->

<!-- Copy Protocol Administrative Info including Organization and Participant
      Information -->

<ProtocolAdminInfo><CurrentProtocolStatus><xsl:apply-templates select="/InScopeProtocol/ProtocolAdminInfo/CurrentProtocolStatus/ProtocolStatusName" mode="copy"/></CurrentProtocolStatus>

<xsl:for-each select="/InScopeProtocol/ProtocolAdminInfo/ProtocolLeadOrg">
<ProtocolLeadOrg><xsl:apply-templates select="OrganizationID" mode="copy"/>

<xsl:apply-templates select="OrgRole" mode="copy"/>

<xsl:apply-templates select="UpdateGroup" mode="copy"/>

<xsl:apply-templates select="OrgStatus" mode="copy"/>

<xsl:apply-templates select="IDString" mode="copy"/>

<xsl:for-each select="ProtocolPersonnel"> 
<ProtocolPersonnel><xsl:apply-templates select="PersonID" mode="copy"/>

<!-- link to Person XML record using CDR Unique ID to include additional
     identifying data elements 
 <xsl:choose>
 <xsl:when test="contains(PersonID/@cdr:ref,'CDR')">
 <xsl:variable name="PerId" select="PersonID/@cdr:ref"/>
 <xsl:variable name="PerInfo" select="document(concat('cdr:',$PerId))"/>
 <xsl:apply-templates select="$PerInfo/Person/PersonSurname" mode="copy"/>
 <xsl:apply-templates select="$PerInfo/Person/PersonGivenName" mode="copy"/>
 <xsl:apply-templates select="$PerInfo/Person/PersonInitials" mode="copy"/>
 <xsl:apply-templates select="$PerInfo/Person/PersonStat/PersonProfessionalSuffix" mode="copy"/>
</xsl:when>
<xsl:otherwise>
   Error, missing data
</xsl:otherwise>
</xsl:choose>-->
<!--</xsl:for-each>-->
<xsl:apply-templates select="PersonRole" mode="copy"/></ProtocolPersonnel>
</xsl:for-each>
</ProtocolLeadOrg>
</xsl:for-each>


<ProtocolSites><xsl:for-each select="/InScopeProtocol/ProtocolAdminInfo/ProtocolSites/Organization">
<Organization><xsl:apply-templates select="OrgID" mode="copy"/>

<xsl:apply-templates select="OrganizationStatus" mode="copy"/>
<OrganizationContact>

<xsl:for-each
select="OrganizationContact/SpecificPerson">
<SpecificPerson><xsl:apply-templates select="Person" mode="copy"/>
<!--
<xsl:choose>
 <xsl:when test="contains(Person/@cdr:ref,'CDR')">
 <xsl:variable name="PerId" select="Person/@cdr:ref"/>
 <xsl:variable name="PerInfo" select="document(concat('cdr:',$PerId))"/>
 <xsl:apply-templates select="$PerInfo/Person/PersonSurname" mode="copy"/>
 <xsl:apply-templates select="$PerInfo/Person/PersonGivenName" mode="copy"/>
 <xsl:apply-templates select="$PerInfo/Person/PersonInitials" mode="copy"/>
 <xsl:apply-templates select="$PerInfo/Person/PersonStat/PersonProfessionalSuffix" mode="copy"/>
</xsl:when>
<xsl:otherwise>
   Error, missing data
</xsl:otherwise>
</xsl:choose>-->

<xsl:apply-templates select="Role" mode="copy"/>


<xsl:apply-templates select="SpecificPhone" mode="copy"/>


<!-- Link to Person XML records for Principal investigators to add
     additional data elements -->
 
<!--code below can be uncommented and run if no output is available
     to determine if the record has no data for an element -->
<!-- <xsl:variable name="surname" select="$PerInfo/Person/PersonSurname"/>
<xsl:choose>
<xsl:when test="$surname"
</xsl:when>
<xsl:otherwise>
<xsl:text>Person Surname not available</xsl:text>
</xsl:otherwise>
</xsl:choose> -->
</SpecificPerson></xsl:for-each>

<!-- Copy the Generic Person Title and Contact Information -->
<xsl:apply-templates select="/InScopeProtocol/ProtocolAdminInfo/ProtocolSites/Organization/OrganizationContact/GenericPerson" mode="copy"/></OrganizationContact></Organization>
</xsl:for-each></ProtocolSites></ProtocolAdminInfo>
</xsl:copy>   
</xsl:template>

<!-- Template rule used to do XML to XML transformations which
     copies any attribute node, or node that is child of of something -->

   <xsl:template match="@*|node()" mode="copy">
     <xsl:copy>
       <xsl:apply-templates select="@*" mode="copy"/>
       <xsl:apply-templates mode="copy"/>
     </xsl:copy> 
   
</xsl:template>
</xsl:transform>