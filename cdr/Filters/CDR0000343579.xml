<CdrDoc Type='Filter' Id='CDR0000343579'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Module: InScopeProtocol Administrative Details </DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml      version = "1.0"?>
<!--Filter written by C.Burg - 3/13/2002 -->
<!-- ================================================================
           Filter to generate a Protocol Administrative QC Report
     ================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "html"/>

 <!-- 
 ===============================================================
 Display the Protocol Sponsors
 =============================================================== -->
 <xsl:template                   match = "ProtocolSponsors">
  <b>
   <font size='4'>Protocol Sponsors</font>
  </b>

  <table        xsl:use-attribute-sets = "table">
   <xsl:for-each                select = "SponsorName">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <xsl:if                     test = "not(preceding-sibling::SponsorName)">
       <b>Name</b>
      </xsl:if>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "."/>
     </td>
    </tr>
   </xsl:for-each>
  </table>
  <b>Comment</b>
  <br />
  <xsl:value-of                 select = "Comment"/>
  <xsl:if                         test = "Comment">
   <br />
  </xsl:if>
 </xsl:template>


 <!-- 
 =============================================================
 Display Protocol Special Category
 ============================================================= -->
 <xsl:template                   match = "ProtocolSpecialCategory">
  <br />
  <xsl:if                         test = "not(
                                   preceding-sibling::ProtocolSpecialCategory)">
   <b>
    <font size='4'>Protocol Special Category</font>
   </b>
  </xsl:if>
  <table        xsl:use-attribute-sets = "table"> 
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <u>
      <b>Special Category</b>
     </u>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "SpecialCategory"/>
    </td>
   </tr>
  </table>
  <b>Comment</b>
  <br />
  <xsl:value-of                 select = "Comment"/>
  <br />
  <br />
 </xsl:template>
  

 <!-- 
 ============================================================
 Display the funding information
 ============================================================ -->
 <xsl:template                   match = "FundingInfo">
  <hr />
  <br />
  <b>
   <font size='4'>Funding Information</font>
  </b>
  <xsl:for-each                 select = "NIHGrantContract">
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <u>
       <b>NIH Grant Contract Type</b>
      </u>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "NIHGrantContractType"/>
     </td>
    </tr>
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Grant Contract Number</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "GrantContractNo"/><br />
     </td>
    </tr>
   </table>

   <b>Comment</b>
   <br />
   <xsl:apply-templates         select = "Comment"/>
  </xsl:for-each>
  <br />
         
  <u>
   <b>Other Grant Contract Information</b>
  </u>
  <br />
  <xsl:for-each                 select = "OtherGrantContractInfo"> 
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Grant Contract Number</b> 
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "GrantContractNo"/>
     </td>
    </tr>
   </table>

   <b>Comment</b>
   <br />
   <xsl:value-of                select = "Comment"/>
   <br />                                      
  </xsl:for-each> 
 </xsl:template>
   

 <!-- 
 ============================================================
 Display the FDA IND information
 ============================================================ -->
 <xsl:template                   match = "FDAINDInfo">
  <br />
  <u>
   <b>FDA IND Info</b>
  </u>
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>IND Grantor</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "INDGrantor"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>IND Number</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "INDNumber"/>
    </td>
   </tr>
   <xsl:if                        test = "INDSerialNumber">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>IND Serial Number</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "INDSerialNumber"/>
     </td>
    </tr>
   </xsl:if>
  </table>
 </xsl:template>
   

 <!-- 
 ================================================================
 Display the Protocol Source
 ================================================================ -->
 <xsl:template                   match = "ProtocolSource">
  <br />
   <b>
    <font size='4'>Protocol Source</font>
   </b>
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Source</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "SourceName"/><br />
     </td>
    </tr>
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Date Received</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "DateReceived"/>
     </td>
    </tr>
   </table>
   <br />
  </xsl:template>


 <!-- 
 ====================================================================
 Display the Protocol Approval Information
 ==================================================================== -->
 <xsl:template                   match = "ProtocolApproval">
  <b>
   <font size='4'>Protocol Approval</font>
  </b>
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Review ApprovalType</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ReviewApprovalType"/>
     <br />
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Reimbursement Approval Type</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ReimbursementApprovalType"/>
    </td>
   </tr>
  </table>
  <b>Comment</b>
  <br />
  <xsl:value-of                 select = "Comment"/>
  <br />
 </xsl:template>


 <!-- 
 ====================================================================
 Display the Protocol Status Information
 ==================================================================== -->
 <xsl:template                   match = "CurrentProtocolStatus">
  <br />
  <b>
   <font size='4'>Current Protocol Status</font>
  </b>
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Status</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "."/>
    </td>
   </tr>
  </table>
  <br />
  <br />
 </xsl:template>

 <!-- 
 ====================================================================
 Display the Lead Organization Information
 ==================================================================== -->
 <xsl:template                   match = "ProtocolLeadOrg">
  <hr />
  <b>
   <font size='4'>Lead Organization</font>
  </b>
  <br />
  <br />
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Organization Name</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "LeadOrganizationID/
                                            Organization/
                                            OrganizationNameInformation/
                                            OfficialName/Name"/>
    </td>
   </tr>
  </table>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Organization Role</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "LeadOrgRole"/>
    </td>
   </tr>
  </table>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Protocol ID</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "LeadOrgProtocolID"/>
    </td>
   </tr>
  </table>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Current Protocol Status</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
    </td>
   </tr>
  </table>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1iof2">
    </td>
    <td         xsl:use-attribute-sets = "cell2iof2">
     <b>Status</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "LeadOrgProtocolStatuses/
                                          CurrentOrgStatus/StatusName"/>
    </td>
   </tr>
  </table>

  <table        xsl:use-attribute-sets = "table">     
   <tr>
    <td         xsl:use-attribute-sets = "cell1iof2">
    </td>
    <td         xsl:use-attribute-sets = "cell2iof2">
     <b>Date</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "LeadOrgProtocolStatuses/
                                          CurrentOrgStatus/StatusDate"/>
    </td>
   </tr>
  </table>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1iof2">
    </td>
    <td         xsl:use-attribute-sets = "cell2iof2">
     <b>User</b>
    </td>     
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "LeadOrgProtocolStatuses/
                                          CurrentOrgStatus/EnteredBy"/>
    </td>
   </tr>
  </table>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1iof2">
    </td>
    <td         xsl:use-attribute-sets = "cell2iof2">
     <b>Entry Date</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "LeadOrgProtocolStatuses/
                                          CurrentOrgStatus/EntryDate"/>
    </td>
   </tr>
  </table>
  <br />

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:if                      test = "LeadOrgProtocolStatuses/
                                          PreviousOrgStatus">
      <b>Previous Protocol Status</b>
     </xsl:if>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text> </xsl:text>
    </td>
   </tr>
  </table>

  <xsl:if                         test = "LeadOrgProtocolStatuses/
                                          PreviousOrgStatus">
   <xsl:for-each                select = "LeadOrgProtocolStatuses/
                                          PreviousOrgStatus">
    <table      xsl:use-attribute-sets = "table">
     <tr>
      <td       xsl:use-attribute-sets = "cell1iof2">
      </td>
      <td       xsl:use-attribute-sets = "cell2iof2">
       <b>Status</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of            select = "StatusName"/>
      </td>
     </tr>
    </table>
    <table      xsl:use-attribute-sets = "table">
     <tr>
      <td       xsl:use-attribute-sets = "cell1iof2">
      </td>
      <td       xsl:use-attribute-sets = "cell2iof2">
       <b>Date</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of            select = "StatusDate"/>
      </td>
     </tr>
    </table>

    <table      xsl:use-attribute-sets = "table">
     <tr>
      <td       xsl:use-attribute-sets = "cell1iof2">
      </td>
      <td       xsl:use-attribute-sets = "cell2iof2">
       <b>User</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of            select = "EnteredBy"/>
      </td>
     </tr>
    </table>

    <table      xsl:use-attribute-sets = "table">
     <tr>
      <td       xsl:use-attribute-sets = "cell1iof2">
      </td>
      <td       xsl:use-attribute-sets = "cell2iof2">
       <b>Entry Date</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of            select = "EntryDate"/>
      </td>
     </tr>
    </table>
    <br />
   </xsl:for-each>
  </xsl:if>

  <!-- 
  ==================================================================
  Display the OverallContact Section if avalailable
  ================================================================== -->
  <xsl:apply-templates          select = "OverallContact"/>

  <!-- 
  ==================================================================
  Display Lead Organization Personnel Section
  ================================================================== -->
  <br />
  <u>
   <b>Lead Organization Personnel</b>
  </u>
  <br />
  <br />

  <xsl:apply-templates          select = "LeadOrgPersonnel"/>
  <xsl:apply-templates          select = "ProtocolSites"/>
 </xsl:template>
         

 <!-- 
 =================================================================
 Template to display the Protocol Processing Details
 ================================================================= -->
 <xsl:template                   match = "ProtocolProcessingDetails">
  <b>
   <font size='4'>Protocol Processing Details</font>
  </b>
  <br />

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Processing Status</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ProcessingStatus"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Processing Date</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ProcessingDate"/>
    </td>
   </tr>
  </table>
  <b>Comment</b><br />
  <xsl:apply-templates          select = "Comment"/><br />
 </xsl:template>

         
 <!-- 
 ================================================================
 Display a Note
 ================================================================ -->
 <xsl:template                  match = "Note">
  <xsl:apply-templates         select = "." 
                                 mode = "RS"/>
 </xsl:template>  


 <!-- 
 ==============================================================
 Template to Display Dated Action
 ============================================================== -->
 <xsl:template                   match = "ProtocolAdminInfo/
                                          DatedAction">
  <b>
   <font size='4'>Dated Action</font>
  </b>
  <br />

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Action Description</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ActionDescription"/>
    </td>
   </tr>
  </table>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Action Date</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ActionDate"/>
    </td>
   </tr>
  </table>
  <b>Comment</b>   
  <br />
  <xsl:value-of                 select = "Comment"/>  
  <xsl:if                         test = "Comment">                         
   <br />
   <br />
  </xsl:if>
 </xsl:template>

 
 <!-- 
 ===============================================================
 Display Protocol-Related Links
 =============================================================== -->
 <xsl:template                   match = "ProtocolRelatedLinks">
  <b>
   <font size='4'>Related Protocols</font>
  </b>
  <br />
          
  <xsl:for-each                 select = "RelatedProtocols/InScopeProtocol">
   <xsl:value-of                select = "ProtocolIDs/PrimaryID/IDString"/>;
   <xsl:if                        test = "ProtocolIDs/OtherID/IDString">
    <xsl:value-of               select = "ProtocolIDs/OtherID/IDString"/>;
   </xsl:if>
   <xsl:value-of                select = "ProtocolTitle
                                            [@Type='Professional']"/>
   <br />
   <br />                       
  </xsl:for-each>
  <br />
  <b>
   <font size='4'>Related Websites</font>
  </b>
  <br />
  <xsl:for-each                 select = "RelatedWebsites">
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>URL</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:element                name = "a">
       <xsl:attribute             name = "href">
        <xsl:choose>
         <xsl:when                test = "contains(RelatedWebsites/
                                                   @cdr:xref,'http')">
          <xsl:value-of         select = "RelatedWebsites/@cdr:xref"/>
         </xsl:when>
         <xsl:otherwise>
          <xsl:value-of         select = "concat('http://',RelatedWebsites/
                                              @cdr:xref)"/>
         </xsl:otherwise>
        </xsl:choose>
       </xsl:attribute>
       <xsl:value-of            select = "RelatedWebsites/@cdr:xref"/>
      </xsl:element>
     </td>
    </tr>
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Name</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "RelatedWebsites"/>
     </td>
    </tr>
   </table>
  </xsl:for-each>
  <xsl:for-each                 select = "Comment">
   <b>Comment</b>
   <br />
   <xsl:value-of                select = "."/>
   <br />
  </xsl:for-each>
 </xsl:template>


 <!--
 ======================================================================
 Template to display OverallContact and Generic Person Information
 ====================================================================== -->
 <xsl:template                   match = "OverallContact |
                                          GenericPerson">
  <table        xsl:use-attribute-sets = "table">
   <xsl:if                        test = "name() = 'OverallContact'">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <u>
       <b>Overall Contact</b>
      </u>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <b>
       <xsl:if                    test = "GenericPersonContact/
                                          ContactDetail/
                                          PostalAddress/@Public">
        <xsl:text>Postal Address: </xsl:text>
        <xsl:apply-templates    select = "GenericPersonContact/
                                          ContactDetail/
                                          PostalAddress/@Public"/>
       </xsl:if>
      </b>
     </td>
    </tr>
   </xsl:if>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:choose>
      <xsl:when                   test = "name() = 'OverallContact'">
       <b>Title</b>
      </xsl:when>
      <xsl:otherwise>
       <b>Generic Title</b>
      </xsl:otherwise>
     </xsl:choose>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "PersonTitle"/>
    </td>
   </tr>

   <xsl:apply-templates          select = "GenericPersonContact"/>
  </table>
 </xsl:template>


 <!--
 ======================================================================
 Template to display OverallContact Information
 ====================================================================== -->
 <xsl:template                   match = "GenericPersonContact">
  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
    <xsl:choose>
     <xsl:when                    test = "name(..) = 'OverallContact'">
      <b>Name</b>
     </xsl:when>
     <xsl:otherwise>
      <b>Generic Contact</b>
     </xsl:otherwise>
    </xsl:choose>
   </td>
   <td          xsl:use-attribute-sets = "cell2of2">
    <xsl:value-of               select = "ContactName"/>
   </td>
  </tr>

  <xsl:for-each                 select = "ContactDetail/
                                          PostalAddress/
                                          Street">
   <tr>                  
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:if                      test = "not(preceding-sibling::Street)">
      <b>
       <xsl:text>Street</xsl:text>
      </b>
     </xsl:if>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "."/>
    </td>
   </tr>
  </xsl:for-each>

  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
    <b>City</b>
   </td>
   <td          xsl:use-attribute-sets = "cell2of2">
    <xsl:value-of               select = "ContactDetail/
                                          PostalAddress/
                                          City"/>
   </td>
  </tr>

  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
    <b>PoliticalSubUnit</b>
   </td>
   <td          xsl:use-attribute-sets = "cell2of2">
    <xsl:value-of               select = "ContactDetail/
                                          PostalAddress/
                                          PoliticalSubUnit_State/
                                          PoliticalSubUnitFullName"/>
   </td>
  </tr>

  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
    <b>Country</b>
   </td>
   <td          xsl:use-attribute-sets = "cell2of2">
    <xsl:value-of               select = "ContactDetail/
                                          PostalAddress/
                                          Country/
                                          CountryFullName"/>
   </td>
  </tr>

  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
    <b>ZIP/PostalCode</b>
   </td>
   <td          xsl:use-attribute-sets = "cell2of2">
    <xsl:value-of               select = "ContactDetail/
                                          PostalAddress/
                                          PostalCode_ZIP"/>
   </td>
  </tr>

  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
    <b>Phone</b>
   </td>
   <td          xsl:use-attribute-sets = "cell2of2">
    <xsl:value-of               select = "ContactDetail/
                                          Phone"/>
    <xsl:apply-templates        select = "ContactDetail/
                                          Phone/@Public"/>
   </td>
  </tr>

  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
    <b>Toll Free Phone</b>
   </td>
   <td          xsl:use-attribute-sets = "cell2of2">
    <xsl:value-of               select = "ContactDetail/
                                          TollFreePhone"/>
   </td>
  </tr>

  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
     <b>Fax</b>
   </td>
   <td          xsl:use-attribute-sets = "cell2of2">
    <xsl:value-of               select = "ContactDetail/
                                          Fax"/>
   </td>
  </tr>

  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
    <b>Email</b>
   </td>
   <td          xsl:use-attribute-sets = "cell2of2">
    <xsl:for-each               select = "ContactDetail/Email">
     <xsl:call-template           name = "createEmailLink"/>
    </xsl:for-each>
   </td>
  </tr>

  <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Web Site</b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <xsl:for-each             select = "ContactDetail/WebSite">
      <xsl:call-template         name = "createWebLink"/>
     </xsl:for-each>
     <br />
     <xsl:value-of              select = "ContactDetail/WebSite"/>
    </td>
  </tr>

  <xsl:if                         test = "ClinicalTrialOffice">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Clinical Trial Office</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ClinicalTrialOffice"/>
    </td>
   </tr>
  </xsl:if>
 </xsl:template>


 <!--
 ======================================================================
 Template to add (Public = No) to the display
 ====================================================================== -->
 <xsl:template                   match = "@Public">
  <b> 
   <xsl:text> (Public = No)</xsl:text>
  </b>
 </xsl:template>


 <!--
 ======================================================================
 Template to add the SuppressContactInformation to the OrgSiteID and
 PrivatePracticeSiteID elements
 ====================================================================== -->
 <xsl:template                   match = "@SuppressContactInformation">
  <xsl:param                      name = "suppressAll"
                                select = "''"/>
  <b>
   <font size="+1">
    <xsl:text> (suppress </xsl:text>
    <xsl:value-of               select = "$suppressAll"/>
    <xsl:text> contact information)</xsl:text>
   </font>
  </b>
 </xsl:template>


 <!--
 ======================================================================
 Template to Display Lead Organization Information
 ====================================================================== -->
 <xsl:template                   match = "LeadOrgPersonnel">
  <xsl:apply-templates          select = "Person"/>
 </xsl:template>

 <!--
 ======================================================================
 Template to Display Person Information
 ====================================================================== -->
 <xsl:template                   match = "Person">
  <!-- 
  Create a variable holding the fragment ID of the Person's 
  Fragment ID for the SpecificLocation.
  ============================================================= -->
  <xsl:variable                   name = "orgref"       
                                select = "Person/@cdr:ref"/>
  <xsl:variable                   name = "OrgFrag"      
                                select = "substring-after($orgref,'#')"/>

  <!-- 
  Create a variable holding the fragment ID of the Org Location
  for this Org Location.  This will be used to display
  the address when no SpecificPostalAddress element exists.
  ============================================================= -->
  <xsl:variable                   name = "orgLocRef"  
                                select = "Person/PersonLocations/
                                          OtherPracticeLocation
                                           [@cdr:id=$OrgFrag]/
                                          OrganizationLocation/
                                          Organization/
                                          @cdr:ref"/>
  <xsl:variable                   name = "orgLocFrag"  
                                select = "substring-after($orgLocRef,'#')"/>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <u>
      <b>Person</b>
     </u>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "Person/
                                          PersonNameInformation/SurName"/>
     <xsl:text>, </xsl:text>
     <xsl:value-of              select = "Person/PersonNameInformation/
                                           GivenName"/>
     <xsl:variable                name = "personref"
                                select = "Person/@cdr:ref"/>
     <xsl:variable                name = "FragPersonRef" 
                                select = "substring-after($personref,'#')"/>
     <xsl:text> [</xsl:text>
     <xsl:value-of              select = "$FragPersonRef"/>
     <xsl:text>]</xsl:text>
     <xsl:apply-templates       select = "../@Public"/>
    </td>
   </tr>
  </table>

  <xsl:for-each                 select = "../PersonRole">
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <xsl:if                     test = "not(preceding-sibling::PersonRole)">
       <b>Role</b>
      </xsl:if>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "."/>
     </td>
    </tr>
   </table>
  </xsl:for-each>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Organization Name</b>
    </td>           
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "Person/PersonLocations/
                                          OtherPracticeLocation
                                            [@cdr:id=$OrgFrag]/
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name"/>
    </td>
   </tr>
  </table>

  <!--
  ======================================================================
  For each element PostalAddress, Phone, Fax, TollFreePhone, WebSite
  display the ProtocolSpecificInformation.  If this information does not
  exist display the information from the Person Document if exists 
  otherwise retrieve it from the Organization Document.
  ====================================================================== -->
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Contact</b>
    </td>
   </tr>
  </table>

  <!--
  ===============================================================
  Display PostalAddress Information
  a) from ProtocolSpecificContact (in color)
  b) from Person document         (in normal font)
  c) from Org document            (in italic)
  =============================================================== -->
  <xsl:choose>
   <xsl:when                       test = "../ProtocolSpecificContact/
                                             PostalAddress">
    <xsl:for-each                select = "../ProtocolSpecificContact">
     <xsl:call-template           name= "displayProtocolSpecificPostalAddress"/>
    </xsl:for-each>
   </xsl:when>
   <xsl:when                      test = "Person/PersonLocations/
                                          OtherPracticeLocation 
                                            [@cdr:id=$OrgFrag]/
                                          SpecificPostalAddress">      
    <xsl:for-each               select = "Person/PersonLocations/
                                          OtherPracticeLocation  
                                            [@cdr:id=$OrgFrag]/
                                          SpecificPostalAddress"> 
      <xsl:for-each             select = "Street">  
       <table   xsl:use-attribute-sets = "table">
        <tr> 
         <td    xsl:use-attribute-sets = "cell1iof2">
         </td>
         <td    xsl:use-attribute-sets = "cell2iof2">
          <xsl:if                 test = "not(preceding-sibling::Street)">
           <b>Street</b>
          </xsl:if>
         </td>
         <td    xsl:use-attribute-sets = "cell2of2">
          <xsl:value-of         select = "."/>
         </td>
        </tr>
       </table> 
      </xsl:for-each> 
    </xsl:for-each>
      
    <xsl:for-each               select = "Person/PersonLocations/
                                          OtherPracticeLocation  
                                            [@cdr:id=$OrgFrag]/
                                          SpecificPostalAddress">
      <table    xsl:use-attribute-sets = "table">
       <tr>
        <td     xsl:use-attribute-sets = "cell1iof2">
        </td>
        <td     xsl:use-attribute-sets = "cell2iof2">
         <b>City</b>
        </td>
        <td     xsl:use-attribute-sets = "cell2of2">
         <xsl:value-of          select = "City"/>
        </td>
       </tr>
      </table>
      <xsl:if                     test = "CitySuffix">
       <table   xsl:use-attribute-sets = "table">                     
        <tr>
         <td    xsl:use-attribute-sets = "cell1iof2">
         </td>
         <td    xsl:use-attribute-sets = "cell2iof2">
          <b>City Suffix</b>
         </td>
         <td    xsl:use-attribute-sets = "cell2of2">
          <xsl:value-of         select = "CitySuffix"/>
         </td>
        </tr>
       </table>
      </xsl:if>

      <table    xsl:use-attribute-sets = "table">                       
       <tr>
        <td     xsl:use-attribute-sets = "cell1iof2">
        </td>
        <td     xsl:use-attribute-sets = "cell2iof2">
         <b>State/Political Unit</b>
        </td>
        <td     xsl:use-attribute-sets = "cell2of2">
         <xsl:value-of          select = "PoliticalSubUnit_State/
                                          PoliticalSubUnitFullName"/>
        </td>
       </tr>
      </table>
 
      <table    xsl:use-attribute-sets = "table"> 
       <tr>   
        <td     xsl:use-attribute-sets = "cell1iof2">
        </td>
        <td     xsl:use-attribute-sets = "cell2iof2">
         <b>Country</b>
        </td>
        <td     xsl:use-attribute-sets = "cell2of2">
         <xsl:value-of          select = "Country/
                                          CountryFullName"/>
        </td>
       </tr>
      </table>

      <table    xsl:use-attribute-sets = "table"> 
       <tr>  
        <td     xsl:use-attribute-sets = "cell1iof2">
        </td>
        <td     xsl:use-attribute-sets = "cell2iof2">
         <b>Zip/Postal Code</b>
        </td>
        <td     xsl:use-attribute-sets = "cell2of2">
         <xsl:value-of          select = "PostalCode_ZIP"/>
        </td>
       </tr>
      </table>
     </xsl:for-each>
     </xsl:when>
     <xsl:otherwise>
      <table    xsl:use-attribute-sets = "table">                       
       <xsl:for-each            select = "Person/PersonLocations/
                                          OtherPracticeLocation
                                           [@cdr:id=$OrgFrag]/
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id=$orgLocFrag]/
                                          PostalAddress/
                                          Street">
        <xsl:variable             name = "OrgRef"  
                                select = "../../../../../@cdr:ref"/>
        <xsl:variable             name = "OrgID"  
                                select = "substring-after($OrgRef,'#')"/>
        <xsl:if                   test = "$OrgFrag = ../../@cdr:id 
                                          or 
                                          $OrgID = ../../@cdr:id">
         <tr>
          <td   xsl:use-attribute-sets = "cell1iof2">
          </td>
          <td   xsl:use-attribute-sets = "cell2iof2">
           <xsl:if                test = "not(preceding-sibling::Street)">
            <i>
             <b>Street</b>
            </i>
           </xsl:if>
          </td>
          <td   xsl:use-attribute-sets = "cell2of2">
           <i>
            <xsl:value-of       select = "."/>
           </i>
          </td>
         </tr>
        </xsl:if>
       </xsl:for-each>
      </table>

      <table    xsl:use-attribute-sets = "table">
       <xsl:for-each            select = "Person/PersonLocations/
                                          OtherPracticeLocation
                                           [@cdr:id=$OrgFrag]/
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
                                          Location/
                                          PostalAddress">
        <xsl:variable             name = "OrgRef"  
                                select = "../../../../@cdr:ref"/>
        <xsl:variable             name = "OrgID"  
                                select = "substring-after($OrgRef,'#')"/>
        <xsl:if                   test = "$OrgFrag = ../@cdr:id 
                                          or 
                                          $OrgID = ../@cdr:id">
         <tr>
          <td   xsl:use-attribute-sets = "cell1iof2">
          </td>
          <td   xsl:use-attribute-sets = "cell2iof2">
           <i>
            <b>City</b>
           </i>
          </td>
          <td   xsl:use-attribute-sets = "cell2of2">
           <i>
            <xsl:value-of       select = "City"/>
           </i>
          </td>
         </tr>
          <xsl:if                 test = "CitySuffix">
           <tr>
            <td xsl:use-attribute-sets = "cell1iof2">
            </td>
            <td xsl:use-attribute-sets = "cell2iof2">
             <i>
              <b>City Suffix</b>
             </i>
            </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <i>
              <xsl:value-of     select = "CitySuffix"/>
             </i>
            </td>
           </tr>
          </xsl:if>
          <tr>
           <td     xsl:use-attribute-sets = "cell1iof2">
           </td>
           <td     xsl:use-attribute-sets = "cell2iof2">
           <i>
            <b>State/Political Unit</b>
           </i>
          </td>
          <td     xsl:use-attribute-sets = "cell2of2">
           <i>
            <xsl:value-of        select = "PoliticalSubUnit_State/
                                PoliticalSubUnitFullName"/>
           </i>
          </td>
         </tr>
         <tr>  
          <td     xsl:use-attribute-sets = "cell1iof2">
          </td>
          <td     xsl:use-attribute-sets = "cell2iof2">
           <i>
            <b>Country</b>
           </i>
          </td>
          <td     xsl:use-attribute-sets = "cell2of2">
           <i>
            <xsl:value-of        select="Country/
                                CountryFullName"/>
           </i>
          </td>
         </tr>
         <tr> 
          <td     xsl:use-attribute-sets = "cell1iof2">
          </td>
          <td     xsl:use-attribute-sets = "cell2iof2">
           <i>
            <b>Zip/Postal Code</b>
           </i>
          </td>
          <td     xsl:use-attribute-sets = "cell2of2">
           <i>
            <xsl:value-of        select="PostalCode_ZIP"/>
           </i>    
          </td>
         </tr>
        </xsl:if>
       </xsl:for-each>
      </table>
     </xsl:otherwise>
    </xsl:choose>

  <!--
  ===============================================================
  Display Phone Information
  a) from ProtocolSpecificContact (in color)
  b) from Person document         (in normal font)
  c) from Org document            (in italic)
  =============================================================== -->
  <table        xsl:use-attribute-sets = "table">
  <xsl:choose>
   <xsl:when                      test = "../ProtocolSpecificContact/
                                              Phone">
    <xsl:for-each               select = "../ProtocolSpecificContact">
     <xsl:call-template           name = "displayProtocolSpecificPhone"/>
    </xsl:for-each>
   </xsl:when>
   <xsl:when                      test = "Person/PersonLocations/
                                          OtherPracticeLocation 
                                            [@cdr:id=$OrgFrag]/
                                          SpecificPhone">      
    <xsl:for-each               select = "Person/PersonLocations/
                                          OtherPracticeLocation  
                                            [@cdr:id=$OrgFrag]/
                                          SpecificPhone"> 
     <tr>   
      <td       xsl:use-attribute-sets = "cell1iof2">
      </td>
      <td       xsl:use-attribute-sets = "cell2iof2">
       <b>Phone</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of           select = "."/>
      </td>
     </tr>
    </xsl:for-each>
   </xsl:when>
   <xsl:when                      test = "Person/PersonLocations/
                                          OtherPracticeLocation
                                            [@cdr:id=$OrgFrag]/
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id=$orgLocFrag]/
                                          Phone">
    <xsl:for-each               select = "Person/PersonLocations/
                                          OtherPracticeLocation
                                            [@cdr:id=$OrgFrag]/
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id=$orgLocFrag]/
                                          Phone">
     <tr>   
      <td     xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td     xsl:use-attribute-sets = "cell2iof2">
      <i>
       <b>Phone</b>
      </i>
     </td>
     <td     xsl:use-attribute-sets = "cell2of2">
      <i>
       <xsl:value-of  select="../Phone"/>
       <xsl:apply-templates select = "../Phone/@Public"/>
      </i>
     </td>
    </tr>
    </xsl:for-each>
   </xsl:when>
   <xsl:otherwise>
    <tr>   
     <td     xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td     xsl:use-attribute-sets = "cell2iof2">
      <b>Phone</b>
     </td>
     <td     xsl:use-attribute-sets = "cell2of2">
     </td>
    </tr>
   </xsl:otherwise>
  </xsl:choose>

  <!--
  ===============================================================
  Display Fax Information
  a) from ProtocolSpecificContact (in color)
  b) from Person document         (in normal font)
  c) from Org document            (in italic)
  =============================================================== -->
  <xsl:choose>
   <xsl:when                      test = "../ProtocolSpecificContact/
                                             Fax">
    <xsl:for-each               select = "../ProtocolSpecificContact">
     <xsl:call-template           name = "displayProtocolSpecificFax"/>
    </xsl:for-each>
   </xsl:when>
   <xsl:when                      test = "Person/PersonLocations/
                                          OtherPracticeLocation 
                                            [@cdr:id=$OrgFrag]/
                                          SpecificFax">      
    <xsl:for-each               select = "Person/PersonLocations/
                                          OtherPracticeLocation  
                                            [@cdr:id=$OrgFrag]/
                                          SpecificFax"> 
     <tr>   
      <td       xsl:use-attribute-sets = "cell1iof2">
      </td>
      <td       xsl:use-attribute-sets = "cell2iof2">
       <b>Fax</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of            select = "."/>
      </td>
     </tr>
    </xsl:for-each>
   </xsl:when>
   <xsl:when                      test = "Person/PersonLocations/
                                          OtherPracticeLocation
                                            [@cdr:id=$OrgFrag]/
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id=$orgLocFrag]/
                                          Fax">
    <xsl:for-each               select = "Person/PersonLocations/
                                          OtherPracticeLocation
                                            [@cdr:id=$OrgFrag]/
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id=$orgLocFrag]/
                                          Fax">
     <tr>   
      <td     xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td     xsl:use-attribute-sets = "cell2iof2">
      <i>
       <b>Fax</b>
      </i>
     </td>
     <td     xsl:use-attribute-sets = "cell2of2">
      <i>
       <xsl:value-of  select="../Fax"/>
      </i>
     </td>
    </tr>
    </xsl:for-each>
   </xsl:when>
   <xsl:otherwise>
    <tr>   
     <td     xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td     xsl:use-attribute-sets = "cell2iof2">
      <b>Fax</b>
     </td>
     <td     xsl:use-attribute-sets = "cell2of2">
     </td>
    </tr>
   </xsl:otherwise>
  </xsl:choose>

  <!--
  ===============================================================
  Display TollFreePhone Information
  a) from ProtocolSpecificContact (in color)
  b) from Person document         (in normal font)
  c) from Org document            (in italic)
  =============================================================== -->
  <xsl:choose>
   <xsl:when                      test = "../ProtocolSpecificContact/
                                             TollFreePhone">
    <xsl:for-each               select = "../ProtocolSpecificContact">
     <xsl:call-template           name = "displayProtocolSpecificTFPhone"/>
    </xsl:for-each>
   </xsl:when>
   <xsl:when                      test = "Person/PersonLocations/
                                          OtherPracticeLocation 
                                            [@cdr:id=$OrgFrag]/
                                          SpecificTollFreePhone">      
    <xsl:for-each               select = "Person/PersonLocations/
                                          OtherPracticeLocation  
                                            [@cdr:id=$OrgFrag]/
                                          SpecificTollFreePhone"> 
     <tr>   
      <td       xsl:use-attribute-sets = "cell1iof2">
      </td>
      <td       xsl:use-attribute-sets = "cell2iof2">
       <b>Toll Free Phone</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:value-of           select = "."/>
      </td>
     </tr>
    </xsl:for-each>
   </xsl:when>
   <xsl:when                      test = "Person/PersonLocations/
                                          OtherPracticeLocation
                                            [@cdr:id=$OrgFrag]/
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id=$orgLocFrag]/
                                          TollFreePhone">
    <xsl:for-each               select = "Person/PersonLocations/
                                          OtherPracticeLocation
                                            [@cdr:id=$OrgFrag]/
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id=$orgLocFrag]/
                                          TollFreePhone">
     <tr>   
      <td     xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td     xsl:use-attribute-sets = "cell2iof2">
      <i>
       <b>Toll Free Phone</b>
      </i>
     </td>
     <td     xsl:use-attribute-sets = "cell2of2">
      <i>
       <xsl:value-of  select="../TollFreePhone"/>
      </i>
     </td>
    </tr>
    </xsl:for-each>
   </xsl:when>
   <xsl:otherwise>
    <tr>   
     <td     xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td     xsl:use-attribute-sets = "cell2iof2">
      <b>Toll Free Phone</b>
     </td>
     <td     xsl:use-attribute-sets = "cell2of2">
     </td>
    </tr>
   </xsl:otherwise>
  </xsl:choose>

  <!--
  ===============================================================
  Display Email Information
  a) from ProtocolSpecificContact (in color)
  b) from Person document         (in normal font)
  c) from Org document            (in italic)
  =============================================================== -->
  <xsl:choose>
   <xsl:when                      test = "../ProtocolSpecificContact/
                                             Email">
    <xsl:for-each               select = "../ProtocolSpecificContact">
     <xsl:call-template           name = "displayProtocolSpecificEmail"/>
    </xsl:for-each>
   </xsl:when>
   <xsl:when                      test = "Person/PersonLocations/
                                          OtherPracticeLocation 
                                            [@cdr:id=$OrgFrag]/
                                          SpecificEmail">      
    <xsl:for-each               select = "Person/PersonLocations/
                                          OtherPracticeLocation  
                                            [@cdr:id=$OrgFrag]/
                                          SpecificEmail"> 
     <tr>   
      <td       xsl:use-attribute-sets = "cell1iof2">
      </td>
      <td       xsl:use-attribute-sets = "cell2iof2">
       <b>Email</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:call-template         name = "createEmailLink"/>
      </td>
     </tr>
    </xsl:for-each>
   </xsl:when>
   <xsl:when                      test = "Person/PersonLocations/
                                          OtherPracticeLocation
                                            [@cdr:id=$OrgFrag]/
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id=$orgLocFrag]/
                                          Email">
    <xsl:for-each               select = "Person/PersonLocations/
                                          OtherPracticeLocation
                                            [@cdr:id=$OrgFrag]/
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id=$orgLocFrag]/
                                          Email">
     <tr>   
      <td     xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td     xsl:use-attribute-sets = "cell2iof2">
      <i>
       <b>Email</b>
      </i>
     </td>
     <td     xsl:use-attribute-sets = "cell2of2">
      <i>
       <xsl:value-of  select="."/>
      </i>
     </td>
    </tr>
    </xsl:for-each>
   </xsl:when>
   <xsl:otherwise>
    <tr>   
     <td     xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td     xsl:use-attribute-sets = "cell2iof2">
      <b>Email</b>
     </td>
     <td     xsl:use-attribute-sets = "cell2of2">
     </td>
    </tr>
   </xsl:otherwise>
  </xsl:choose>

  <!--
  ===============================================================
  Display WebSite Information
  a) from ProtocolSpecificContact (in color)
  b) from Person document         (in normal font)
  c) from Org document            (in italic)
  =============================================================== -->
  <xsl:choose>
   <xsl:when                      test = "../ProtocolSpecificContact/
                                             WebSite">
    <xsl:for-each               select = "../ProtocolSpecificContact">
     <xsl:call-template           name = "displayProtocolSpecificWebSite"/>
    </xsl:for-each>
   </xsl:when>
   <xsl:when                      test = "Person/PersonLocations/
                                          OtherPracticeLocation 
                                            [@cdr:id=$OrgFrag]/
                                          SpecificWebSite">      
    <xsl:for-each               select = "Person/PersonLocations/
                                          OtherPracticeLocation  
                                            [@cdr:id=$OrgFrag]/
                                          SpecificWebSite"> 
     <tr>   
      <td       xsl:use-attribute-sets = "cell1iof2">
      </td>
      <td       xsl:use-attribute-sets = "cell2iof2">
       <b>Web Site</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:for-each            select = "../WebSite">
        <xsl:call-template        name = "createWebLink"/>
       </xsl:for-each>
       <br/>
       <xsl:value-of            select = "."/>
      </td>
     </tr>
    </xsl:for-each>
   </xsl:when>
   <xsl:when                      test = "Person/PersonLocations/
                                          OtherPracticeLocation
                                            [@cdr:id=$OrgFrag]/   
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id=$orgLocFrag]/
                                          WebSite">
    <xsl:for-each               select = "Person/PersonLocations/
                                          OtherPracticeLocation
                                            [@cdr:id=$OrgFrag]/   
                                          OrganizationLocation/
                                          Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id=$orgLocFrag]/
                                          WebSite">
     <tr>   
      <td       xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <i>
       <b>Web Site</b>
      </i>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <i>
       <xsl:call-template         name = "createWebLink"/>
       <br/>
       <xsl:value-of  select="."/>
      </i>
     </td>
    </tr>
    </xsl:for-each>
   </xsl:when>
   <xsl:otherwise>
    <tr>   
     <td       xsl:use-attribute-sets = "cell1iof2">
    </td>
    <td        xsl:use-attribute-sets = "cell2iof2">
     <b>Web Site</b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
    </td>
    </tr>
   </xsl:otherwise>
  </xsl:choose>
  </table>
  <br/>
 </xsl:template>


 <!--
 ==================================================================
 Template to Display Orgs Name, Status, and Contact Information
 If the SuppressContactInformation attribute is listed for the 
 ProtocolSites element display for all of its childres organizations
 the text " (suppress all contact information)"
 For individual organizations with the attribute SuppressContactInfo
 only display the string " (suppress contact information)"
 ================================================================== -->
 <xsl:template                   match = "ProtocolSites">
  <b>
   <u>Participating Organizations (for Lead Organization)</u>
  </b>

  <xsl:if                         test = "@SuppressContactInformation">
   <u>
    <xsl:apply-templates        select = "@SuppressContactInformation">
     <xsl:with-param              name = "suppressAll"
                                select = "'all'"/>
    </xsl:apply-templates>
   </u> 
  </xsl:if>
  <br />

  <ol bottom-margin='0'>
   <xsl:for-each                select = "OrgSiteID |
                                          PrivatePracticeSiteID">
    <li class="org">
     <!-- 
     =================================================================
     Display the Organization Information for the Participating Site
     ================================================================= -->
     <table     xsl:use-attribute-sets = "table">
      <tr>
       <td        xsl:use-attribute-sets = "cell1of2">
        <b>Organization Name</b>
       </td>
       <td      xsl:use-attribute-sets = "cell2of2">
        <xsl:value-of           select = "Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name"/>
        <xsl:if                   test = "PrivatePracticePerson">
         <xsl:value-of          select = "'Private Practice'"/>
        </xsl:if>
        <xsl:choose>
         <xsl:when                test = "../@SuppressContactInformation">
          <xsl:apply-templates  select = "../@SuppressContactInformation">
           <xsl:with-param        name = "suppressAll"
                                select = "'all'"/>
          </xsl:apply-templates>    
         </xsl:when>
         <xsl:otherwise>
          <xsl:apply-templates  select = "@SuppressContactInformation"/>
         </xsl:otherwise>
        </xsl:choose>
       </td>
      </tr>
      <tr>
       <td       xsl:use-attribute-sets = "cell1of2">
        <b>Organization Protocol Status</b>
       </td>
       <td       xsl:use-attribute-sets = "cell2of2">
        <xsl:value-of            select = "OrgSiteStatus | 
                                          PrivatePracticeSiteStatus"/>
       </td>
      </tr>
     </table>

     <xsl:for-each              select = "OrgSiteContact | 
                                          PrivatePracticePerson">
      <xsl:if                     test = "SpecificPerson |
                                          Person">
       <xsl:for-each            select = "SpecificPerson/Person |
                                          Person">
        <xsl:variable             name = "PerFrag" 
                                select = "substring-after(@cdr:ref,'#')"/>
        <table  xsl:use-attribute-sets = "table">
         <tr>
          <td   xsl:use-attribute-sets = "cell1of2">
           <b>Contact</b>
          </td>
          <td   xsl:use-attribute-sets = "cell2of2">
           <xsl:value-of        select = "PersonNameInformation/SurName"/>,
           <xsl:value-of        select = "PersonNameInformation/GivenName"/>
           <xsl:text> [</xsl:text>
           <xsl:value-of        select = "$PerFrag"/>
           <xsl:text>]</xsl:text>
          </td>
         </tr> 
         <tr>
          <td   xsl:use-attribute-sets = "cell1of2">
           <b>Role</b>
          </td>
          <td   xsl:use-attribute-sets = "cell2of2">
           <xsl:value-of        select = "../Role |
                                           ../../Role"/>
          </td>
         </tr>
         <tr>
          <td   xsl:use-attribute-sets = "cell1of2">
           <b>Organization Location</b>
          </td>
          <td   xsl:use-attribute-sets = "cell2of2">
           <xsl:value-of        select = "PersonLocations/
                                          OtherPracticeLocation
					    [$PerFrag=@cdr:id]/
                                          OrganizationLocation/
					  Organization/
                                          OrganizationNameInformation/
                                          OfficialName/
					  Name"/>         
          </td>
         </tr>

         <!-- 
         ================================================================
         Display the denormalized Postal Address information
	 This is either coming from the Person document or 
	 the information comes from the Org document (displayed in italic)
         ================================================================ -->
         <!--
	 A) Other Practice Location: Postal Address Section
	 ================================================== -->
         <xsl:choose>
          <xsl:when               test = "PersonLocations/
                                          OtherPracticeLocation
                                            [$PerFrag=@cdr:id]/
                                          SpecificPostalAddress">
                        
           <xsl:for-each        select = "PersonLocations/
                                          OtherPracticeLocation
                                            [$PerFrag=@cdr:id]/
                                          SpecificPostalAddress/
                                          Street">
            <tr>
	     <td xsl:use-attribute-sets= "cell1of2">
	      <xsl:if             test = "not(preceding-sibling::Street)">
	       <b>Street</b>
	      </xsl:if>
	     </td>
	     <td xsl:use-attribute-sets= "cell2of2">
	      <xsl:value-of     select = "."/>
	     </td>
	    </tr>
	   </xsl:for-each>

	   <xsl:for-each        select = "PersonLocations/
                                          OtherPracticeLocation
                                            [$PerFrag=@cdr:id]/
                                          SpecificPostalAddress">
	    <tr>
	     <td xsl:use-attribute-sets= "cell1of2">
	      <b>City</b>
	     </td>
	     <td xsl:use-attribute-sets= "cell2of2">
	      <xsl:value-of     select = "City"/>
	     </td>
	    </tr>

	    <xsl:if               test = "CitySuffix">
	     <tr>
	      <td xsl:use-attribute-sets 
	                               = "cell1of2">
	       <b>City Suffix</b>
	      </td>
	      <td xsl:use-attribute-sets 
	                               = "cell2of2">
	       <xsl:value-of    select = "CitySuffix"/>
	      </td>
	     </tr>
	    </xsl:if>

	    <tr>
	     <td xsl:use-attribute-sets= "cell1of2">
	      <b>State/Political Unit</b>
	     </td>
	     <td xsl:use-attribute-sets= "cell2of2">
	      <xsl:value-of     select = "PoliticalSubUnit_State/
				          PoliticalSubUnitFullName"/>
	
	     </td>
	    </tr>
	    <tr>                      
	     <td xsl:use-attribute-sets= "cell1of2">
	      <b>Country</b>
	     </td>
	     <td xsl:use-attribute-sets= "cell2of2">
	      <xsl:value-of     select = "Country/
					  CountryFullName"/>
	     </td>
	    </tr>
	    <tr>                      
	     <td xsl:use-attribute-sets= "cell1of2">
	      <b>Zip/Postal Code</b>
	     </td>
	     <td xsl:use-attribute-sets= "cell2of2">
	      <xsl:value-of     select = "PostalCode_ZIP"/>
	     </td>
	    </tr>
	   </xsl:for-each>
	  </xsl:when>
	  <xsl:otherwise>
	   <!-- 
	   Create a variable holding the fragment ID of the Org Location
	   for this OtherPracticeLocation.  This will be used to display
	   the address since no SpecificPostalAddress element exists.
	   ============================================================= -->
	   <xsl:variable          name = "orgLocFrag"  
			        select = "substring-after(PersonLocations/
			  		  OtherPracticeLocation
			  		    [@cdr:id = $PerFrag]/
			  	          OrganizationLocation/
			  	          Organization/@cdr:ref, '#')"/>

	   <xsl:for-each        select = "PersonLocations/
			  	          OtherPracticeLocation
			  	            [@cdr:id = $PerFrag]/
			  	          OrganizationLocation/
					  Organization/
			  	          OrganizationLocations/
			  	          OrganizationLocation/
			  	          Location[@cdr:id = $orgLocFrag]/
			  	          PostalAddress/
			  	          Street">
	    <tr>
	     <td xsl:use-attribute-sets= "cell1of2">
	      <xsl:if             test = "not(preceding-sibling::Street)">
	       <i>
		<b>Street</b>
	       </i>
	      </xsl:if>
	     </td>
	     <td xsl:use-attribute-sets= "cell2of2">
	      <i>
	       <xsl:value-of    select = "."/>
	      </i>
	     </td>
	    </tr>
	   </xsl:for-each>

	   <xsl:for-each        select = "PersonLocations/
			  	          OtherPracticeLocation
			  	            [$PerFrag=@cdr:id]/
			  	          OrganizationLocation/
				          Organization/
			  	          OrganizationLocations/
			  	          OrganizationLocation/
			  	          Location[@cdr:id = $orgLocFrag]/
			  	          PostalAddress">
	    <tr>
	     <td xsl:use-attribute-sets= "cell1of2">
	      <i>
	       <b>City</b>
	      </i>
	     </td>
	     <td xsl:use-attribute-sets= "cell2of2">
	      <i>
	       <xsl:value-of    select = "City"/>
	      </i>
	     </td>
	    </tr>
	    <xsl:if               test = "CitySuffix">
	     <tr>
	      <td xsl:use-attribute-sets 
	                               = "cell1of2">
	       <i>
		<b>City Suffix</b>
	       </i>
	      </td>
	      <td xsl:use-attribute-sets 
	                               = "cell2of2">
	       <i>
		<xsl:value-of   select = "CitySuffix"/>
	       </i>
	      </td>
	     </tr>
	    </xsl:if>
	    <tr>
	     <td xsl:use-attribute-sets= "cell1of2">
	      <i>
	       <b>State/Political Unit</b>
	      </i>
	     </td>
	     <td xsl:use-attribute-sets= "cell2of2">
	      <i>
	       <xsl:value-of    select = "PoliticalSubUnit_State/
					  PoliticalSubUnitFullName"/>
	      </i>
	     </td>
	    </tr>
	    <tr>                      
	     <td xsl:use-attribute-sets= "cell1of2">
	      <i>
	       <b>Country</b>
	      </i>
	     </td>
	     <td xsl:use-attribute-sets= "cell2of2">
	      <i>
	       <xsl:value-of    select = "Country/
					  CountryFullName"/>
	      </i>
	     </td>
	    </tr>
	    <tr>                      
	     <td xsl:use-attribute-sets= "cell1of2">
	      <i>
	       <b>Zip/Postal Code</b>
	      </i>
	     </td>
	     <td xsl:use-attribute-sets= "cell2of2">
	      <i>
	       <xsl:value-of    select = "PostalCode_ZIP"/>
	      </i>    
	     </td>
	    </tr>
	   </xsl:for-each>
	  </xsl:otherwise>
         </xsl:choose>
        </table>

        <!--
	B) Private Practice Location: Postal Address Section
	==================================================== -->
        <xsl:if                   test = "PersonLocations/
	                                  PrivatePractice/
                                          PrivatePracticeLocation
					    [$PerFrag=@cdr:id]">
         <table xsl:use-attribute-sets = "table">
          <xsl:for-each         select = "PersonLocations/
	                                  PrivatePractice/
                                          PrivatePracticeLocation
					    [$PerFrag=@cdr:id]/
                                          PostalAddress/
					  Street">
           <tr>
            <td xsl:use-attribute-sets = "cell1of2">
             <xsl:if              test = "not(preceding-sibling::Street)">
              <b>Street</b>
             </xsl:if>
            </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <xsl:value-of      select = "."/>
            </td>
           </tr>
          </xsl:for-each>
         </table>

         <table xsl:use-attribute-sets = "table">
          <xsl:for-each         select = "PersonLocations/
	                                  PrivatePractice/
                                          PrivatePracticeLocation
					    [$PerFrag=@cdr:id]/
                                          PostalAddress">
           <tr>
            <td xsl:use-attribute-sets = "cell1of2">
             <b>City</b>
            </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <xsl:value-of      select = "City"/>
            </td>
           </tr>
 
           <xsl:if                test = "CitySuffix">
            <tr>
             <td xsl:use-attribute-sets= "cell1of2">
              <b>City Suffix</b>
             </td>
             <td xsl:use-attribute-sets= "cell2of2">
              <xsl:value-of     select = "CitySuffix"/>
             </td>
            </tr>
           </xsl:if>
                  
           <tr>
            <td xsl:use-attribute-sets = "cell1of2">
             <b>State/Political Unit</b>
            </td>
            <td xsl:use-attribute-sets = "cell2of2">
   
             <xsl:value-of      select = "PoliticalSubUnit_State/
                                          PoliticalSubUnitFullName"/>
            </td>
           </tr>

           <tr>                      
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Country</b>
            </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <xsl:value-of      select = "Country/
                                          CountryFullName"/>
            </td>
           </tr>
	   
           <tr>                      
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Zip/Postal Code</b>
            </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <xsl:value-of      select = "PostalCode_ZIP"/>
            </td>
           </tr>
          </xsl:for-each>
         </table>
        </xsl:if>
  
        <!--
	C) Home Location: Postal Address Section
	==================================================== -->
        <xsl:if                   test = "PersonLocations/
                                          Home[$PerFrag=@cdr:id]">
         <table xsl:use-attribute-sets = "table">
          <xsl:for-each         select = "PersonLocations/
                                          Home[$PerFrag=@cdr:id]/
                                          PostalAddress/
					  Street">
           <tr>
            <td xsl:use-attribute-sets = "cell1of2">
             <xsl:if              test = "not(preceding-sibling::Street)">
              <b>Street</b>
             </xsl:if>
            </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <xsl:value-of      select = "."/>
            </td>
           </tr>
          </xsl:for-each>
         </table>

         <table xsl:use-attribute-sets = "table">
          <xsl:for-each         select = "PersonLocations/
                                          Home[$PerFrag=@cdr:id]/
                                          PostalAddress">
           <tr>
            <td xsl:use-attribute-sets = "cell1of2">
             <b>City</b>
            </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <xsl:value-of      select = "City"/>
            </td>
           </tr>
 
           <xsl:if                test = "CitySuffix">
            <tr>
             <td xsl:use-attribute-sets= "cell1of2">
              <b>City Suffix</b>
             </td>
             <td xsl:use-attribute-sets= "cell2of2">
              <xsl:value-of     select = "CitySuffix"/>
             </td>
            </tr>
           </xsl:if>

           <tr>
            <td xsl:use-attribute-sets = "cell1of2">
             <b>State/Political Unit</b>
            </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <xsl:value-of      select = "PoliticalSubUnit_State/
                                          PoliticalSubUnitFullName"/>
            </td>
           </tr>

           <tr>                      
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Country</b>
            </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <xsl:value-of      select = "Country/
                                          CountryFullName"/>
            </td>
           </tr>
	   
           <tr>                      
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Zip/Postal Code</b>
            </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <xsl:value-of      select = "PostalCode_ZIP"/>
            </td>
           </tr>
          </xsl:for-each>
         </table>
        </xsl:if>

	<xsl:variable             name = "orgLocFrag"  
			        select = "substring-after(PersonLocations/
			  		  OtherPracticeLocation
			  		    [@cdr:id = $PerFrag]/
			  	          OrganizationLocation/
			  	          Organization/@cdr:ref, '#')"/>
        <!--
        ===================================================================
        Display the Phone, TollFreePhone, Email, Fax, WebSite, etc Info.
        If ProtocolSpecific Phone and Email exists display in color.
        If the information comes from the Person document display normal.
        If the information comes from the Org document display in italic.

	If no phone exists display just the empty phone label.
        =================================================================== -->
        <table  xsl:use-attribute-sets = "table">
         <!-- 
         A) Phone
	 ========== -->
         <tr>
          <xsl:choose>
           <xsl:when              test = "../SpecificPhone">
            <td xsl:use-attribute-sets = "cell1of2">
             <b class="native">Phone</b>
            </td>
            <td xsl:use-attribute-sets = "cell2of2">
	     <p class="native">
              <xsl:value-of     select = "../SpecificPhone"/>
              <xsl:apply-templates 
	                        select = "SpecificPhone/@Public"/>
	     </p>
	    </td>
           </xsl:when>
           <xsl:when              test = "PersonLocations/
                                            OtherPracticeLocation
					      [@cdr:id = $PerFrag]/
                                            SpecificPhone |
                                          PersonLocations/
					    PrivatePractice/
                                            PrivatePracticeLocation
					      [@cdr:id = $PerFrag]/
                                            Phone | 
                                          PersonLocations/
                                            Home[@cdr:id = $PerFrag]/
                                            Phone"> 
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Phone</b>
	    </td>
            <td xsl:use-attribute-sets = "cell2of2">
              <xsl:value-of     select = "PersonLocations/
                                            OtherPracticeLocation
					      [@cdr:id = $PerFrag]/
                                            SpecificPhone |
                                          PersonLocations/PrivatePractice/
                                            PrivatePracticeLocation
					      [@cdr:id = $PerFrag]/
                                            Phone |
                                          PersonLocations/
                                            Home[@cdr:id = $PerFrag]/
                                            Phone"/>
              <xsl:apply-templates 
	                        select = "PersonLocations/
                                            OtherPracticeLocation
					      [@cdr:id = $PerFrag]/
                                            SpecificPhone/@Public |
                                          PersonLocations/
					    PrivatePractice/
                                            PrivatePracticeLocation
					      [@cdr:id = $PerFrag]/
                                            Phone/@Public |
                                          PersonLocations/
                                            Home[@cdr:id = $PerFrag]/
                                            Phone/@Public"/>
	    </td>
           </xsl:when>
           <xsl:when             test = "PersonLocations/
                                          OtherPracticeLocation
					    [@cdr:id = $PerFrag]/
                                          OrganizationLocation/
					  Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
					  Location[@cdr:id = $orgLocFrag]/
                                          Phone"> 
            <td xsl:use-attribute-sets = "cell1of2">
             <i>
              <b>Phone</b>
             </i>
	    </td>
            <td xsl:use-attribute-sets = "cell2of2">
	     <i>
              <xsl:value-of     select = "PersonLocations/
                                          OtherPracticeLocation
					    [@cdr:id = $PerFrag]/
                                          OrganizationLocation/
					  Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
					  Location[@cdr:id = $orgLocFrag]/
                                          Phone"/>
	     </i>
	    </td>
           </xsl:when>
           <xsl:otherwise>
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Phone</b>
	    </td>
            <td xsl:use-attribute-sets = "cell2of2">
	    </td>
           </xsl:otherwise>
          </xsl:choose>
         </tr>

         <!-- 
         B) Fax
	 Display SpecificFax or Fax for Participants section. 
         If no Fax exists just print an empty label.
         =========================================================== -->
         <tr>
          <xsl:choose>
           <xsl:when              test = "PersonLocations/
                                            OtherPracticeLocation
					      [@cdr:id = $PerFrag]/
                                            SpecificFax |
                                          PersonLocations/
                                            PrivatePractice/
                                            PrivatePracticeLocation
					      [@cdr:id = $PerFrag]/
                                            Fax | 
                                          PersonLocations/
                                          Home[@cdr:id = $PerFrag]/
                                            Fax">
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Fax</b>
	    </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <xsl:value-of      select = "PersonLocations/
                                            OtherPracticeLocation
					      [@cdr:id = $PerFrag]/
                                            SpecificFax |
                                          PersonLocations/
                                            PrivatePractice/
                                            PrivatePracticeLocation
					      [@cdr:id = $PerFrag]/
                                            Fax | 
                                          PersonLocations/
                                          Home[@cdr:id = $PerFrag]/
                                            Fax"/>
	    </td>
           </xsl:when>
           <xsl:when              test = "PersonLocations/
                                          OtherPracticeLocation
					    [@cdr:id = $PerFrag]/
                                          OrganizationLocation/
					  Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
					  Location[@cdr:id = $orgLocFrag]/
					  Fax">
            <td xsl:use-attribute-sets = "cell1of2">
             <i>
              <b>Fax</b>
             </i>
	    </td>
            <td xsl:use-attribute-sets = "cell1of2">
	     <i>
              <xsl:value-of     select = "PersonLocations/
                                          OtherPracticeLocation
					    [@cdr:id = $PerFrag]/
                                          OrganizationLocation/
					  Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
					  Location[@cdr:id = $orgLocFrag]/
					  Fax"/>
	     </i>
            </td>
           </xsl:when>
           <xsl:otherwise>
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Fax</b>
	    </td>
            <td xsl:use-attribute-sets = "cell1of2">
	    </td>
           </xsl:otherwise>
          </xsl:choose>
         </tr>
      
         <!-- 
         C) TollFreePhone
	 Display SpecificTollFreePhone or TollFreePhone for 
         Participants section. 
         If no Phone exists just print an empty label.
         =========================================================== -->
         <tr>
          <xsl:choose>
           <xsl:when              test = "PersonLocations/
                                            OtherPracticeLocation
					      [@cdr:id = $PerFrag]/
                                            SpecificTollFreePhone |
                                          PersonLocations/
					    PrivatePractice/
                                            PrivatePracticeLocation
					      [@cdr:id = $PerFrag]/
                                            TollFreePhone">
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Toll Free Phone</b>
	    </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <xsl:value-of      select = "PersonLocations/
                                            OtherPracticeLocation
					      [@cdr:id = $PerFrag]/
                                            SpecificTollFreePhone |
                                          PersonLocations/
					    PrivatePractice/
                                            PrivatePracticeLocation
					      [@cdr:id = $PerFrag]/
                                            TollFreePhone"/>
	    </td>
           </xsl:when>
           <xsl:when              test = "PersonLocations/
                                          OtherPracticeLocation
					    [@cdr:id = $PerFrag]/
                                          OrganizationLocation/
					  Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
					  Location[@cdr:id = $orgLocFrag]/
                                          TollFreePhone">
            <td xsl:use-attribute-sets = "cell1of2">
             <i>
              <b>Toll Free Phone</b>
             </i>
	    </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <i>
              <xsl:value-of    select = "PersonLocations/
                                          OtherPracticeLocation
					    [@cdr:id = $PerFrag]/
                                          OrganizationLocation/
					  Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
					  Location[@cdr:id = $orgLocFrag]/
                                          TollFreePhone"/>
             </i>
	    </td>
           </xsl:when>
           <xsl:otherwise>
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Toll Free Phone</b>
	    </td>
            <td xsl:use-attribute-sets = "cell1of2">
	    </td>
           </xsl:otherwise>
          </xsl:choose>
         </tr>

         <!-- 
         D) Email
	 Display SpecificEmail or Email for Participants section. 
         If no Email exists just print an empty label.
         =========================================================== -->
         <tr>
          <xsl:choose>
	   <xsl:when              test = "../SpecificEmail">
            <td xsl:use-attribute-sets = "cell1of2">
             <b class="native">Email</b>
	    </td>
            <td xsl:use-attribute-sets = "cell2of2">
	     <p class="native">
	      <xsl:for-each     select = "../SpecificEmail">
	       <xsl:call-template name = "createEmailLink"/>
	      </xsl:for-each>
	     </p>
	    </td>
	   </xsl:when>
           <xsl:when              test = "PersonLocations/
                                            OtherPracticeLocation
					      [@cdr:id = $PerFrag]/
                                            SpecificEmail |
                                          PersonLocations/
					    PrivatePractice/
                                            PrivatePracticeLocation
					      [@cdr:id = $PerFrag]/
                                            Email |
                                          PersonLocations/
                                            Home[@cdr:id = $PerFrag]/
                                            Email">
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Email</b>
	    </td>
            <td xsl:use-attribute-sets = "cell2of2">
	     <xsl:for-each      select = "PersonLocations/
                                            OtherPracticeLocation
					      [@cdr:id = $PerFrag]/
                                            SpecificEmail |
                                          PersonLocations/
					    PrivatePractice/
                                            PrivatePracticeLocation
					      [@cdr:id = $PerFrag]/
                                            Email |
                                          PersonLocations/
                                            Home[@cdr:id = $PerFrag]/
                                            Email">
	      <xsl:call-template  name = "createEmailLink"/>
	     </xsl:for-each>
	    </td>
           </xsl:when>
           <xsl:otherwise>
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Email</b>
	    </td>
            <td xsl:use-attribute-sets = "cell2of2">
	    </td>
           </xsl:otherwise>
          </xsl:choose>
         </tr>

         <!-- 
         E) WebSite
	 Display SpecificWebSite or WebSite for Participants section. 
         If no WebSite exists just print an empty label.
         =========================================================== -->
         <tr>
          <xsl:choose>
           <xsl:when              test = "PersonLocations/
                                            OtherPracticeLocation
					      [@cdr:id = $PerFrag]/
                                            SpecificWebSite |
                                          PersonLocations/
					    PrivatePractice/
                                            PrivatePracticeLocation
					      [@cdr:id = $PerFrag]/
                                            WebSite |
                                          PersonLocations/
                                            Home[@cdr:id = $PerFrag]/
					    WebSite">
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Web Site</b>
	    </td>
            <td xsl:use-attribute-sets = "cell2of2">
             <xsl:for-each      select = "PersonLocations/
                                            OtherPracticeLocation
					      [@cdr:id = $PerFrag]/
                                            SpecificWebSite |
                                          PersonLocations/
					    PrivatePractice/
                                            PrivatePracticeLocation
					      [@cdr:id = $PerFrag]/
                                            WebSite |
                                          PersonLocations/
                                            Home[@cdr:id = $PerFrag]/
					    WebSite">
              <xsl:call-template  name = "createWebLink"/>
	      <br/>
	      <xsl:value-of     select = "."/>
	     </xsl:for-each>
	    </td>
           </xsl:when>
           <xsl:when              test = "PersonLocations/
                                          OtherPracticeLocation
					    [@cdr:id = $PerFrag]/
                                          OrganizationLocation/
					  Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
					  Location[@cdr:id = $orgLocFrag]/
                                          WebSite">
            <td xsl:use-attribute-sets = "cell1of2">
             <i>
              <b>Web Site</b>
             </i>
	    </td>
            <td xsl:use-attribute-sets = "cell2of2">
	     <i>
              <xsl:for-each     select = "PersonLocations/
                                          OtherPracticeLocation
					    [@cdr:id = $PerFrag]/
                                          OrganizationLocation/
					  Organization/
                                          OrganizationLocations/
                                          OrganizationLocation/
					  Location[@cdr:id = $orgLocFrag]/
                                          WebSite">
               <xsl:call-template name = "createWebLink"/>
	       <br/>
	       <xsl:value-of    select = "."/>
	      </xsl:for-each>
	     </i>
	    </td>
           </xsl:when>
           <xsl:otherwise>
            <td xsl:use-attribute-sets = "cell1of2">
             <b>Web Site</b>
	    </td>
            <td xsl:use-attribute-sets = "cell2of2">
	    </td>
           </xsl:otherwise>
          </xsl:choose>
         </tr>
        </table>
       </xsl:for-each>
      </xsl:if> 

      <xsl:apply-templates      select = "GenericPerson"/>

      <!-- 
      Add Clinical Trials Office Information
      ====================================== -->
      <xsl:if                     test = "ClinicalTrialOffice">
       <table   xsl:use-attribute-sets = "table">
        <tr>
         <td    xsl:use-attribute-sets = "cell1of2">
          <b>Clinical Trial Office</b>
         </td>
         <td    xsl:use-attribute-sets = "cell2of2">
          <xsl:value-of         select = "ClinicalTrialOffice"/>
         </td>
        </tr>
       </table>
      </xsl:if>
      <br />  
     </xsl:for-each>
    </li>
   </xsl:for-each>
  </ol>
 </xsl:template>


 <!--
 ==================================================================
 Template to display the ProtocolSpecificContact Information
 ProtocolSpecificContact Information is displayed in green.
 (class="native" in the CSS)
 ================================================================== -->
 <xsl:template                   name = "displayProtocolSpecificPostalAddress">
  <!-- 
  Display ProtocolSpecificContact Information using special color
  =============================================================== -->
   <xsl:for-each                select = "PostalAddress/Street">     
    <table      xsl:use-attribute-sets = "table">
     <tr> 
      <td       xsl:use-attribute-sets = "cell1iof2">
      </td>
      <td       xsl:use-attribute-sets = "cell2iof2">
       <xsl:if                    test = "not(preceding-sibling::Street)">
        <b class="native">Street</b>
       </xsl:if>
      </td>
       
      <td       xsl:use-attribute-sets = "cell2of2">
       <p class="native">
        <xsl:value-of           select = "."/>
       </p>
      </td>
     </tr>
    </table> 
   </xsl:for-each> 

  <xsl:for-each                 select = "PostalAddress">   
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b class="native">City</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <p class="native">
       <xsl:value-of            select = "City"/>
      </p>
     </td>
    </tr>
   </table>

   <xsl:if                        test = "CitySuffix">
    <table      xsl:use-attribute-sets = "table">                     
     <tr>
      <td       xsl:use-attribute-sets = "cell1iof2">
      </td>
      <td       xsl:use-attribute-sets = "cell2iof2">
       <b class="native">City Suffix</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <p class="native">
        <xsl:value-of           select = "CitySuffix"/>
       </p>
      </td>
     </tr>
    </table>
   </xsl:if>

   <table       xsl:use-attribute-sets = "table">                       
    <tr>
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b class="native">State/Political Unit</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <p class="native">
       <xsl:value-of            select = "PoliticalSubUnit_State/
                                          PoliticalSubUnitFullName"/>
      </p>
     </td>
    </tr>
   </table>
 
   <table       xsl:use-attribute-sets = "table"> 
    <tr>   
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b class="native">Country</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <p class="native">
       <xsl:value-of            select = "Country/
                                         CountryFullName"/>
      </p>
     </td>
    </tr>
   </table>

   <table       xsl:use-attribute-sets = "table"> 
    <tr>  
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b class="native">Zip/Postal Code</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <p class="native">
       <xsl:value-of            select = "PostalCode_ZIP"/> 
      </p>
     </td>
    </tr>
   </table>
  </xsl:for-each>
 </xsl:template>

 <!--
 ========================================================================
 ======================================================================== -->
 <xsl:template                   name = "displayProtocolSpecificPhone">
  <xsl:for-each                 select = "Phone">
    <tr>   
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b class="native">Phone</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <p class="native">
       <xsl:value-of            select = "."/>
       <xsl:apply-templates     select = "@Public"/>
      </p>
     </td>
    </tr>
  </xsl:for-each>
 </xsl:template>


 <!--
 ========================================================================
 ======================================================================== -->
 <xsl:template                    name = "displayProtocolSpecificFax">
  <xsl:for-each                 select = "Fax">
   <table       xsl:use-attribute-sets = "table"> 
    <tr>   
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b class="native">Fax</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <p class="native">
       <xsl:value-of            select = "."/>
      </p>
     </td>
    </tr>
   </table>
  </xsl:for-each>
 </xsl:template>


 <!--
 ========================================================================
 ======================================================================== -->
 <xsl:template                    name = "displayProtocolSpecificTFPhone">
  <xsl:for-each                 select = "TollFreePhone">
   <table       xsl:use-attribute-sets = "table"> 
    <tr>   
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b class="native">Toll Free Phone</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <p class="native">
       <xsl:value-of            select = "."/>
      </p>
     </td>
    </tr>
   </table>
  </xsl:for-each>
 </xsl:template>


 <!--
 ========================================================================
 ======================================================================== -->
 <xsl:template                    name = "displayProtocolSpecificEmail">
  <xsl:for-each                 select = "Email">  
   <table       xsl:use-attribute-sets = "table">
    <tr>   
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b class="native">Email</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:element                name = "a">
       <xsl:attribute             name = "href">
        <xsl:value-of           select = "concat('mailto:',.)"/>
       </xsl:attribute>
       <p class="native">
        <xsl:value-of           select = "."/>
       </p>
      </xsl:element>
      <xsl:apply-templates      select = "@Public"/>
     </td>
    </tr>
   </table>
  </xsl:for-each>
 </xsl:template>


 <!--
 ========================================================================
 ======================================================================== -->
 <xsl:template                    name = "displayProtocolSpecificWebSite">
  <xsl:for-each                 select = "WebSite">
   <table       xsl:use-attribute-sets = "table">
    <tr>   
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b class="native">Web Site</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:element                name = "a">
       <xsl:attribute             name = "href">
        <xsl:choose>
         <xsl:when                test = "contains(
                                          @cdr:xref,'http')">
          <xsl:value-of         select = "@cdr:xref"/>
         </xsl:when>
         <xsl:otherwise>
          <xsl:value-of         select = "concat('http://',
                                          @cdr:ref)"/>
         </xsl:otherwise>
        </xsl:choose>
       </xsl:attribute>
       <xsl:attribute             name = "target">
        <xsl:text>new</xsl:text>
       </xsl:attribute>
       <xsl:value-of            select = "@cdr:xref"/>
      </xsl:element>
      <p class="native">
       <xsl:value-of            select = "."/>
      </p>
     </td>
    </tr>
   </table>
  </xsl:for-each>
 </xsl:template>


 <!--
 =======================================================================
 ======================================================================= -->
 <xsl:template                    name = "createEmailLink">
  <xsl:element                    name = "a">
   <xsl:attribute                 name = "href">
    <xsl:value-of               select = "concat('mailto:', .)"/>
   </xsl:attribute>
   <xsl:value-of                select = "."/>
  </xsl:element> 
  <xsl:apply-templates          select = "@Public"/>
 </xsl:template>


 <!--
 =======================================================================
 ======================================================================= -->
 <xsl:template                   name = "createWebLink">
  <xsl:element                   name = "a">
   <xsl:attribute                name = "href">
    <xsl:choose>
     <xsl:when                   test = "contains(@cdr:xref, 'http')">
      <xsl:value-of            select = "@cdr:xref"/>
     </xsl:when>
     <xsl:otherwise>
      <xsl:value-of            select = "concat('http://', @cdr:xref)"/>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:attribute>
   <xsl:attribute                name = "target">
    <xsl:text>new</xsl:text>
   </xsl:attribute>
 
   <xsl:value-of               select = "@cdr:xref"/>
  </xsl:element>
 </xsl:template>
</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>