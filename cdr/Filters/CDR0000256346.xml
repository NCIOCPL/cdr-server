<CdrDoc Type='Filter' Id='CDR0000256346'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">InLine Markup Formatter</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
               exclude-result-prefixes = "cdr">
  
<!-- ======================================================================
      Display a Summary Reference, SummaryFragmentRef or LOEFragmentRef
     ===================================================================== -->
  <xsl:template                  match = "SummaryRef |
                                          SummaryFragmentRef | 
                                          LOEFragmentRef">
    <u><xsl:value-of            select = "."/></u>
  </xsl:template>

<!-- ======================================================================
                       Link to glossaryTermRefs 
     ===================================================================== -->
  <xsl:template                  match = "GlossaryTermRef">
    <a>
      <xsl:attribute              name = "href">
        <xsl:value-of           select = "concat('/cgi-bin/cdr/Filter.py?',
                                                 'DocId=', @cdr:href,
                                                 '&amp;Filter=name:Glossary',
                                                 '+Term+Display+for+Patient',
                                                 '+Summaries')"/>
      </xsl:attribute>
      <xsl:value-of             select = "."/>
    </a>
  </xsl:template>

<!-- ======================================================================
                       Display an ordered list 
     ===================================================================== -->
  <xsl:template                  match = "OrderedList[@Style='Arabic'] |
                                          OrderedList[@Style='UAlpha'] |
                                          OrderedList[@Style='LAlpha'] |
                                          OrderedList[@Style='URoman'] |
                                          OrderedList[@Style='URoman']">
    <xsl:apply-templates        select = "ListTitle"/>

    <ol>
    <xsl:for-each               select = "ListItem">
      <li>
      
      <!-- No attribute for Arabic; it is the default. -->
      <xsl:choose>
        <xsl:when                 test = "../@Style='UAlpha'">
          <xsl:attribute          name = "type">
            <xsl:text>A</xsl:text>
          </xsl:attribute>
        </xsl:when>
        <xsl:when                 test = "../@Style='LAlpha'">
          <xsl:attribute          name = "type">
            <xsl:text>a</xsl:text>
          </xsl:attribute>
        </xsl:when>
        <xsl:when                 test = "../@Style='URoman'">
          <xsl:attribute          name = "type">
            <xsl:text>I</xsl:text>
          </xsl:attribute>
        </xsl:when>
        <xsl:when                 test = "../@Style='LRoman'">
          <xsl:attribute          name = "type">
            <xsl:text>i</xsl:text>
          </xsl:attribute>
        </xsl:when>
      </xsl:choose>
      <xsl:apply-templates/>
      </li>
      <br />
    </xsl:for-each>
    </ol>
  </xsl:template>
    
<!-- ======================================================================
                Display Itemized Lists for KeyPoints
     ===================================================================== -->    
  <xsl:template                  match = "KeyPointsList[@Style='bullet'] |
                                          KeyPointsList[@Style='dash']">
    <ul>
    <xsl:for-each               select = "ListItem">
      <li>
      <xsl:choose>
        <xsl:when                 test = "../@Style='bullet'">
          <xsl:attribute          name = "type">
            <xsl:text>disc</xsl:text>
          </xsl:attribute>
        </xsl:when>
        <xsl:when                 test = "../@Style='dash'">
          <xsl:attribute          name = "type">
            <xsl:text>square</xsl:text>
          </xsl:attribute>
        </xsl:when>
      </xsl:choose>                               
      <a href="#{translate(substring(.,1,15),' ','-')}">
      <xsl:apply-templates/>
      </a>
      </li>
    </xsl:for-each>
    </ul>
  </xsl:template>
                       
<!-- ======================================================================
                Display an Itemized List
     ===================================================================== -->               
  <xsl:template                  match = "ItemizedList[@Style='bullet'] |
                                          ItemizedList[@Style='dash'] |
                                          ItemizedList[@Style='simple'] |
                                          ItemizedList">
    <xsl:apply-templates        select = "ListTitle"/>
   
    <ul>
    <xsl:for-each select="ListItem">      
      <li>
      <xsl:choose>
        <xsl:when                 test = "../@Style='bullet'">
          <xsl:attribute          name = "type">
            <xsl:text>disc</xsl:text>
          </xsl:attribute>
        </xsl:when>
        <xsl:when                 test = "../@Style='dash'">
          <xsl:attribute          name = "type">
            <xsl:text>square</xsl:text>
          </xsl:attribute>
        </xsl:when>
        <xsl:when                 test = "../@Style='simple'">
          <xsl:attribute          name = "class">
            <xsl:text>lnone</xsl:text>
          </xsl:attribute>
        </xsl:when>       
        <xsl:when                 test = "not(../@Style)">
          <xsl:attribute          name = "class">
            <xsl:text>lnone</xsl:text>
          </xsl:attribute>
        </xsl:when>
      </xsl:choose>                               
      <xsl:apply-templates/>
      </li>
      <xsl:if                     test = "position() != last()">      
        <xsl:choose>
          <xsl:when               test = "../@Compact='No'">
            <br />
            <br />
          </xsl:when>
          <xsl:when               test = "not (../@Style='dash')">
            <br />
          </xsl:when>
        </xsl:choose>
      </xsl:if>
    </xsl:for-each>    
    </ul>  
  </xsl:template>          
 
<!-- ======================================================================
                     Display a Subscript 
     ===================================================================== -->   
  <xsl:template match="Subscript">
    <sub><xsl:apply-templates/></sub>
  </xsl:template>

<!-- ======================================================================
                     Display a Superscript 
     ===================================================================== -->
  <xsl:template match="Superscript">
    <sup><xsl:apply-templates/></sup>
  </xsl:template>

<!-- ======================================================================
                     Display Strong 
     ===================================================================== -->
  <xsl:template match="Strong">
    <b><xsl:apply-templates/></b>
  </xsl:template>

<!-- ======================================================================
              Display Emphasis, ScientificName, ForeignWord, GeneName
     ===================================================================== -->
  <xsl:template                  match = "Emphasis | ScientificName |
                                          ForeignWord | GeneName">
    <i><xsl:apply-templates/></i>
  </xsl:template>

<!-- ======================================================================
                         Display a note        
     ===================================================================== -->
  <xsl:template                  match = "Note">
    <i>
    <xsl:text>&#xa0;[</xsl:text>
    <xsl:choose>
      <xsl:when                   test = "/Summary/SummaryMetaData
                                          /SummaryLanguage ='Spanish'">                   
        <xsl:text>Nota: </xsl:text>
      </xsl:when>
      <xsl:otherwise>
        <xsl:text>Note: </xsl:text>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:value-of               select = "."/>
    <xsl:text>]</xsl:text>
    </i>
  </xsl:template>

<!-- ======================================================================
        Template handling ListTitle
     ===================================================================== -->  
  <xsl:template                  match = "ListTitle"> 
      <br />
      <b><i>
      <xsl:apply-templates /> 
      </i></b>    
  </xsl:template>

</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>