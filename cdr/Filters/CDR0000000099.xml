<CdrDoc Type='Filter' Id='CDR0000000099'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Denormalization Filter (1/1): Person</DocTitle>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>

<!-- ===============================================================
      Filter to Denormalize Person XML documents 
     =============================================================== -->

  <xsl:transform   xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                     version="1.0"
                   xmlns:cdr="cips.nci.nih.gov/cdr">
    
  <xsl:output method="xml" omit-xml-declaration="no"/>
 
<!-- =================================================================
       Copy control information and generate current date
     ================================================================= -->

   <xsl:template match="Person">
   <xsl:copy>
   <xsl:apply-templates select="document('cdrutil:/docid')" mode="copy"/>
   <xsl:apply-templates select="document('cdr:/*/CdrCtl')" mode="copy"/>

<!-- ====================================================================
                        Copy name information
     ==================================================================== -->

<xsl:apply-templates select="PersonNameInformation" mode="copy"/>

<!-- ======================================================================
    Copy Professional Information  NOTE: Genetics Professional Details not
    available until Phase II of CDR when code will need to be added to
    include those data elements
    ======================================================================== -->
     <ProfessionalInformation>
     <PDQBoardMembershipDetails>
    <xsl:for-each          select="ProfessionalInformation/PDQBoardMembershipDetails/PDQEditorialBoard">
    <xsl:if test="contains(@cdr:ref,'CDR')">
    <xsl:variable name="PDQBoardID" select="@cdr:ref"/>   
    <xsl:variable name="PDQBoardInfo" select="document(concat   ('cdr:',$PDQBoardID,'/last'))"/>
       
    <PDQEditorialBoard ref="{$PDQBoardID}"><xsl:apply-templates   select="$PDQBoardInfo/Organization/OrganizationNameInformation/OfficialName/Name" mode="copy"/></PDQEditorialBoard>
    </xsl:if>
   </xsl:for-each>

   <xsl:for-each select="ProfessionalInformation/PDQBoardMembershipDetails/PDQAdvisoryBoard">
  <xsl:if test="contains(@cdr:ref,'CDR')">
  <xsl:variable name="PDQBoardID" select="@cdr:ref"/>
  <xsl:variable name="PDQBoardInfo" select="document(concat('cdr:',$PDQBoardID,'/last'))"/>
  <PDQAdvisoryBoard><xsl:apply-templates select="$PDQBoardInfo/Organization/OrganizationNameInformation/OfficialName/Name" mode="copy"/></PDQAdvisoryBoard>
  </xsl:if>
  </xsl:for-each>

  <xsl:for-each select="ProfessionalInformation/PDQBoardMembershipDetails/PDQVoluntaryProtocolReviewBoard">
 <xsl:if test="contains(@cdr:ref,'CDR')">
 <xsl:variable name="PDQBoardID" select="@cdr:ref"/>
 <xsl:variable name="PDQBoardInfo" select="document(concat('cdr:',$PDQBoardID,'/last'))"/>
 <PDQVoluntaryProtocolReviewBoard><xsl:apply-templates select="$PDQBoardInfo/Organization/OrganizationNameInformation/OfficialName/Name" mode="copy"/></PDQVoluntaryProtocolReviewBoard>
    </xsl:if>
    </xsl:for-each>
    </PDQBoardMembershipDetails>
     <PhysicianDetails>
     <xsl:apply-templates select="ProfessionalInformation/PhysicianDetails/PhysicianSpecialtyInformation" mode="copy"/>
  <xsl:apply-templates select="ProfessionalInformation/PhysicianDetails/AdministrativeInformation" mode="copy"/>
  <PhysicianMembershipInformation>
  <xsl:if test="ProfessionalInformation/PhysicianDetails/PhysicianMembershipInformation/MemberOfCooperativeGroup/CooperativeGroup">
  <MemberOfCooperativeGroup>
  <xsl:for-each  select="ProfessionalInformation/PhysicianDetails/PhysicianMembershipInformation/MemberOfCooperativeGroup/CooperativeGroup">
  <xsl:if test="../@GroupChair">
  <GroupChair><xsl:value-of select="../@GroupChair"/></GroupChair>
  </xsl:if>
  <CooperativeGroup>
  <Ref>
  <xsl:value-of select="@cdr:ref"/>
  </Ref>
  <xsl:if test="contains(@cdr:ref,'CDR')">
  <xsl:variable name="CoopGroupID" select="@cdr:ref"/>
  <xsl:variable name="CoopInfo" select="document(concat('cdr:',$CoopGroupID,'/last'))"/>
    
  <OfficialName><xsl:apply-templates select="$CoopInfo/Organization/OrganizationNameInformation/OfficialName/Name" mode="copy"/></OfficialName>
  <xsl:apply-templates select="$CoopInfo/Organization/OrganizationNameInformation/ShortName" mode="copy"/>
  </xsl:if>
  </CooperativeGroup>
  </xsl:for-each>
  </MemberOfCooperativeGroup>
  </xsl:if>
  <xsl:apply-templates select="ProfessionalInformation/PhysicianDetails/PhysicianMembershipInformation/MemberOfMedicalSociety" mode="copy"/>
  </PhysicianMembershipInformation>
  </PhysicianDetails>
  </ProfessionalInformation>

 <!-- ===================================================================
                   Copy Person contact Information - Private Practice
      =================================================================== -->

     <PersonLocations>
      <xsl:for-each select="PersonLocations/PrivatePractice/PrivatePracticeLocation">
      <xsl:variable name="id" select="@cdr:id"/>
      <PrivatePractice>
      <xsl:if test="../@PreviousLocation">
      <PreviousLocation><xsl:value-of select="../@PreviousLocation"/></PreviousLocation>
      </xsl:if>
      <PrivatePracticeLocation id="{$id}">
      <xsl:variable name="CipsContact" select="../../CIPSContact"/>
      <xsl:if test="$CipsContact=@cdr:id">
      <xsl:apply-templates select="../../CIPSContact" mode="copy"/>
      </xsl:if>
      <PostalAddress>
      <xsl:apply-templates select="PostalAddress/Street" mode="copy"/>
      <xsl:apply-templates select="PostalAddress/City" mode="copy"/>
      <xsl:apply-templates select="PostalAddress/CitySuffix" mode="copy"/>
      <xsl:for-each select="PostalAddress/PoliticalSubUnit_State"> 
      <xsl:if test="contains(@cdr:ref,'CDR')">
     <xsl:variable name="StateID" select="@cdr:ref"/>
     <xsl:variable name="StateInfo" select="document(concat('cdr:',$StateID,'/lastp'))"/>
    <PoliticalSubUnitRef><xsl:apply-templates select="$StateID"/></PoliticalSubUnitRef>
      <xsl:apply-templates     select="$StateInfo/PoliticalSubUnit/PoliticalSubUnitShortName" mode="copy"/>
      <xsl:apply-templates select="$StateInfo/PoliticalSubUnit/PoliticalSubUnitFullName" mode="copy"/> 
      </xsl:if>
      </xsl:for-each>
      <xsl:for-each select="PostalAddress/Country">
      <xsl:if test="contains(@cdr:ref,'CDR')">
      <xsl:variable name="CtyID" select="@cdr:ref"/>
      <xsl:variable name="CtyInfo" select="document(concat('cdr:',$CtyID,'/lastp'))"/>
     <xsl:apply-templates select="$CtyInfo/Country/CountryShortName" mode="copy"/>
    <CountryRef><xsl:apply-templates select="$CtyID"/></CountryRef>
      
    <xsl:apply-templates select="$CtyInfo/Country/CountryFullName" mode="copy"/> 
    <xsl:apply-templates select="$CtyInfo/Country/PostalCodePosition" mode="copy"/> 
    </xsl:if>
    </xsl:for-each>
    <xsl:apply-templates select="PostalAddress/PostalCode_ZIP" mode="copy"/>
   </PostalAddress></PrivatePracticeLocation>
    <xsl:variable name="public" select="Phone/@Public"/>
    <Phone Public='{$public}'><xsl:value-of select="Phone"/></Phone>
    <xsl:apply-templates select="TollFreePhone" mode="copy"/>
    <xsl:apply-templates select="Fax" mode="copy"/>
    <xsl:apply-templates select="Email" mode="copy"/>
    <xsl:apply-templates select="WebSite" mode="copy"/>

    </PrivatePractice>
    </xsl:for-each>

<!-- ==================================================================
            Contact Information -Home
     ================================================================== -->

    <xsl:for-each select="PersonLocations/Home">
    <xsl:variable name="id" select="@cdr:id"/>
    <Home id="{$id}">
    <xsl:variable name="CipsContact" select="../CIPSContact"/>
    <xsl:if test="$CipsContact=@cdr:id">
    <xsl:apply-templates select="../CIPSContact" mode="copy"/>
    </xsl:if>
    <PostalAddress>
    <xsl:apply-templates select="PostalAddress/Street" mode="copy"/>
    <xsl:apply-templates select="PostalAddress/City" mode="copy"/>
    <xsl:apply-templates select="PostalAddress/CitySuffix" mode="copy"/>
    <xsl:for-each select="PostalAddress/PoliticalSubUnit_State"> 
    <xsl:if test="contains(@cdr:ref,'CDR')">
     <xsl:variable name="StateID" select="@cdr:ref"/>
     <xsl:variable name="StateInfo" select="document(concat('cdr:',$StateID,'/lastp'))"/>
    <PoliticalSubUnitRef><xsl:apply-templates select="$StateID"/></PoliticalSubUnitRef>
    
     <xsl:apply-templates     select="$StateInfo/PoliticalSubUnit/PoliticalSubUnitShortName" mode="copy"/>
     <xsl:apply-templates select="$StateInfo/PoliticalSubUnit/PoliticalSubUnitFullName" mode="copy"/> 
     </xsl:if>
     </xsl:for-each>
     <xsl:for-each select="PostalAddress/Country">
     <xsl:if test="contains(@cdr:ref,'CDR')">
     <xsl:variable name="CtyID" select="@cdr:ref"/>
     <xsl:variable name="CtyInfo" select="document(concat('cdr:',$CtyID,'/lastp'))"/>
      
     <CountryRef><xsl:apply-templates select="$CtyID"/></CountryRef>
      
     <xsl:apply-templates select="$CtyInfo/Country/CountryShortName" mode="copy"/>
     <xsl:apply-templates select="$CtyInfo/Country/CountryFullName" mode="copy"/> 
     <xsl:apply-templates select="$CtyInfo/Country/PostalCodePosition" mode="copy"/> 
     </xsl:if>
     </xsl:for-each>
     <xsl:apply-templates select="PostalAddress/PostalCode_ZIP" mode="copy"/>
     </PostalAddress>
     <xsl:apply-templates select="Phone" mode="copy"/>
     <xsl:apply-templates select="TollFreePhone" mode="copy"/>
     <xsl:apply-templates select="Fax" mode="copy"/>
     <xsl:apply-templates select="Email" mode="copy"/>
     <xsl:apply-templates select="WebSite" mode="copy"/>


     </Home>
     </xsl:for-each>

<!-- =====================================================================
      Contact Information for Other Practice Location
    ==================================================================== -->
 
     <xsl:for-each select="PersonLocations/OtherPracticeLocation/OrganizationLocation">
     <xsl:variable name="ind" select="../@cdr:id"/>
     <xsl:variable name="orgloc" select="substring-after(@cdr:ref,'#')"/>
     <xsl:variable name="PrevLoc" select="../@PreviousLocation"/>
     <OtherPracticeLocation  id="{$ind}" >
<!--<xsl:if test="../@PreviousLocation">
<PreviousLocation><xsl:value-of select="../@PreviousLocation"/></PreviousLocation>
</xsl:if>-->
     <xsl:variable name="CipsContact" select="../../CIPSContact"/>
     <xsl:if test="$CipsContact=../@cdr:id">
     <xsl:apply-templates select="../../CIPSContact" mode="copy"/>
     </xsl:if>
     <xsl:if test="contains(@cdr:ref,'CDR')">
     <xsl:variable name="OrgID" select="substring-before(@cdr:ref,'#')"/>
     <xsl:variable name="OrgID2" select="substring-after(@cdr:ref,'#')"/>
     <xsl:variable name="OrgID3" select="@cdr:ref"/>
     <xsl:variable name="OrgInfo" select="document(concat('cdr:',$OrgID,'/last'))"/>
     
    <xsl:variable name="Stat" select="$OrgInfo/Organization/Status/CurrentStatus"/>
    <Status><xsl:value-of select="$Stat"/></Status>
    <xsl:if test="../@PreviousLocation">
    <PreviousLocation><xsl:value-of select="../@PreviousLocation"/></PreviousLocation>
    </xsl:if>
    <Organization id="{$OrgID3}"><xsl:apply-templates select="$OrgInfo/Organization/OrganizationNameInformation/OfficialName/Name" mode="copy"/></Organization>
<!-- Test to see if parent name is included in the organization name -->
  <xsl:variable name="ParentI" select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/@IncludeParentName"/>
<xsl:variable name="ParentO" select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/@OrderParentNameFirst"/>

<OrganizationLocation IncludeParentName='{$ParentI}' OrderParentNameFirst='{$ParentO}'/>

 <xsl:if test="not($OrgInfo/Organization/OrganizationLocations/OrganizationLocation/@IncludeParentName)">
  <OrganizationAddressNames>
      <OrganizationName><xsl:value-of select="$OrgInfo/Organization/OrganizationNameInformation/OfficialName/Name"/>
      </OrganizationName>
   </OrganizationAddressNames>
   </xsl:if>


     <xsl:if test="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/@IncludeParentName">
      <OrganizationAddressNames>
      <xsl:variable name="ParentID" select="$OrgInfo/Organization/OrganizationParent/ParentOrganization/@cdr:ref"/>
<xsl:variable name="ParentDoc" select="document(concat('cdr:',$ParentID,'/last'))"/>
      
  <!--    <xsl:if test="not($OrgInfo/Organization/OrganizationLocations/OrganizationLocation/@OrderParentNameFirst)">-->
      <OrganizationName><xsl:value-of select="$OrgInfo/Organization/OrganizationNameInformation/OfficialName/Name"/>
      </OrganizationName>

  <!--  </xsl:if>-->
     
      <xsl:call-template name="upcode-parentname">
      <xsl:with-param     name="ParentID"
                          select="$ParentID"/>
      <xsl:with-param      name="ParentDoc"
                          select="$ParentDoc"/>
      </xsl:call-template>
     
    <!--   <xsl:if test="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/@OrderParentNameFirst">
      <OrganizationName><xsl:value-of select="$OrgInfo/Organization/OrganizationNameInformation/OfficialName/Name"/>
      </OrganizationName>
      </xsl:if> -->
      </OrganizationAddressNames>
      </xsl:if>
    <xsl:if test="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/@IncludeParentName">
    <xsl:apply-templates select="$OrgInfo/Organization/OrganizationParent" mode="copy"/>
    </xsl:if>
<!--    <xsl:if test="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/@OrderParentNameFirst">
   <OrderParentNameFirst><xsl:value-of select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/@OrderParentNameFirst"/></OrderParentNameFirst>
   </xsl:if>-->

   <xsl:if test="not(../SpecificPostalAddress)">
   <xsl:variable name="orgid" select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location/@cdr:id"/>
  
   <SpecificPostalAddress>
   <xsl:for-each select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location[@cdr:id=$OrgID2]/PostalAddress">
   <xsl:for-each select="Street">
   <Street><xsl:value-of select="."/></Street>
   </xsl:for-each>
   </xsl:for-each>
  

  <City><xsl:value-of  select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location[@cdr:id=$OrgID2]/PostalAddress/City"/></City>

   <CitySuffix><xsl:value-of  select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location[@cdr:id=$OrgID2]/PostalAddress/CitySuffix"/></CitySuffix>

  <xsl:if test="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location[@cdr:id=$OrgID2]/PostalAddress/PoliticalSubUnit_State">
  <PoliticalSubUnitRef><xsl:value-of select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location[@cdr:id=$OrgID2]/PostalAddress/PoliticalSubUnit_State/@cdr:ref"/></PoliticalSubUnitRef>

   <xsl:variable name="StateID" select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/
       Location[@cdr:id=$OrgID2]/PostalAddress/PoliticalSubUnit_State/@cdr:ref"/>
   <xsl:variable name="StateInfo" select="document(concat('cdr:',$StateID,'/lastp'))"/>
     <PoliticalSubUnitShortName>
   <xsl:value-of     select="$StateInfo/PoliticalSubUnit/PoliticalSubUnitShortName"/></PoliticalSubUnitShortName>
   <PoliticalSubUnitFullName><xsl:value-of select="$StateInfo/PoliticalSubUnit/PoliticalSubUnitFullName"/></PoliticalSubUnitFullName> 
   </xsl:if>
   <xsl:variable name="CtyID" select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location/PostalAddress/Country/@cdr:ref"/> 
   <xsl:variable name="CtyInfo" select="document(concat('cdr:',$CtyID,'/lastp'))"/>
    
    <CountryRef><xsl:value-of select="$CtyID"/></CountryRef>
    <CountryShortName><xsl:value-of select="$CtyInfo/Country/CountryShortName"/></CountryShortName>
    <CountryFullName><xsl:value-of select="$CtyInfo/Country/CountryFullName"/></CountryFullName>
    <PostalCodePosition><xsl:value-of select="$CtyInfo/Country/PostalCodePosition"/></PostalCodePosition>
    <xsl:variable name="ZIP" select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location[@cdr:id=$OrgID2]/PostalAddress/PostalCode_ZIP"/> 
    <PostalCode_ZIP><xsl:value-of select="$ZIP"/></PostalCode_ZIP>
    </SpecificPostalAddress>
    </xsl:if>
   <!-- </xsl:if>-->
    <xsl:if test="not(../SpecificPhone)">
    <xsl:apply-templates select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location[@cdr:id=$OrgID2]/Phone" mode="copy"/>
<!--<xsl:if test="not(../SpecificTollFreePhone)">
    <xsl:apply-templates select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location[@cdr:id=$OrgID2]/TollFreePhone" mode="copy"/>
</xsl:if>-->
    <xsl:apply-templates select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location[@cdr:id=$OrgID2]/TollFreePhone" mode="copy"/>
    <xsl:if test="not(../SpecificFax)">
    <xsl:apply-templates select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location[@cdr:id=$OrgID2]/Fax" mode="copy"/>
    </xsl:if>
    <xsl:if test="not(../SpecificEmail)">
    <xsl:apply-templates select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location[@cdr:id=$OrgID2]/Email" mode="copy"/>
    </xsl:if>
<!--<xsl:apply-templates select="$OrgInfo/Organization/OrganizationLocations/OrganizationLocation/Location/WebSite" mode="copy"/>-->
    </xsl:if>
    <xsl:if test="../SpecificPostalAddress">
    <SpecificPostalAddress>
      <xsl:apply-templates select="../SpecificPostalAddress/Street" mode="copy"/>
    <xsl:apply-templates select="../SpecificPostalAddress/City" mode="copy"/>
    <xsl:apply-templates select="../SpecificPostalAddress/CitySuffix" mode="copy"/>
    <xsl:for-each select="../SpecificPostalAddress/PoliticalSubUnit_State"> 
    <xsl:if test="contains(@cdr:ref,'CDR')">
     <xsl:variable name="StateID" select="@cdr:ref"/>
     <xsl:variable name="StateInfo" select="document(concat('cdr:',$StateID,'/last'))"/>
   
     <PoliticalSubUnitRef><xsl:apply-templates select="$StateID"/></PoliticalSubUnitRef>
     <xsl:apply-templates     select="$StateInfo/PoliticalSubUnit/PoliticalSubUnitShortName" mode="copy"/>
     <xsl:apply-templates select="$StateInfo/PoliticalSubUnit/PoliticalSubUnitFullName" mode="copy"/> 

     </xsl:if>
     </xsl:for-each>

     <xsl:for-each select="../SpecificPostalAddress/Country">
     <xsl:if test="contains(@cdr:ref,'CDR')">
     <xsl:variable name="CtyID" select="@cdr:ref"/>
     <xsl:variable name="CtyInfo" select="document(concat('cdr:',$CtyID,'/lastp'))"/>
      <xsl:if test="$CtyInfo=''">
    <xsl:message              terminate = "yes">
    <xsl:text>Cannot resolve link </xsl:text>
    <xsl:value-of               select = "$CtyID"/>
    <xsl:text>for Country.</xsl:text>
    </xsl:message>
    </xsl:if>

      
     <xsl:apply-templates select="$CtyInfo/Country/CountryShortName" mode="copy"/>
    <CountryRef><xsl:value-of select="$CtyID"/></CountryRef>
    <xsl:apply-templates select="$CtyInfo/Country/CountryFullName" mode="copy"/> 
    <xsl:apply-templates select="$CtyInfo/Country/PostalCodePosition" mode="copy"/> 

    </xsl:if>
    </xsl:for-each>
    <xsl:apply-templates select="../SpecificPostalAddress/PostalCode_ZIP" mode="copy"/>
   </SpecificPostalAddress>
   </xsl:if>

    <xsl:if test="../PersonRole">
   <xsl:apply-templates select="../PersonRole" mode="copy"/>
   </xsl:if>

   <xsl:if test="../PersonTitle">
   <xsl:apply-templates select="../PersonTitle" mode="copy"/>
   </xsl:if>

   <xsl:if test="../SpecificPhone">
   <xsl:apply-templates select="../SpecificPhone" mode="copy"/>
   </xsl:if>

   <xsl:if test="../SpecificTollFreePhone">
   <xsl:apply-templates select="../SpecificTollFreePhone" mode="copy"/>
   </xsl:if>

   <xsl:if test="../SpecificFax">
   <xsl:apply-templates select="../SpecificFax" mode="copy"/>
   </xsl:if>

   <xsl:if test="../SpecificEmail">
   <xsl:if test="not(../SpecificEmail/@Public='No')">
   <xsl:apply-templates select="../SpecificEmail" mode="copy"/>
   </xsl:if>
   </xsl:if>

   <xsl:if test="../SpecificWebSite">
   <xsl:apply-templates select="../SpecificWebSite" mode="copy"/>
   </xsl:if>

   <xsl:if test="../ComplexAffiliation">
   <ComplexAffiliation>
   <xsl:for-each select="../ComplexAffiliation/Organization">
   <Organization>
   <xsl:if test="contains(@cdr:ref,'CDR')">
   <xsl:variable name="COrgID" select="@cdr:ref"/>
   <xsl:variable name="COrgInfo" select="document(concat('cdr:',$COrgID,'/last'))"/>
    <xsl:if test="$COrgInfo=''">
    <xsl:message              terminate = "yes">
    <xsl:text>Cannot resolve link </xsl:text>
    <xsl:value-of               select = "$COrgID"/>
    <xsl:text> for Organization.</xsl:text>
    </xsl:message>
    </xsl:if>

  <OfficialName><xsl:apply-templates select="$COrgInfo/Organization/OrganizationNameInformation/OfficialName/Name" mode="copy"/></OfficialName>
  <xsl:apply-templates select="$COrgInfo/Organization/OrganizationNameInformation/ShortName" mode="copy"/>

   </xsl:if>
   <xsl:apply-templates select="../RoleAtAffiliatedOrganization" mode="copy"/>
   </Organization>
   </xsl:for-each>
   </ComplexAffiliation>
   </xsl:if>
   </xsl:if>
   </OtherPracticeLocation>
   </xsl:for-each>
   </PersonLocations>

<!-- ================================================================
                 copy status information and PDQ key 
     ================================================================= -->
    <Status>
    <xsl:apply-templates select="Status/CurrentStatus" mode="copy"/>
    <xsl:apply-templates select="Status/EnteredBy" mode="copy"/>
    <xsl:apply-templates select="Status/EntryDate" mode="copy"/>
    </Status>
    <xsl:for-each select="DatedAction">
    <DatedAction><ActionDescription><xsl:value-of select="ActionDescription"/></ActionDescription>
    <ActionDate><xsl:value-of select="ActionDate"/></ActionDate></DatedAction>
    </xsl:for-each>
    <xsl:apply-templates select="DateLastModified" mode="copy"/>
    <xsl:apply-templates select="PdqKey" mode="copy"/> 
    <xsl:apply-templates select="Status/CurrentStatus" mode="copy"/>
    </xsl:copy>
    </xsl:template>

<!-- ==================================================================
     Template rule used to do XML to XML transformations which
     copies any attribute node, or node that is child of of something 
     =================================================================== -->

       <xsl:template match="@*|node()" mode="copy">
       <xsl:copy>
       <xsl:apply-templates select="@*" mode="copy"/>
       <xsl:apply-templates mode="copy"/>
       </xsl:copy> 
      </xsl:template>
   
      <!-- template to upcode parentname -->

   <xsl:template name="upcode-parentname">
   <xsl:param name="ParentID"/>
   <xsl:param name="ParentDoc"/> 

<OrganizationName>
  <xsl:value-of select="$ParentDoc/Organization/
                        OrganizationNameInformation/
                        OfficialName/Name"/>
</OrganizationName>
 
   <xsl:if      test="$ParentDoc/Organization/
                      OrganizationParent/ParentOrganization/@cdr:ref">
   <xsl:variable name="nextParentID" 
                 select="$ParentDoc/Organization/
                         OrganizationParent/ParentOrganization/@cdr:ref"/>
   <xsl:variable name="nextParentDoc" select="document(concat
                                            ('cdr:',$nextParentID,'/last'))"/>
                             <xsl:if test="$nextParentDoc=''">
    <xsl:message              terminate = "yes">
    <xsl:text>Cannot resolve link </xsl:text>
    <xsl:value-of               select = "$nextParentID"/>
    <xsl:text> for Parent Organization.</xsl:text>
    </xsl:message>
    </xsl:if>


    <xsl:call-template   name="upcode-parentname">
    <xsl:with-param      name="ParentID"
                               select="$nextParentID"/>
    <xsl:with-param      name="ParentDoc"
                               select="$nextParentDoc"/>
    </xsl:call-template>
   </xsl:if>
   </xsl:template>


   </xsl:transform>]]>
</CdrDocXml>
</CdrDoc>