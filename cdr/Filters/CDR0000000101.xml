<CdrDoc Type='Filter' Id='CDR0000000101'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Denormalization Filter (1/1): Terminology</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<!-- ==================================================================
        Filter to Denormalize Terminology XML
     ================================================================== -->
  <xsl:transform             xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr" 
               exclude-result-prefixes = "cdr">
   
  <xsl:output                   method = "xml" 
                  omit-xml-declaration = "no" 
                                indent = "yes"/>

  <xsl:template match="Term">
    <xsl:copy>

 <!-- ==================================================================
          copy control information and generate current date 
      ================================================================== -->

<xsl:apply-templates select="document('cdrutil:/docid')" mode="copy"/>
<xsl:apply-templates select="document('cdr:/*/CdrCtl')" mode="copy"/>

<!-- ====================================================================
                   copy name data elements 
     ==================================================================== -->
<xsl:apply-templates select="PreferredName" mode="copy"/>
<xsl:if test="OtherName">
<xsl:apply-templates select="OtherName" mode="copy"/>
</xsl:if>

<xsl:apply-templates select="Definition" mode="copy"/>



<!-- =====================================================================
                   copy term type data elements 
     =================================================================== -->

<xsl:apply-templates select="TermType" mode="copy"/>
<xsl:for-each select="SemanticType">
<xsl:variable name="Ref" select="@cdr:ref"/>
 <xsl:variable name="SemTypeID" select="@cdr:ref"/>
 <xsl:variable name="SemTypeInfo" select="document(concat('cdr:',$SemTypeID,'/lastp'))"/>
 <SemanticType ref="{$Ref}"><xsl:apply-templates select="$SemTypeInfo/Term/PreferredName"/></SemanticType>
</xsl:for-each>
<!-- copy term relationship data elements -->
<xsl:if test="TermRelationship">
<TermRelationship>
<xsl:for-each select="TermRelationship/ParentTerm/TermId">
  <xsl:if test="contains(@cdr:ref,'CDR')">
 <ParentTerm>
 <xsl:apply-templates select="@cdr:ref" mode="copy"/>
 <xsl:variable name="TermID" select="@cdr:ref"/>
 <xsl:variable name="TermInfo" select="document(concat('cdr:',$TermID,'/lastp'))"/>
  
 <xsl:apply-templates select="$TermInfo/Term/PreferredName" mode="copy"/>
 <xsl:apply-templates select="$TermInfo/Term/PdqKey" mode="copy"/>
 <xsl:apply-templates select="../ParentType" mode="copy"/>
 </ParentTerm>
</xsl:if>
 </xsl:for-each>
<xsl:for-each select="TermRelationship/RelatedTerm/TermId">
  <xsl:if test="contains(@cdr:ref,'CDR')">
  <RelatedTerm>
  <xsl:apply-templates select="@cdr:ref" mode="copy"/>
  <xsl:variable name="TermID" select="@cdr:ref"/>
 <xsl:variable name="TermInfo" select="document(concat('cdr:',$TermID,'/lastp'))"/>
   
 <xsl:apply-templates select="$TermInfo/Term/PreferredName" mode="copy"/>
 <xsl:apply-templates select="$TermInfo/Term/PdqKey" mode="copy"/>
 <xsl:apply-templates select="../RelationshipType" mode="copy"/>
 
 </RelatedTerm>
</xsl:if>
</xsl:for-each>
</TermRelationship>
</xsl:if>

<!-- =====================================================================
            copy status, Menu Information, and PdqKey data elements
     ===================================================================== --> 
        <xsl:apply-templates select="TermStatus" mode="copy"/>
         <xsl:apply-templates select="Comment" mode="copy"/>
         

        <MenuInformation>
         <xsl:for-each select="MenuInformation/MenuItem">
          <MenuItem>
          <xsl:if test="@SortOrder">
         <xsl:attribute name="SortOrder">
         <xsl:value-of select="@SortOrder"/>
         </xsl:attribute>
         </xsl:if>
        <xsl:apply-templates select="MenuType" mode="copy"/>
          <xsl:if test="MenuParent">
          <xsl:for-each select="MenuParent">
          <MenuParent>
          <xsl:attribute name="cdr:ref">
          <xsl:value-of select="@cdr:ref"/>
          </xsl:attribute>  
         <xsl:variable name="MenuID" select="@cdr:ref"/>
         <xsl:variable name="MenuInfo" select="document(concat('cdr:',$MenuID,'/lastp'))"/>
        <xsl:choose>
        <xsl:when test="DisplayName=$MenuInfo/Term/MenuInformation/MenuItem/DisplayName">
      <DisplayName><xsl:apply-templates select="$MenuInfo/Term/MenuInformation/MenuItem/DisplayName"/></DisplayName>
        </xsl:when>
        <xsl:otherwise>
       <DisplayName><xsl:apply-templates select="$MenuInfo/Term/PreferredName"/></DisplayName>
        </xsl:otherwise>
        </xsl:choose>
        </MenuParent>
        </xsl:for-each>
        </xsl:if>
        <xsl:apply-templates select="DisplayName" mode="copy"/>
        <xsl:apply-templates select="MenuStatus" mode="copy"/>
        <xsl:apply-templates select="EnteredBy" mode="copy"/>
        <xsl:apply-templates select="EntryDate" mode="copy"/>
         <xsl:apply-templates select="Comment" mode="copy"/>

        </MenuItem>
       </xsl:for-each> 
       </MenuInformation>
     
      <xsl:apply-templates select="DateLastModified" mode="copy"/>
       <xsl:apply-templates select="PdqKey" mode="copy"/>
       </xsl:copy>
       </xsl:template>

 <!-- ===================================================================
      Template rule used to do XML to XML transformations which
      copies any attribute node, or node that is child of of something
     ===================================================================== -->
 
       <xsl:template match="@*|node()" mode="copy">
       <xsl:copy>
       <xsl:apply-templates select="@*" mode="copy"/>
       <xsl:apply-templates mode="copy"/>
       </xsl:copy> 
       </xsl:template>
<!-- ===================================================================
      We only want to drop cdr:id under DefintionText. If we need to drop
      cdr:id elsewhere we will modify this template.   
    ===================================================================== -->
   <xsl:template match="DefinitionText/@cdr:id"
                  mode="copy"/>

</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>