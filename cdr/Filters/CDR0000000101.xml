<CdrDoc Type='Filter' Id='CDR0000000101'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Denormalization Filter (1/1): Terminology</DocTitle>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<!-- ==================================================================
        Filter to Denormalize Terminology XML
     ================================================================== -->

  <xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                 version="1.0"
         xmlns:cdr="cips.nci.nih.gov/cdr">
    <xsl:output method="xml" omit-xml-declaration="no"/>
        <xsl:template match="Term">
   <xsl:copy>

 <!-- ==================================================================
          copy control information and generate current date 
      ================================================================== -->

<xsl:apply-templates select="document('cdrutil:/docid')" mode="copy"/>
<xsl:apply-templates select="document('cdrx:/*/CdrCtl')" mode="copy"/>

<!-- ====================================================================
                   copy name data elements 
     ==================================================================== -->
<xsl:apply-templates select="PreferredName" mode="copy"/>
<xsl:if test="OtherName">
<xsl:apply-templates select="OtherName" mode="copy"/>
</xsl:if>

<!-- =================================================================
                     copy source information 
     ================================================================== -->
 
<xsl:if test="SourceInformation">
<xsl:apply-templates select="SourceInformation" mode="copy"/>
</xsl:if>
<xsl:if test="VocabularySource">
<xsl:apply-templates select="VocabularySource" mode="copy"/>
</xsl:if>
<xsl:if test="DefinitionSource">
<xsl:apply-templates select="DefinitionSource" mode="copy"/>
</xsl:if>

<!-- =====================================================================
                   copy term type data elements 
     =================================================================== -->

<xsl:apply-templates select="TermType" mode="copy"/>
<xsl:for-each select="SemanticType">
<xsl:variable name="Ref" select="@cdr:ref"/>
 <xsl:variable name="SemTypeID" select="@cdr:ref"/>
 <xsl:variable name="SemTypeInfo" select="document(concat('cdrx:',$SemTypeID,'/last'))"/>
<SemanticType ref="{$Ref}"><xsl:value-of select="$SemTypeInfo/Term/PreferredName"/></SemanticType>
</xsl:for-each>
<!-- copy term relationship data elements -->
<xsl:if test="TermRelationship">
<TermRelationship>
<xsl:for-each select="TermRelationship/ParentTerm/TermId">
  <xsl:if test="contains(@cdr:ref,'CDR')">
 <ParentTerm>
 <xsl:apply-templates select="@cdr:ref" mode="copy"/>
 <xsl:variable name="TermID" select="@cdr:ref"/>
 <xsl:variable name="TermInfo" select="document(concat('cdrx:',$TermID,'/lastp'))"/>
 <xsl:apply-templates select="$TermInfo/Term/PreferredName" mode="copy"/>
 <xsl:apply-templates select="$TermInfo/Term/PdqKey" mode="copy"/>
 <xsl:apply-templates select="../ParentType" mode="copy"/>
 </ParentTerm>
</xsl:if>
 </xsl:for-each>
<xsl:for-each select="TermRelationship/RelatedTerm/TermId">
  <xsl:if test="contains(@cdr:ref,'CDR')">
  <RelatedTerm>
  <xsl:apply-templates select="@cdr:ref" mode="copy"/>
  <xsl:variable name="TermID" select="@cdr:ref"/>
 <xsl:variable name="TermInfo" select="document(concat('cdrx:',$TermID,'/lastp'))"/>
 <xsl:apply-templates select="$TermInfo/Term/PreferredName" mode="copy"/>
 <xsl:apply-templates select="$TermInfo/Term/PdqKey" mode="copy"/>
 <xsl:apply-templates select="../RelationshipType" mode="copy"/>
 
 </RelatedTerm>
</xsl:if>
</xsl:for-each>
</TermRelationship>
</xsl:if>

<!-- =====================================================================
                     copy status data elements
     ===================================================================== --> 

<xsl:apply-templates select="TermStatus" mode="copy"/>
<xsl:apply-templates select="PdqKey" mode="copy"/>
</xsl:copy>
</xsl:template>

<!-- =================================================================
              Copy DateFirstPublished and DateLastModified
     ================================================================== -->

 <xsl:if test="CdrDocCtl/FirstPub/Date">
 <DateFirstPublished><xsl:value-of select="substring-before(CdrDocCtl/FirstPub/Date,'T')"/></DateFirstPublished>
</xsl:if>
<xsl:if test="DateLastModified">
<xsl:apply-templates select="DateLastModified" mode="copy"/>
</xsl:if>


 <!-- ===================================================================
      Template rule used to do XML to XML transformations which
      copies any attribute node, or node that is child of of something
     ===================================================================== -->
 
       <xsl:template match="@*|node()" mode="copy">
       <xsl:copy>
       <xsl:apply-templates select="@*" mode="copy"/>
       <xsl:apply-templates mode="copy"/>
       </xsl:copy> 
       </xsl:template>

</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>