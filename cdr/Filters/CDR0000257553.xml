<CdrDoc Type='Filter' Id='CDR0000257553'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Glossary Term Name with Concept QC Report Filter</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml      version = "1.0"?>
<!--
================================================================
$Id: CDR0000257553.xml,v 1.3 2009-02-02 19:32:20 venglisc Exp $

Filter to display Glossary Term Name including Concept
Volker Englisch         2008-11-13

$Log: not supported by cvs2svn $
================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "html"
                              encoding = "UTF-8"/>

 <xsl:include   href = "cdr:name:Module: Attribute Sets"/>
 <xsl:include   href = "cdr:name:Module: InLine Markup Formatter"/>
 <xsl:include   href = "cdr:name:Module: STYLE Default"/> 
 <xsl:include   href = "cdr:name:Module: STYLE RS Insertion Deletion"/> 

 <xsl:variable                    name = "docID"
                                select = "document('cdrutil:/docid')"/>
 <xsl:variable                    name = "intID"
                                select = "concat('', 
                                           number(
                                           substring-after($docID, 'CDR')))"/>
 <xsl:variable                    name = "whoAmI"
                                select = "'GlossaryTermName'"/>
 <xsl:variable                    name = "sqlQuery">
     SELECT active_status
       FROM document 
      WHERE id = ?
 </xsl:variable>

 <!-- 
 Note: Don't perform a normalize-space here since it would convert
       the resulting node into a string
 ================================================================== -->
 <xsl:variable                    name = "queryRows"
                                select = "document(
                                           concat('cdrutil:/sql-query/',
                                                   $sqlQuery,
                                                   '~',
                                                   $intID))"/>
 <xsl:variable                    name = "isBlocked">
  <xsl:value-of                 select = "$queryRows
                                          /SqlResult
                                          /row/col"/>
 </xsl:variable>


 <!-- 
 ====================================================================
 This program is a filter to create a Glossary term Concept QC Report 
 ==================================================================== -->
 <xsl:template                   match = "/">
  <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
  <HTML>
   <HEAD>
    <xsl:variable                 name = "cdrdocs" 
                                select = "document('cdrx:/*/CdrCtl')"/>
    <TITLE>
     <xsl:value-of              select = "concat('CDR', 
                                           number(
                                           substring-after($docID, 'CDR')))"/>
     <xsl:text>: </xsl:text>
     <xsl:value-of              select = "substring-before(
                                           concat($cdrdocs/CdrDocCtl/
                                                  DocTitle, ';'), ';')"/> 
    </TITLE>

    <STYLE type='text/css'>
     <xsl:call-template           name = "defaultStyle"/>  
     <xsl:call-template           name = "rsInsertionDeletionStyle"/>

     .attribute  { font-weight: normal; 
                   font-style: italic; 
                   background-color: #FFFFFF; }
     .big        { font-size: 14pt; 
                   font-weight: bold; }
     .name       { color: blue;
                   font-weight: bold;
                   background-color: #EEEEEE; }
     .blocked    { color: red; }
     table       { empty-cells: show; }
     td.cellDef     { border: 1px solid grey; padding: 2px; }
    </STYLE>
   </HEAD>
   <BASEFONT                      FACE = 'Arial, Helvetica, sans-serif' /> 

   <xsl:apply-templates         select = "GlossaryTermName"/>

  </HTML>
 </xsl:template>


 <!-- 
 ==============================================================  
 Generate the HTML for the glossary term QC Report
 ============================================================== -->
 <xsl:template                   match = "GlossaryTermName">
  <BODY>
  <!-- 
  =============================================================
  Display Report heading and subheading 
  ============================================================= -->
  <span class="big">
   <center>
    <xsl:text>Glossary Term Name with Concept</xsl:text>
    <br/>
    <xsl:text>QC Report</xsl:text>
   </center>
  </span>
  <b>
   <center>
    <xsl:value-of               select = 'document(concat("cdrutil:/date/",
                                                          "%25B %25#d, %25Y ",
                                                          "%25#I:%25M%25p"))'/>
   </center>
  </b>
  <p/>

  <!-- 
  ====================================================================
  Display CDR ID
  ==================================================================== -->
  <span class="big">
   <xsl:choose>
    <xsl:when                     test = "not($isBlocked = 'I')">
     <xsl:value-of              select = "concat('CDR', 
                                          number(
                                          substring-after($docID, 'CDR')))"/>
    </xsl:when>
    <xsl:otherwise>
     <span class="blocked">
      <xsl:value-of             select = "concat('CDR', 
                                          number(
                                          substring-after($docID, 'CDR')))"/>

      <xsl:text> [BLOCKED]</xsl:text>
     </span>
    </xsl:otherwise>
   </xsl:choose>
  </span>
  <p/>

  <!--
  ===============================================================
  Display English Glossary Term Name Information with Concept
  =============================================================== -->
  <xsl:for-each                 select = "GlossaryTermConcept/
                                          TermDefinition">
   <span class="big">
    <xsl:text>English - </xsl:text>
    <xsl:value-of               select = "Audience"/>
   </span>
   <xsl:apply-templates         select = "../../TermName">
    <xsl:with-param               name = "termAudience"
                                select = "Audience"/>
   </xsl:apply-templates>
  </xsl:for-each>

  <!--
  Adding remaining GlossaryTermName information
  =============================================== -->
  <table        xsl:use-attribute-sets = "table">
   <xsl:if                        test = "TermName/
                                          TermPronunciation">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Term Pronunciation</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:apply-templates      select = "TermName/
                                          TermPronunciation"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "TermNameStatus">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Status</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TermNameStatus"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "TermNameStatusDate">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Status Date</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TermNameStatusDate"/>
     </td>
    </tr>
   </xsl:if>
  </table>
  <br/>
  <hr width="50%"/>
  <br/>

  <!--
  Display Media shared between English and Spanish
  ======================================================== -->
  <table        xsl:use-attribute-sets = "table">
   <xsl:if                        test = "GlossaryTermConcept/
                                          MediaLink">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Media Link</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:apply-templates      select = "GlossaryTermConcept/
                                         MediaLink/
                                         MediaID"
                                  mode = "gtc"/>
     </td>
    </tr>
   </xsl:if>
  </table>

  <!--
  ===============================================================
  Display Spanish Glossary Term Name Information with Concept
  =============================================================== -->
  <xsl:if                         test = "TranslatedName">

   <xsl:for-each                select = "GlossaryTermConcept/
                                          TranslatedTermDefinition">
    <span class="big">
     <xsl:text>Spanish - </xsl:text>
     <xsl:value-of              select = "Audience"/>
    </span>
    <xsl:apply-templates        select = "../../
                                         TranslatedName[not(@NameType)]">
     <xsl:with-param              name = "termAudience"
                                select = "Audience"/>
    </xsl:apply-templates>
   </xsl:for-each>
  </xsl:if>

  <br/>

  </BODY>  
 </xsl:template>

  
 <!--
 ==================================================================
 Template to display individual TermDefinitions (English)
 ================================================================== -->
 <xsl:template                   match = "TermName">
  <xsl:param                      name = "termAudience"/>

  <table        xsl:use-attribute-sets = "table">
   <tr class="name">
    <td         xsl:use-attribute-sets = "cell1of2" class="cellDef">
     <b>Name</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2" class="cellDef">
     <xsl:apply-templates       select = "TermNameString"/>
    </td>
   </tr>

   <xsl:apply-templates         select = "//GlossaryTermConcept">
    <xsl:with-param               name = "termAudience"
                                select = "$termAudience"/>
   </xsl:apply-templates>
  </table>
  <p/>
 </xsl:template>


 <!--
 ==================================================================
 Template to display the translated Term names
 ================================================================== -->
 <xsl:template                   match = "TranslatedName">
  <xsl:param                      name = "termAudience"/>
  <table        xsl:use-attribute-sets = "table">
   <tr class="name">
    <td         xsl:use-attribute-sets = "cell1of2" class="cellDef">
     <b>Name</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2" class="cellDef">
     <xsl:apply-templates       select = "TermNameString"/>
     <xsl:if                      test = "../TranslatedName[@NameType]">
      <xsl:text> [alternate:</xsl:text>
      <xsl:for-each             select = "../TranslatedName[@NameType]">
       <xsl:text> </xsl:text>
       <xsl:value-of            select = "TermNameString"/>
      </xsl:for-each>
      <xsl:text>]</xsl:text>
     </xsl:if>
    </td>
   </tr>

   <xsl:apply-templates         select = "//GlossaryTermConcept">
    <xsl:with-param               name = "termAudience"
                                select = "$termAudience"/>
    <xsl:with-param               name = "lang"
                                select = "@language"/>
   </xsl:apply-templates>

  </table>     
      
  <table        xsl:use-attribute-sets = "table">
   <xsl:if                        test = "TranslatedNameStatus">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Status</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TranslatedNameStatus"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "TranslatedNameStatusDate">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Status Date</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TranslatedNameStatusDate"/>
     </td>
    </tr>
   </xsl:if>
  </table>
  <br/>
 </xsl:template>


 <!--
 =======================================================================
 Template for Admin Information Comments
 ======================================================================= -->
 <xsl:template                   match = "GlossaryTermConcept">
  <xsl:param                      name = "termAudience"/>
  <xsl:param                      name = "lang"
                                select = "'en'"/>
   <tr class="defTab">
    <td         xsl:use-attribute-sets = "cell1of2" class="cellDef">
     <b>Definition</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2" class="cellDef">
     <xsl:choose>
      <xsl:when                   test = "$lang = 'en'">
       <xsl:apply-templates     select = "TermDefinition
                                            [Audience = $termAudience]/
                                          DefinitionText"/>
      </xsl:when>
      <xsl:otherwise>
       <xsl:apply-templates     select = "TranslatedTermDefinition
                                            [Audience = $termAudience]/
                                          DefinitionText"/>
      </xsl:otherwise>
     </xsl:choose>
    </td>
   </tr>
   <tr class="defTab">
    <td><br/></td><td><br/></td>
   </tr>

  <xsl:if                         test = "TermDefinition/
                                          MediaLink">
   <tr>
    <td        xsl:use-attribute-sets = "cell1of2">
     <b>Media Link</b>
    </td>
    <td        xsl:use-attribute-sets = "cell2of2">
     <xsl:choose>
      <xsl:when                   test = "$lang = 'en'">
     <xsl:apply-templates      select = "TermDefinition/
                                          MediaLink/
                                          MediaID"
                                  mode = "gtc"/>
      </xsl:when>
      <xsl:otherwise>
     <xsl:apply-templates       select = "TranslatedTermDefinition/
                                          MediaLink/
                                          MediaID"
                                  mode = "gtc"/>
      </xsl:otherwise>
     </xsl:choose>

    </td>
   </tr>
  </xsl:if>
 
  <xsl:if                         test = "TermDefinition
                                            [Audience = $termAudience]/
                                          Dictionary">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Dictionary</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "TermDefinition
                                            [Audience = $termAudience]/
                                          Dictionary"/>
    </td>
   </tr>
  </xsl:if>
 </xsl:template>


 <!--
 ======================================================================
 Template to pick the right PlaceHolder text to insert in the 
 DefinitionText

 ====================================================================== -->
<!-- 
 <xsl:template                   match = "PlaceHolder">
  <xsl:variable                   name = "replace"
                                select = "@name"/>

  <xsl:choose>
  <xsl:when                       test = "@name = 'TERMNAME'">
   <xsl:value-of                select = "../../../../
                                          TermName/
                                          TermNameString"/>
  </xsl:when>
  <xsl:when                       test = "@name = 'CAPPEDTERMNAME'">
   <xsl:call-template             name = "convertCase">
    <xsl:with-param               name = "convString"
                                select = "substring(
                                           normalize-space(../../../../
                                          TermName/
                                          TermNameString), 1, 1)"/>
    <xsl:with-param               name = "convertTo"
                                select = "'proper'"/>
   </xsl:call-template>
   <xsl:value-of                select = "substring(
                                           normalize-space(../../../../
                                          TermName/
                                          TermNameString), 2)"/>
  </xsl:when>
  <xsl:when                       test = "../../
                                          ReplacementText[@name = $replace]">
   <xsl:value-of                select = "../../
                                          ReplacementText[@name = $replace]"/>
  </xsl:when>
  <xsl:otherwise>
   <xsl:value-of                select = "../../../../
                                          ReplacementText[@name = $replace]"/>
  </xsl:otherwise>
 </xsl:choose>
 </xsl:template>
-->


 <!--
 ======================================================================
 Template to display the Replacement text and PlaceHolders
 ====================================================================== -->
 <xsl:template                  match = "ReplacementText">
  <tr>
   <td>
    <xsl:value-of              select = "@name"/>
   </td>
   <td>
    <xsl:value-of              select = "."/>
   </td>
  </tr>
 </xsl:template>

 <!--
 ===================================================================
 We need to display the Glossary Term Name/Concept report with 
 insertion/deletion markup.
 =================================================================== -->
 <xsl:template                   match = "Insertion">
  <span class="insertapproved">
   <xsl:apply-templates/>
  </span>
 </xsl:template>

 <xsl:template                   match = "Deletion">
  <span class="deleteapproved">

   <xsl:apply-templates/>
  </span>

 </xsl:template>
</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>