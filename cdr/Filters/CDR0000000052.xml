<?xml version="1.0"?>

<xsl:transform       xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                     xmlns:cdr = "cips.nci.nih.gov/cdr"
                       version = "1.0">

 <!-- Passed in by the caller -->
 <xsl:param               name = "fragId"/>

 <!-- Start at the top.  We only want PrivatePractice and
      OtherPracticeLocation elements. 
   -->
 <xsl:template           match = "/">
  <Address>
   <xsl:apply-templates select = "/Person/PersonNameInformation"/>
   <xsl:apply-templates select = "//PrivatePractice[@cdr:id = $fragId]"/>
   <xsl:apply-templates select = "//OtherPracticeLocation[@cdr:id = $fragId]"/>
  </Address>
 </xsl:template>

 <!-- Identity rule, copies everything to the output tree. -->
 <xsl:template           match = "@*|node()">
  <xsl:copy>
   <xsl:apply-templates select = "@*|node()"/>
  </xsl:copy>
 </xsl:template>

 <xsl:template           match="PersonNameInformation">
  <Name>
   <xsl:apply-templates select = "node()"/>
  </Name>
 </xsl:template>

 <!-- Extract the address information for the PrivatePractice element -->
 <xsl:template           match = "PrivatePractice|Location|SpecificContact">
  <!--<xsl:copy>-->
   <xsl:apply-templates  select = "node()"/>
  <!--</xsl:copy>-->
 </xsl:template>

 <!-- Extract the address information for the OtherPracticeLocation element -->
 <xsl:template           match = "OtherPracticeLocation">
  <xsl:choose>
   <xsl:when              test = "SpecificContact">
    <xsl:apply-templates 
                        select = "SpecificContact"/>
   </xsl:when>
   <xsl:otherwise>
    <xsl:variable         name = "fragRef"
                        select = "OrganizationLocation/@cdr:ref"/>
    <xsl:variable         name = "orgDoc"
                        select = "document(concat('cdrx:', $fragRef))"/>
    <xsl:variable         name = "fragId"
                        select = "substring-after($fragRef, '#')"/>
    <xsl:apply-templates
                        select = "$orgDoc/Organization/OrganizationLocations/Location[@cdr:id = $fragId]"/>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>

</xsl:transform>
