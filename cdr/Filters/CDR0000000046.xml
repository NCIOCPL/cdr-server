<CdrDoc Type='Filter' Id='CDR0000000046'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Denormalization Filter (5/5): Summary</DocTitle>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="1.0"
               xmlns:cdr="cips.nci.nih.gov/cdr">
 <xsl:strip-space elements="*"/>
  <xsl:output method="xml" omit-xml-declaration="no"/>
<!-- ====================================================================
     Filter to create XML data for HP summary to add references to end of
     each summary section for vendor publishing
     ==================================================================== -->
<!-- Written by Cheryl Burg 8-2-2001 -->
<!-- Modified to make changes to reference formats 6/26-7/30/2002-->
<!-- =====================================================================
     Select data elements to be copied and add tags when an incomplete
     node is copied 
     This filter resolves the CDR link provided for the citation and
      formats the citations at the end of each summary section
     ==================================================================== -->
 
  <xsl:template match="*">
  <xsl:copy>
<DocId><xsl:value-of select="document('cdrutil:/docid')"/></DocId>
<xsl:apply-templates/>
 </xsl:copy>
 </xsl:template>


     

<!-- =================================================================
                  add refidx to CitationReference elements 
     ================================================================== -->

  <xsl:template match="Reference">
    <xsl:variable name="ref">
      <xsl:value-of select="@cdr:ref"/>
    </xsl:variable>
    <xsl:copy>
       <xsl:apply-templates select="@*"/>
       <xsl:if test="contains($ref,'CDR')">
         <xsl:variable name="CitInfo" 
                     select="document(concat('cdr:',$ref,'/lastp'))"/>
         <xsl:variable name="ProtInfo" 
                     select="document(concat('cdr:',$ref,'/lastp'))"/>

<!-- ================================================================
          test to see if the citation is a PDQ citation type
     =============================================================== -->
 
 <xsl:if test="$CitInfo/Citation/PDQCitation">
  <xsl:if test="$CitInfo/Citation/PDQCitation/CancerLitID">
<xsl:for-each select="$CitInfo/Citation/PDQCitation/CancerLitID">
<xsl:attribute name="CancerLitID">
<xsl:value-of select="."/>
</xsl:attribute>
</xsl:for-each>
</xsl:if>

  <xsl:for-each select="$CitInfo/Citation/PDQCitation">
<xsl:variable name="Authors" select="Author"/>
<xsl:choose>
<xsl:when test="contains($Authors,'null')">
<xsl:text> </xsl:text>
</xsl:when>
<xsl:when test="AuthorList/Author/CollectiveName">
<xsl:value-of select="AuthorList/Author/CollectiveName"/><xsl:text>: </xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:for-each select="AuthorList/Author">
<xsl:value-of select="LastName"/><xsl:text> </xsl:text>
<xsl:value-of select="FirstName"/><xsl:text/>
<xsl:if test="position() !=last()"><xsl:text>, </xsl:text></xsl:if>
<xsl:if test="position()=last()">
<xsl:if test="not($CitInfo/Citation/PDQCitation/AuthorList/@Editors='Yes')">
<xsl:if test="$CitInfo/Citation/PDQCitation/AuthorList/@Complete='No'">
<xsl:text>, et al.: </xsl:text>
</xsl:if>
<xsl:if test="$CitInfo/Citation/PDQCitation/AuthorList/@Complete='Yes'">
<xsl:text>: </xsl:text>
</xsl:if>
</xsl:if>
<xsl:if test="$CitInfo/Citation/PDQCitation/AuthorList/@Editors='Yes'">
<xsl:if test="$CitInfo/Citation/PDQCitation/AuthorList/@Complete='No'">
<xsl:text>, et al.</xsl:text>
</xsl:if>
<xsl:if test="$CitInfo/Citation/PDQCitation/AuthorList/@Complete='Yes'">
<xsl:text> </xsl:text>
</xsl:if>
<xsl:if test="position() &gt; 1">
<xsl:if test="$CitInfo/Citation/PDQCitation/AuthorList/@Complete='No'">
<xsl:text>, eds.: </xsl:text>
</xsl:if>
<xsl:if test="$CitInfo/Citation/PDQCitation/AuthorList/@Complete='Yes'">
<xsl:text>, eds.: </xsl:text>
</xsl:if>
</xsl:if>
<xsl:if test="position() &lt; 2">
<xsl:text>, ed.: </xsl:text>
</xsl:if>
</xsl:if>
</xsl:if>
</xsl:for-each>
</xsl:otherwise>
</xsl:choose>
<xsl:value-of select="CitationTitle"/><xsl:text>.</xsl:text>
<xsl:if test="$CitInfo/Citation/PDQCitation/CitationType='Abstract'">
<xsl:text> [Abstract] </xsl:text>
</xsl:if>
<xsl:text> </xsl:text>


<xsl:for-each select="PublicationDetails">
 
 <xsl:choose>
  <xsl:when test="contains(PublishedIn/@cdr:ref,'CDR')">
  <xsl:variable name="RefID" select="PublishedIn/@cdr:ref"/>
  <!--<xsl:value-of select="$RefID"/>-->
 <xsl:if test="contains($RefID,'CDR')">
  <xsl:variable name="RefInfo" 
              select="document(concat('cdr:',$RefID,'/lastp'))"/>
  
 <!--<xsl:value-of select="$RefInfo"/>-->
<!-- <xsl:value-of select="$RefInfo/Citation/PDQCitation/CitationTitle"/>
 <xsl:text> </xsl:text>-->
<xsl:if test="$RefInfo/Citation/PDQCitation/CitationType='Book' or $RefInfo/Citation/PDQCitation/CitationType='Book [Internet]'">
<xsl:variable name="book" select="RefInfo/Citation/PDQCitation/CitationType"/>
<xsl:if test="AuthorList/Author/CollectiveName">
<xsl:value-of select="$RefInfo/Citation/PDQCitation/AuthorList/Author/CollectiveName"/>
<xsl:text>: </xsl:text>
</xsl:if>
<xsl:text>In: </xsl:text>
</xsl:if>

 <xsl:if test="$RefInfo/Citation/PDQCitation/CitationType='Book' or   $RefInfo/Citation/PDQCitation/CitationType='Book [Internet]' ">
<xsl:for-each select="$RefInfo/Citation/PDQCitation/AuthorList/Author">
<xsl:if test="not(CollectiveName)">
<xsl:value-of select="LastName"/><xsl:text> </xsl:text>
<xsl:value-of select="FirstName"/>
<xsl:if test="position()!=last()">
<xsl:text>, </xsl:text>
</xsl:if>
<xsl:if test="position()=last() and $RefInfo/Citation/PDQCitation/AuthorList/@Complete='Yes'">
<xsl:choose>
<xsl:when test="$RefInfo/Citation/PDQCitation/AuthorList/@Editors='Yes'">
<xsl:text>, </xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>: </xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:if>
 

<xsl:if test="position()=last() and $RefInfo/Citation/PDQCitation/AuthorList/@Complete='No'">
<xsl:text>, </xsl:text>
</xsl:if>

</xsl:if>
<xsl:if test="CollectiveName">
<xsl:value-of select="CollectiveName"/>
</xsl:if>
<!--<xsl:if test="position() !=last()">,&#xa0;</xsl:if>-->
<xsl:if test="position()=last()">
<xsl:if test="not($RefInfo/Citation/PDQCitation/AuthorList/@Editors='Yes')">
<xsl:if test="$RefInfo/Citation/PDQCitation/AuthorList/@Complete='No'">
<xsl:text>et al.: </xsl:text>
</xsl:if>
<xsl:if test="$RefInfo/Citation/PDQCitation/AuthorList/@Complete='Yes'">
<xsl:if test="$RefInfo/Citation/PDQCitation/AuthorList/@Editors='Yes'">
<xsl:text> eds.: </xsl:text>
</xsl:if>
<xsl:if test="CollectiveName">
<xsl:text>:  </xsl:text>
</xsl:if>

</xsl:if>
</xsl:if>
<xsl:if test="$RefInfo/Citation/PDQCitation/AuthorList/@Editors='Yes'">
<xsl:if test="$RefInfo/Citation/PDQCitation/AuthorList/@Complete='No'">
<!--<xsl:text>et al.,eds.</xsl:text>-->
<xsl:text>et al.,</xsl:text>
</xsl:if>
<xsl:if test="$RefInfo/Citation/PDQCitation/AuthorList/@Complete='Yes'">
<xsl:text> </xsl:text>
</xsl:if>
<xsl:if test="position() &gt; 1">
<xsl:text> eds.: </xsl:text>
</xsl:if>
<xsl:if test="position() &lt; 2">
<xsl:text> eds.: </xsl:text>
</xsl:if>
</xsl:if>
</xsl:if>
</xsl:for-each>
</xsl:if>
<xsl:value-of select="$RefInfo/Citation/PDQCitation/CitationTitle"/>

<xsl:if test="not($RefInfo/Citation/PDQCitation/CitationType='Journal' or $RefInfo/Citation/PDQCitation/CitationType='Proceeding')">
<xsl:text>.</xsl:text>
<xsl:text> </xsl:text>
</xsl:if>

<xsl:if test="$RefInfo/Citation/PDQCitation/CitationType='Journal' or $RefInfo/Citation/PDQCitation/CitationType='Proceeding'">
<xsl:text> </xsl:text>
</xsl:if>


<!--</xsl:if>
</xsl:if>
<xsl:value-of select="$RefInfo/Citation/PDQCitation/PublicationDetails/PublishedIn"/><xsl:text/>-->
 
<xsl:value-of select="$RefInfo/Citation/PDQCitation/PublicationDetails/OtherPublicationInformation"/><xsl:text/>

<xsl:if test="$RefInfo/Citation/PDQCitation/CitationType='Book' or $RefInfo/Citation/PDQCitation/CitationType='Book [Internet]'">
 <xsl:text>, </xsl:text>
 </xsl:if>
  </xsl:if>
 </xsl:when>
 </xsl:choose>
  </xsl:for-each>
<xsl:choose>
<xsl:when test="PublicationDetails/OtherPublicationInformation/ExternalRef">
<xsl:copy-of select="PublicationDetails/OtherPublicationInformation"/><xsl:text/>
<xsl:text>. </xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:if test="PublicationDetails/OtherPublicationInformation">
<xsl:value-of select="PublicationDetails/OtherPublicationInformation"/><xsl:text/>
<xsl:text>. </xsl:text>
</xsl:if>
</xsl:otherwise>
</xsl:choose>


<!--<xsl:element name="ExternalRef">
<xsl:attribute name="cdr:xref"><xsl:value-of select="PublicationDetails/OtherPublicationInformation/ExternalRef/@cdr:xref"/>
</xsl:attribute>
<xsl:value-of select="PublicationDetails/OtherPublicationInformation/ExternalRef"/>
</xsl:element>-->
</xsl:for-each>
</xsl:if>
 <!-- ==================================================================
            test to determine if citation reference is a pubmed record 
      =================================================================== -->

<xsl:if test="$CitInfo/Citation/PubmedArticle">
<xsl:if test="$CitInfo/Citation/PubmedArticle/MedlineCitation/MedlineID">
<xsl:for-each select="$CitInfo/Citation/PubmedArticle/MedlineCitation/MedlineID">
<xsl:attribute name="MedlineID">
<xsl:value-of select="."/>
</xsl:attribute>
</xsl:for-each>
</xsl:if>

<xsl:if test="$CitInfo/Citation/PubmedArticle/MedlineCitation/PMID">
<xsl:for-each select="$CitInfo/Citation/PubmedArticle/MedlineCitation/PMID">
<xsl:attribute name="PMID">
<xsl:value-of select="."/>
</xsl:attribute>
</xsl:for-each>
</xsl:if>

<xsl:if test="$CitInfo/Citation/PubmedArticle/MedlineCitation/Article/AuthorList">

<xsl:for-each

select="$CitInfo/Citation/PubmedArticle/MedlineCitation/Article/AuthorList/Author">
<xsl:variable name="Tnodes" select="count($CitInfo/Citation/PubmedArticle/MedlineCitation/Article/AuthorList/Author)"/>
<!--<xsl:value-of select="$Tnodes"/>-->
<xsl:choose>
<xsl:when test="CollectiveName">
<xsl:value-of select="CollectiveName"/>
<xsl:text>: </xsl:text>
</xsl:when>
<!--<xsl:when test="position()=last()=1">
<xsl:value-of select="concat(LastName,' ',Initials)"/><xsl:text>. </xsl:text>
</xsl:when>-->


<xsl:when test="position() &lt; 4 ">
<xsl:value-of select="concat(LastName,' ',Initials)"/>
<xsl:if test="position() !=last()"><xsl:text>, </xsl:text>
</xsl:if>
<xsl:if test="position()=last()"><xsl:text>: </xsl:text>
</xsl:if>
</xsl:when>
<!--<xsl:when test="position()!=3">
<xsl:text>,  </xsl:text>
</xsl:when>-->
<xsl:when test="position() =4" >
<xsl:if test="$Tnodes &gt; 3 ">
<!--<xsl:value-of select="concat(LastName,' ',Initials)"/>-->
<xsl:text>et al.: </xsl:text>
</xsl:if>
</xsl:when>
<xsl:otherwise>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:if>


<xsl:for-each select="$CitInfo/Citation/PubmedArticle/MedlineCitation/Article">
<xsl:value-of select="ArticleTitle"/>
<xsl:text> </xsl:text>
</xsl:for-each>
<xsl:for-each select="$CitInfo/Citation/PubmedArticle/MedlineCitation/MedlineJournalInfo/MedlineTA">
<xsl:value-of select="."/>
<xsl:text> </xsl:text>
</xsl:for-each>

<xsl:for-each select="$CitInfo/Citation/PubmedArticle/MedlineCitation/Article/Journal/JournalIssue">
<xsl:text> </xsl:text>
<xsl:if test="Issue">
<xsl:value-of select="concat(Volume,' ','(',Issue,')',': ')"/>
</xsl:if>
<xsl:if test="not(Issue)">
<xsl:if test="contains(Article/Journal/JournalIssue/Volume,'Suppl')">
  <xsl:value-of select="substring(Article/Journal/JournalIssue/Volume,1,1)"/><xsl:text> </xsl:text>
(<xsl:value-of select="substring(Article/Journal/JournalIssue/Volume,3,7)"/>)<xsl:text> </xsl:text>
</xsl:if>
<xsl:if test="not(contains(Article/Journal/JournalIssue/Volume,'Suppl'))">
<xsl:value-of select="Article/Journal/JournalIssue/Volume"/><xsl:text> </xsl:text>
</xsl:if>
<xsl:value-of select="Volume"/><xsl:text>:</xsl:text>
</xsl:if>
</xsl:for-each>
<xsl:for-each select="$CitInfo/Citation/PubmedArticle/MedlineCitation/Article/Pagination">
<xsl:value-of select="concat(MedlinePgn,', ')"/>
</xsl:for-each>
<!--<xsl:value-of select="concat($CitInfo/Citation/PubmedArticle/MedlineCitation/Article/Pagination/MedlinePgn,', ')"/>-->
<xsl:if test="$CitInfo/Citation/PubmedArticle/MedlineCitation/Article/Journal/JournalIssue/PubDate/MedlineDate">
<xsl:value-of select="$CitInfo/Citation/PubmedArticle/MedlineCitation/Article/Journal/JournalIssue/PubDate/MedlineDate"/>
<xsl:text>.</xsl:text>
<br />
</xsl:if> 
<xsl:for-each select="$CitInfo/Citation/PubmedArticle/MedlineCitation/Article/Journal/JournalIssue/PubDate/Year">
<xsl:value-of select="."/>
<xsl:text>. </xsl:text>
</xsl:for-each>
</xsl:if>
 <!-- ==============================================================
       Test to determine if citation is a protocol
     =============================================================== -->

<xsl:if test="$ProtInfo/InScopeProtocol/ProtocolIDs/PrimaryID/IDString">
<xsl:for-each select="$ProtInfo/InScopeProtocol/ProtocolAdminInfo/ProtocolLeadOrg/LeadOrgPersonnel">
<xsl:if test="not(@public)">
<!--<xsl:value-of select="Person"/>
<xsl:value-of select="PersonRole"/>-->
<xsl:if test="../LeadOrgRole='Primary'">
<xsl:if test="PersonRole='Protocol chair'">
<xsl:if test="contains(Person/@cdr:ref,'CDR')">
  <xsl:variable name="PerID" select="substring-before(Person/@cdr:ref,'#')"/>
  <xsl:variable name="PerInfo" 
              select="document(concat('cdr:',$PerID,'/last'))"/> 
  <xsl:value-of select="$PerInfo/Person/PersonNameInformation/SurName"/>
  <xsl:text> </xsl:text>
  <xsl:value-of select="substring($PerInfo/Person/PersonNameInformation/GivenName,1,1)"/>
 <xsl:variable name="Gname" select="substring-after($PerInfo/Person/PersonNameInformation/GivenName,' ')"/>
<xsl:if test="not(contains($Gname,'.'))">
<xsl:value-of select="substring($Gname,1,1)"/>
</xsl:if>
<xsl:if test="contains($Gname,'.')">
 <xsl:value-of select="translate($Gname,'.','')"/>
</xsl:if>
<xsl:text> </xsl:text>

  </xsl:if>
  </xsl:if>
  </xsl:if>
  </xsl:if>
  </xsl:for-each>

<xsl:for-each select="$ProtInfo/InScopeProtocol/ProtocolAdminInfo/ProtocolLeadOrg/LeadOrganizationID">
<xsl:if test="../LeadOrgRole='Primary'">
<xsl:if test="contains(@cdr:ref,'CDR')">
  <xsl:variable name="OrgID" select="@cdr:ref"/>
  <xsl:variable name="OrgInfo" 
              select="document(concat('cdr:',$OrgID,'/last'))"/>
 <xsl:value-of select="$OrgInfo/Organization/OrganizationNameInformation/OfficialName/Name"/>:
</xsl:if>
</xsl:if>

</xsl:for-each>
<!--<xsl:if test="PersonRole='Protocol chair'">
<xsl:value-of select="."/>-->

<!--<xsl:if test="contains(Person/@cdr:ref,'CDR')">
  <xsl:variable name="PerID" select="$ProtInfo/InScopeProtocol/ProtocolAdminInfo/ProtocolLeadOrg/LeadOrgPersonnel/Person/@cdr:ref"/>
  <xsl:variable name="PerInfo" 
              select="document(concat('cdr:',$PerID,'/last'))"/>
  <xsl:value-of select="$PerInfo/Person/PersonNameInformation/SurName"/>
  <xsl:value-of select="$PerInfo/Person/PersonNameInformation/GivenName"/>
  <xsl:text>  </xsl:text>-->
  <!--</xsl:if>-->
 <!-- </xsl:if>-->
<!--  </xsl:for-each>-->

  <xsl:text> </xsl:text>
  <xsl:for-each select="$ProtInfo/InScopeProtocol/ProtocolTitle[@Type='Professional']">
<xsl:value-of select="."/>,
</xsl:for-each>

<xsl:for-each select="$ProtInfo/InScopeProtocol/ProtocolIDs/PrimaryID/IDString">
<xsl:value-of select="."/>,
</xsl:for-each>
<xsl:for-each select="$ProtInfo/InScopeProtocol/ProtocolDetail/StudyType">
<xsl:value-of select="."/>,
</xsl:for-each>
<xsl:for-each select="$ProtInfo/InScopeProtocol/ProtocolAdminInfo/CurrentProtocolStatus">
<xsl:value-of select="."/>.
</xsl:for-each>
<!-- Commented out because date no longer to be included in reference. -->
<!--<xsl:for-each select="$ProtInfo/InScopeProtocol/ProtocolAdminInfo/ProtocolLeadOrg/LeadOrgProtocolStatuses/CurrentOrgStatus/StatusDate">
<xsl:if test="../../../LeadOrgRole='Primary'">
<xsl:value-of select="substring(.,6,2)"/>
<xsl:text>/</xsl:text>
<xsl:value-of select="substring(.,9,2)"/>
<xsl:text>/</xsl:text>
<xsl:value-of select="substring(.,1,4)"/>.
</xsl:if>
</xsl:for-each>-->
</xsl:if>
</xsl:if>
</xsl:copy>
</xsl:template>

               
<!-- ===================================================================
      Template rule used to do XML to XML transformations which
       copies any attribute node, or node that is child of of something 
     ==================================================================== -->

   <xsl:template match="@*|node()">
     <xsl:copy>
     <xsl:apply-templates select="@*"/>
     <xsl:apply-templates/>
     </xsl:copy> 
     </xsl:template>

</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>