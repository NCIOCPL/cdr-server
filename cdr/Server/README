To build the CDR server, run nmake with no explicit target.
To install, run nmake with the target install.
If the components that the makefile expects to find are not on the D:
drive, add DRV=x: to the invocation of nmake, with x being the drive
where you are building.  For more details, see documentation in the
makefile itself.

Slightly older, more complicated information is listed below, in case 
you need to debug the third-party libraries.  To build the CDR Server 
you need to perform the following steps (where the instructions say
"add ... to the system search path" you only need to do this if the
the directory specified is not already in the system search path):

 1. Install expat.
  - go to http://sourceforge.net/projects/expat
  - download the latest expat_win32bin package (an .exe file)
  - run the executable package, installing to d:\usr\expat
  - add d:\usr\expat\libs to the system search path

 2. Install Sablotron.
  - go to http://www.gingerall.com/charlie/ga/xml/p_sab.xml
  - download the latest Sablotron full pack into d:/Downloads
  - unzip
  - move Sablot-x.xx to d:\usr\sablot
  - move js-x.x_xxx to d:\usr\js
  - move libiconv-x.x to d:\usr\iconv
  - add d:\usr\sablot\bin to the system search path
  - add d:\usr\js\bin to the system search path
  - add d:\usr\iconv\bin to the system search path

 3. Install xml4c
  - go to http://www.alphaworks.ibm.com/tech/xml4c
  - download the latest binary drop for Windows NT
  - unzip
  - move xml4cx_x_x to d:\usr\xml4c
  - add d:\usr\xml4c\bin to the system search path

 4. Install regex++ (no pre-built binary package available, unfortunately)
  - go to http://ourworld.compuserve.com/homepages/John_Maddock/regexpp.htm
  - download the latest regexpp*.zip
  - unzip regexpp* -d regex
  - move regex to d:\usr\regex
  - change to d:\usr\regex\libs\regex\build directory
  - nmake -f vc7.mak
  - add d:\usr\regex\libs\regex\build\vc7 to the system search path

 5. Check out and build the server source code
  - cvs checkout cdr/server
  - cd cdr\server
  - nmake VCVER=7
  - nmake VCVER=7 install (when you're ready)

In addition to the DLLs installed by the steps above, the following 
two DLLs must be copied to c:\winnt\system32, if they are not already
in the search path:

    msvcp70d.dll
    msvcr70d.dll

============================================================================

Debugging Sablotron
-------------------

Here's how to build Sablotron for debugging:

 1. Download latest source bundle.
 2. Unpack.
 3. Change to top directory of bundle
 4. set EXPAT=d:\usr\expat\source
 5. set EXPAT_LIB=..\libs\libexpat.lib
 6. nmake -f Makefile.nt DBG=1
 7. Check out a fresh set of CDR Server sources.
 8. nmake SABLOT=d:/path/to/debug/version/of/Sablotron

============================================================================
The dependencies for the server are listed below:

  * icu (Unicode support package needed by xml4c, below)
    you can skip this if you're using the binary drop for xml4c
    download latest sources from:
        http://www.alphaworks.ibm.com/aw.nsf/download/xml4c or
        http://oss.software.ibm.com/icu/download/
    unpack to /usr/icu
    use /usr/icu/source/allinone/allinone.dsw workspace to build everything
        (Build/Batch Build/Rebuild All)
    make sure /usr/icu/bin/Release is in the search path (or Debug, for
        debugging)
    
  * xml4c (XML parser used directly by CDR Server)
    download latest sources from:
        http://www.alphaworks.ibm.com/aw.nsf/download/xml4c or
    unpack to /usr/xml4c
    use /usr/xml4c/Projects/Win32/VC6/xerces-all/xerces-all.dsw to
        build everything
    alternate approach, if you're certain you won't need to debug from 
        source code, is to pick up the latest binary drop for Win32;
        if you do this, you don't need (or want) /usr/icu/bin/Release
        in your search path
    make sure /usr/xml4c/bin is in your search path

  * expat (parser used by Sablotron's XSL/T processor)
    download latest sources from:
        http://sourceforge.net/projects/expat
    unpack to /usr/expat
    use /usr/expat/source/expat.dsw to build everything
    copy /usr/expat/source/lib/Release/expat.dll to /cdr/bin

  * js (javascript interpreter; used by sablotron)
    download latest sources from:
        http://www.mozilla.org/cvs.html
        (on mmdb2 or cdrdev you can just use 'cvs update' in /usr/js/src)
    unpack to /usr/js
    build in /usr/js/src with 'nmake -f js.mak CFG="js - Win32 Release"'
    build in /usr/js/src with 'nmake -f js.mak CFG="js - Win32 Debug"'
    copy /usr/js/src/Release/js32.dll to /cdr/bin
    copy /usr/js/src/Debug/jsshell.exe to /cdr/bin

  * iconv (encoding support for sablotron)
    download latext libiconv from:
        http://gnuwin32.sourceforge.net/packages/libiconv.htm
    unpack to /usr/libiconv
    build in /usr/libiconv with 'nmake -f Makefile.msvc DLL=1 MFLAGS=-MD'
    copy /usr/libiconv/lib/iconv.dll to /cdr/bin

  * sablot (XSL/T parser)
    download latest sources from:
        http://www.gingerall.com/charlie/ga/xml/p_sab.xml
    unpack to /usr/sablot
    tweak src/Makefile.nt so ICONV and JS paths are correct
    build the release library using (all on one line):
        nmake EXPAT=D:\usr\Expat\Source\lib \
              EXPAT_LIB=release\expat.lib \
              ICONV=d:\cdr\bin \
              JS=d:\cdr\bin \
              -f Makefile.nt
        
    if you are debugging, unpack to /cdrdbg/sablot and build with
        nmake EXPAT=D:\usr\Expat\Source\lib \
              EXPAT_LIB=debug\expat.lib \
              ICONV=d:\cdr\bin \
              JS=d:\cdr\bin \
              -f Makefile.nt

  * regex (regular expression library)
    download latest sources from:
        http://ourworld.compuserve.com/homepages/John_Maddock/regexpp.htm
    unpack to /usr/regex
    use /usr/regex/libs/regex/build/vc6.mak to build the libraries
    copy vc6\vc6-re300l.dll to \cdr\bin
