<?xml version="1.0" encoding="UTF-8" ?>

<!-- $Id$ 

     $Log: not supported by cvs2svn $
     Revision 1.55  2009/09/23 21:28:55  bkline
     Moved NMTOKENS into common schema.

     Revision 1.54  2009/06/09 16:13:04  bkline
     Added RelatedDocuments for drugs and PDQ boards.

     Revision 1.53  2009/04/16 19:08:43  bkline
     Moved EmptyContent type from GlossaryTermConcept.xml to CdrCommonBase.xml.

     Revision 1.52  2009/04/16 18:59:49  bkline
     Moved PlaceHolder into PhraseLevel type in common schema.

     Revision 1.51  2009/03/09 21:30:36  venglisc
     Changed RelatedDrugSummaryRef element to RelatedDrugSummaryLink element.
     (Bug 4524)

     Revision 1.50  2008/12/17 18:25:56  bkline
     Added 'None' as table frame type at Volker's suggestion.

     Revision 1.49  2008/10/21 20:01:46  bkline
     Added DrugSummaryRef to OtherPhraseElements choice block.

     Revision 1.48  2008/08/22 20:28:00  bkline
     Added FragmentId type.

     Revision 1.47  2008/04/16 04:07:19  ameyer
     Changes to workaround the inability to short circuit boolean connectives
     in Sablotron by using SQL CASE statement instead in custom rule.
     Also deleted some obsolete custom rule code.  It's still in CVS if desired.

     Revision 1.46  2008/03/04 13:00:01  bkline
     Tightened up pattern constraints for email addresses.

     Revision 1.45  2007/11/15 14:23:14  bkline
     Consolidated rule contexts to eliminate multiple rule sets for the same
     context.

     Revision 1.44  2007/10/17 03:50:25  ameyer
     Added several assertion rules for validating correct pairings of
     AddressType, Country, and PoliticalSubUnit_State.

     Revision 1.43  2007/10/03 04:06:07  ameyer
     Added assertion rules to prevent mismatch of AddressType and
     Country/@cdr:ref in three types of addresses.

     Revision 1.42  2007/08/15 15:22:44  bkline
     Fixed bug which was suppressing zip validation.

     Revision 1.41  2007/06/19 13:20:25  bkline
     Added MiscellaneousDocLink to phrase-level and para-level groups
     (see request #3332).

     Revision 1.40  2007/04/06 18:01:15  kidderc
     Changes for issue 3100.

     Revision 1.39  2007/03/30 21:44:19  bkline
     Added 'NCIC' as valid value for UpdateMode; suppressed zipcode
     validation for external addresses.

     Revision 1.38  2007/02/22 13:56:08  bkline
     Modifications for GlossaryTermConcept's RelatedInformation as requested
     in comment #15 of issue 2604.

     Revision 1.37  2007/02/21 22:06:21  bkline
     Fixed typo in name of XSL/T string-length() function.

     Revision 1.36  2007/02/12 21:39:08  bkline
     Added length constraint custom rule for short AltTitle elements (see
     request #2964).

     Revision 1.35  2007/02/06 19:26:25  bkline
     Simplified regular expression for DataString type.

     Revision 1.34  2007/02/05 18:34:35  bkline
     Added new glossary link types.  Modified Email type.  Took out
     superfluous length restriction for DataType.

     Revision 1.33  2006/12/22 16:40:54  bkline
     Added ResponseToComment to CommonTextElements group; added TitleType
     attribute to AltTitle element.

     Revision 1.32  2006/11/17 22:01:30  bkline
     Changed type of Comment elements to allow optional audience attribute.

     Revision 1.31  2006/11/11 20:16:12  bkline
     Removed superfluous begin- and end-string anchors in regular
     expression patterns.

     Revision 1.30  2006/11/10 04:02:53  ameyer
     Added DataString simple type.

     Revision 1.29  2006/05/16 21:39:49  bkline
     Added new type for miscellaneous document links.

     Revision 1.28  2006/01/31 18:49:53  bkline
     Made ItemizedListStyle a required attribute at Sheri's request (#1970).

     Revision 1.27  2005/12/22 15:28:36  bkline
     Folded in ExternalSiteAddress element for the custom address
     validation rules at Sheri's request (#1934).

     Revision 1.26  2005/09/13 21:05:40  ameyer
     Added a cdr:id attribute to QandAEntry as per issue #1818.

     Revision 1.25  2005/05/12 17:50:26  bkline
     Backed out custom validation rules for ExternalSiteAddress elements.

     Revision 1.24  2005/05/05 21:33:30  bkline
     Added OrganizationOrPersonLink type; used it for external sites in
     InScopeProtocol documents.

     Revision 1.23  2005/05/04 19:08:21  bkline
     Added ExternalSiteAddress to the list of elements to which the
     custom validation rules are applied for US addresses.

     Revision 1.22  2005/03/25 16:19:58  bkline
     Added SupplementaryInfoLink and NonEmptyString types, as well as new
     UpdateMode value 'COG'.

     Revision 1.21  2004/12/03 04:27:01  ameyer
     Added type FragmentIdWithOptionalDocId.
     Modified MediaRef to use this in the href attribute.

     Revision 1.20  2004/11/30 20:49:09  ameyer
     Modified MediaRef to support text content.
     Created new complex type FragmentRef.  MediaRef's cdr:href is of
     that type.

     Revision 1.19  2004/11/18 23:23:25  ameyer
     Added cdr:id to MediaRef.  Will also have to add content, after
     discussion.

     Revision 1.18  2004/11/18 15:34:33  ameyer
     Deleted Multimedia - now using MediaLink instead.

     Revision 1.17  2004/11/16 16:29:25  ameyer
     Moved cdr:ref attribute from MediaLink (where it would have cause
     subelement Caption to be denormalized away) to a new subelement
     "MediaID".

     Revision 1.16  2004/11/10 04:30:59  ameyer
     Updated with MediaLink and MediaRef related definitions.

     Revision 1.15  2004/11/03 18:39:46  bkline
     Added new MediaLink element (request #1385).

     Revision 1.14  2004/03/25 13:20:48  bkline
     Fixed typos (valid value types for update mode and mailer type had
     been reversed).

     Revision 1.13  2004/03/11 14:11:10  bkline
     Added UpdateMode complex type (request #1126).

     Revision 1.12  2004/02/03 13:28:04  bkline
     Moved documentation links into OtherPhraseElements in common schema.

     Revision 1.11  2003/09/09 19:26:09  bkline
     Modified rule for U.S. ZIP codes to validate against database.

     Revision 1.10  2003/09/04 20:49:58  bkline
     Modifed StandardWording to allow phrase-level markup inside it.

     Revision 1.9  2003/08/22 22:52:12  bkline
     Added new StandardWording element at Margaret's request (#860).

     Revision 1.8  2003/08/15 18:49:21  bkline
     Backed out Comment from ParaLevelElements.

     Revision 1.7  2003/08/13 19:53:27  bkline
     Comment added to Para-level elements.

     Revision 1.6  2003/04/29 20:43:00  bkline
     Expanded custom rule for U.S. addresses to apply to SpecificPostalAddress
     elements also.

     Revision 1.5  2003/02/20 21:08:43  bkline
     Added Compact attribute to OrderedList element type.

     Revision 1.4  2003/01/22 19:44:37  bkline
     Removed obsolete "Non US" value for AddressType (replaced by "Non-US").

     Revision 1.3  2003/01/16 01:25:23  bkline
     Added Non-US value for AddressType.

     Revision 1.2  2002/11/25 18:56:42  bkline
     Added custom validation rule for US addresses.

     Revision 1.1  2002/08/29 15:42:07  bkline
     Split out base definitions for everything but CountryLink, so we can
     redefine this type for Citations, since NLM uses the Country element
     differently than we do.

     History of changes to schema from which this base document was
     derived follows.

     Revision 1.45  2002/08/27 21:33:32  arkd
     cdr:ref/cdr:href attributes made required in all Document/Document 
     fragments Links/Refs.

     Revision 1.44  2002/08/22 21:40:23  arkd
     DocIdWithFragment pattern changed.

     Revision 1.43  2002/06/28 19:02:51  bkline
     Fixed typo in new simple type definition.

     Revision 1.42  2002/06/28 18:08:27  arkd
     DocIdWithOptionalFragment simpleType added.

     Revision 1.41  2002/06/14 20:19:25  bkline
     Modified definition of NotEmptyString to mean the same as string until
     Lakshmi has time to decide what the restrictions really should be.
     Changed NotEmptyString back to string for enumerated types, which don't
     need any further restrictions than the list of valid values provided
     by the enumeration.

     Revision 1.40  2002/06/07 15:31:13  arkd
     Mistakes in NotEmptyString corrected.

     Revision 1.39  2002/06/07 13:41:26  arkd
     Typos corrected.

     Revision 1.38  2002/06/07 13:29:46  arkd
     All the "string" types changed for "NotEmptyString".

     Revision 1.37  2002/06/07 13:25:44  arkd
     NotEmptyString simpleType added.

     Revision 1.36  2002/05/29 18:20:39  arkd
     PhraseLevelWithoutId complexType created.

     Type of Emphasis, Strong, Subscript, Superscript, GeneName,
     ScientificName, ForeignWord, DrugName, InterventionName changed to
     PhraseLevelWithoutId.

     Revision 1.35  2001/12/19 15:36:04  bkline
     Added optional PdqKey attributes for elements with cdr:id attributes.

     Revision 1.34  2001/12/19 15:02:30  bkline
     Added optional PdqKey attributes.

     Revision 1.33  2001/12/10 13:57:31  ArkD
     SCHEMA FROZEN.

     Revision 1.32  2001/12/10 13:51:06  ArkD
     In Row Entry=>entry.
     Section added to the CommonTextElements group.
     CitationFragment Link and Ref commented out.
     City made optional. Country made required.
     Comment for CdrHref and CdrRef added.
     CodePosition and comment for it deleted.
     Simple type YN added.

     Revision 1.31  2001/12/03 23:17:39  ArkD
     PoliticalUnit=>PoliticalSubUnit.
     GeographicEntityLink and GeographicEntityFragmentLink deleted.
     CountryLink and PoliticalSubUnitLink created.
     In Row entry=>Entry.
     ProtocolLink added to OtherPhraseElements.

     Revision 1.30  2001/10/24 18:24:36  ArkD
     InterventionName type changed back to PhraseLevel.

     Revision 1.29  2001/10/24 13:51:06  bkline
     Changed InterventionName from PhraseLevel to TerminologyLink to avoid
     redefinition of the same element, which was preventing validating and
     saving protocol documents.

     Revision 1.28  2001/10/22 20:18:57  ArkD
     Comment in CommonTextElements made optional.
     'ItenizedList' attribute 'Compact' type changed from YesNo to No, 
     attribute made optional.

     Revision 1.27  2001/08/29 21:43:21  ArkD
     IDREF complex type deleted (was created by mistake).

     Revision 1.26  2001/08/23 16:41:09  ArkD
     ExternalLink=>ExternalRef.
     DocIdWithFragment simple type added.
     All appropriate Doc/Fragment Links/Refs defined.
     CdrCallingId=>cdr:id.
     CitationReference=>CitationLink type=CitationLink.
     URI=>Website type=ExternalRef.
     Phone and Email syntax changed.
     PersonAssigned deleted from DatedAction.

     Revision 1.24  2001/07/18 21:59:07  bkline
     Fixed minOccurs='*' (changed to '0').

     Revision 1.23  2001/07/18 18:48:39  ArkD
     Simple type 'Yes' added.

     Revision 1.22  2001/07/06 16:08:37  ArkD
     Type of attribute "Public" changed from YesNo to No.

     Revision 1.20  2001/07/06 15:21:48  ArkD
     type changed for ActionDate element.

     Revision 1.18  2001/06/29 17:11:26  bkline
     Fixed a bunch of typos (miOccurs for minOccurs).

     Revision 1.17  2001/06/28 19:47:56  bkline
     Changed uri to anyURI.

     Revision 1.16  2001/06/27 13:42:38  bkline
     Upgraded to latest schema syntax.

     Revision 1.15  2001/06/22 16:03:37  ArkD
     Attribute 'Compact' (YesNo) added to the ItemizedList.

     Revision 1.14  2001/06/22 15:31:21  ArkD
     Geographical changed to Geographic at all uccurances.

     Revision 1.13  2001/06/22 15:13:17  ArkD
     GeographicalEntityLink type created.
     CitySuffix element added to ContactDetail.
     All postal address elements united into PostalAddress complex type
     with Public (YesNo) attribute.
     Public (YesNo) attribute added to Phone and Email in ContactDetail.
     Country and PoliticalUnit_State types changed
     from string to GeographicalEntityLink.

     Revision 1.12  2001/06/15 15:47:42  ArkD
     "Author" renamed into "QuoteAuthor", "URL" renamed into "URI"
     in order to resolve cinflicts with Citation Schema.

     Revision 1.11  2001/05/02 22:39:13  bkline
     Prior to migration to final schema syntax.

     Revision 1.10  2001/05/01 03:22:32  ArkD
     "Address" element renamed into "Contact", new schema provided.
     "PrimarySecondary" type added.

     Revision 1.9  2001/05/01 00:21:04  ArkD
     Document type specific link types created - ProtocolLink, SummaryLink, 
     OrganizationLink, PersonLink, TerminologyLink, DiagnosisLink (all 
     cdr:ref type), GlossaryLink (cdr:href type). Simle element YesNo added. 
     Comment element type changed from GeneralText to string.

     Revision 1.8  2001/04/30 23:50:53  ArkD
     All ElementID attributes renamed into CdrCallingID attributes.

     Revision 1.7  2001/03/20 21:37:09  bkline
     Added ElementId attribute to all ParaLevel complex types as well as
     to Section element.

     Revision 1.6  2001/03/20 21:14:15  bkline
     Added Address complex type.

     Revision 1.5  2001/02/22 16:07:30  bkline
     Moved SectMetaData to new SummarySection in PatientSummariesSchema.

     Revision 1.4  2001/02/21 19:33:18  bkline
     Added AltTitle type.

     Revision 1.3  2001/02/21 16:35:18  bkline
     Added Section type; restored paragraph to simpler version (no title).

     Revision 1.2  2001/01/23 22:16:14  bkline
     Modifications to reflect discussions with Lakshmi and Ark after CDR
     planning meeting 23 Jan 2001.
 -->

<schema              xmlns           = 'http://www.w3.org/2001/XMLSchema'>

 <annotation>
  <appInfo>
   <pattern>
    <rule            context         = 'PostalAddress|SpecificPostalAddress'>
     <assert         test            = '@AddressType != "US" or
                                        document(concat("cdrutil:/valid-zip/",
                                                        PostalCode_ZIP)) != ""'
     >U.S. address must have valid ZIP code</assert>
     <assert         test            = '@AddressType != "US" or
                                        PoliticalSubUnit_State'
     >U.S. address must have PoliticalSubUnit_State element</assert>
     <assert         test            = '@AddressType != "US" or
                    string(number(substring(Country/@cdr:ref,4))) =
                      document("cdrutil:/sql-query/
                    SELECT doc_id
                      FROM query_term
                     WHERE path = &apos;/Country/CountryFullName&apos;
                       AND value = &apos;U.S.A.&apos;")
                       /SqlResult/row/col[@name="doc_id"]'
     >AddressType is US but Country is not U.S.A.</assert>
     <assert         test            = '@AddressType = "US" or
                    string(number(substring(Country/@cdr:ref,4))) !=
                      document("cdrutil:/sql-query/
                    SELECT doc_id
                      FROM query_term
                     WHERE path = &apos;/Country/CountryFullName&apos;
                       AND value = &apos;U.S.A.&apos;")
                       /SqlResult/row/col[@name="doc_id"]'
     >AddressType is Non-US but Country=U.S.A.</assert>
    </rule>
   </pattern>

   <!-- Separated out to suppress zip validation for external addresses. -->
   <pattern>
    <rule            context         = 'ExternalSiteAddress'>
     <assert         test            = '@AddressType != "US" or
                                        PoliticalSubUnit_State'
     >U.S. address must have PoliticalSubUnit_State element</assert>
     <assert         test            = '@AddressType != "US" or
                    string(number(substring(Country/@cdr:ref,4))) =
                      document("cdrutil:/sql-query/
                    SELECT doc_id
                      FROM query_term
                     WHERE path = &apos;/Country/CountryFullName&apos;
                       AND value = &apos;U.S.A.&apos;")
                       /SqlResult/row/col[@name="doc_id"]'
     >AddressType is US but Country is not U.S.A.</assert>
     <assert         test            = '@AddressType = "US" or
                    string(number(substring(Country/@cdr:ref,4))) !=
                      document("cdrutil:/sql-query/
                    SELECT doc_id
                      FROM query_term
                     WHERE path = &apos;/Country/CountryFullName&apos;
                       AND value = &apos;U.S.A.&apos;")
                       /SqlResult/row/col[@name="doc_id"]'
     >AddressType is Non-US but Country=U.S.A.</assert>
    </rule>
   </pattern>

   <!-- This one tests all three kinds of addresses -->
   <!-- Oops! can't have multiple blocks of rules for the same context.
        The two assertions below have been propogated to the rule sets
        above.
   <pattern>
    <rule            context         = 'PostalAddress|SpecificPostalAddress|
                                        ExternalSiteAddress'>
     <assert         test            = '@AddressType != "US" or
                    string(number(substring(Country/@cdr:ref,4))) =
                      document("cdrutil:/sql-query/
                    SELECT doc_id
                      FROM query_term
                     WHERE path = &apos;/Country/CountryFullName&apos;
                       AND value = &apos;U.S.A.&apos;")
                       /SqlResult/row/col[@name="doc_id"]'
     >AddressType is US but Country is not U.S.A.</assert>
     <assert         test            = '@AddressType = "US" or
                    string(number(substring(Country/@cdr:ref,4))) !=
                      document("cdrutil:/sql-query/
                    SELECT doc_id
                      FROM query_term
                     WHERE path = &apos;/Country/CountryFullName&apos;
                       AND value = &apos;U.S.A.&apos;")
                       /SqlResult/row/col[@name="doc_id"]'
     >AddressType is Non-US but Country=U.S.A.</assert>
    </rule>
   </pattern>
   <pattern>
      <rule            context         = 'PoliticalSubUnit_State'>
     <assert test = 'document(concat("cdrutil:/sql-query/
          SELECT value
            FROM query_term_pub
           WHERE path = &apos;/PoliticalSubUnit/Country/@cdr:ref&apos;
             AND doc_id = ?~", substring(@cdr:ref,4))
             )/SqlResult/row/col[@name="value"] = ../Country/@cdr:ref'
     >PoliticalSubUnit_State doc links to a different country from this
      address Country link</assert>
    </rule>
   </pattern>
  -->
   <pattern>
    <rule            context         = 'AltTitle'>
     <assert         test            = '@TitleType != "Short" or
                                        string-length() &lt; 65'
     >Short alternate title cannot be longer than 64 characters</assert>
    </rule>
   </pattern>
   <pattern>
    <rule            context         = 'PoliticalSubUnit_State'>

     <!-- SubUnit doc->Country link matches this address Country link
          That's clear from reading the expression, right? -->
     <assert test = 'document(concat("cdrutil:/sql-query/
          SELECT 
              CASE
                WHEN ISNUMERIC(&apos;",string(number(substring(@cdr:ref,4))),"&apos;) = 1 THEN (
                  SELECT value
                    FROM query_term
                   WHERE path = &apos;/PoliticalSubUnit/Country/@cdr:ref&apos;
                     AND doc_id = ?)
                ELSE ?
              END AS value",
                             "~", string(number(substring(@cdr:ref,4))),
                             "~", ../Country/@cdr:ref)
             )/SqlResult/row/col[@name="value"] = ../Country/@cdr:ref'
>PoliticalSubUnit_State is in different country from this address Country</assert>
    </rule>
   </pattern>
  </appInfo>
 </annotation>

<!--=================================================================-->
<!--                  TEXT MARKUP ELEMENT GROUPS                     -->
<!--=================================================================-->
  <group             name            = 'CommonTextElements'>
    <choice>
      <element       name            = 'Comment'
                     type            = 'Comment'
                     minOccurs       = '0'/>
      <element       name            = 'ResponseToComment'
                     type            = 'Comment'
                     minOccurs       = '0'/>
      <element       name            = 'Section'
                     type            = 'Section'
                     minOccurs       = '0'/>
    </choice>
  </group>

  <group             name            = 'TitleMarkupElements'>
    <choice>
      <element       name            = 'Emphasis'
                     type            = 'PhraseLevelWithoutId'/>
      <element       name            = 'Strong'
                     type            = 'PhraseLevelWithoutId'/>
      <element       name            = 'Subscript'
                     type            = 'PhraseLevelWithoutId'/>
      <element       name            = 'Superscript'
                     type            = 'PhraseLevelWithoutId'/>
      <element       name            = 'TT'
                     type            = 'PhraseLevel'/>
      <element       name            = 'GeneName'
                     type            = 'PhraseLevelWithoutId'/>
      <element       name            = 'ScientificName'
                     type            = 'PhraseLevelWithoutId'/>
      <element       name            = 'ForeignWord'
                     type            = 'PhraseLevelWithoutId'/>
    </choice>
  </group>

  <group             name            = 'OtherPhraseElements'>
    <choice>
      <element       name            = 'LOERef'
                     type            = 'SummaryRef'/>
      <element       name            = 'LOEFragmentRef'
                     type            = 'SummaryFragmentRef'/>
      <element       name            = 'LOELink'
                     type            = 'SummaryLink'/>
      <element       name            = 'LOEFragmentLink'
                     type            = 'SummaryFragmentLink'/>
      <element       name            = 'CitationLink'
                     type            = 'CitationLink'/>
      <element       name            = 'CitationRef'
                     type            = 'CitationRef'/>
      <!--
      <element       name            = 'CitationFragmentLink'
                     type            = 'CitationFragmentLink'/>
      <element       name            = 'CitationFragmentRef'
                     type            = 'CitationFragmentRef'/>
        -->
      <element       name            = 'SummaryRef'
                     type            = 'SummaryRef'/>
      <element       name            = 'DrugSummaryRef'
                     type            = 'DrugSummaryRef'/>
      <element       name            = 'SummaryFragmentRef'
                     type            = 'SummaryFragmentRef'/>
      <element       name            = 'SummaryLink'
                     type            = 'SummaryLink'/>
      <element       name            = 'DrugSummaryLink'
                     type            = 'DrugSummaryLink'/>
      <element       name            = 'SummaryFragmentLink'
                     type            = 'SummaryFragmentLink'/>
      <element       name            = 'ProtocolRef'
                     type            = 'ProtocolRef'/>
      <element       name            = 'ProtocolLink'
                     type            = 'ProtocolLink'/>
      <element       name            = 'DrugName'
                     type            = 'PhraseLevelWithoutId'/>
      <element       name            = 'InterventionName'
                     type            = 'PhraseLevelWithoutId'/>
      <element       name            = 'GlossaryTermRef'
                     type            = 'GlossaryRef'/>
      <element       name            = 'GlossaryTermLink'
                     type            = 'GlossaryLink'/>
      <element       name            = 'ExternalRef'
                     type            = 'ExternalRef'/>
      <element       name            = 'Quote'
                     type            = 'Quote'/>
      <element       name            = 'Note'
                     type            = 'GeneralText'/>
      <element       name            = 'StandardWording'
                     type            = 'PhraseLevelWithoutId'/>
      <element       name            = 'DocumentationLink'
                     type            = 'DocumentationLink'/>
      <element       name            = 'DocumentationRef'
                     type            = 'DocumentationRef'/>
      <element       name            = 'DocumentationFragmentLink'
                     type            = 'DocumentationFragmentLink'/>
      <element       name            = 'DocumentationFragmentRef'
                     type            = 'DocumentationFragmentRef'/>
      <element       name            = 'MediaLink'
                     type            = 'MediaLink'/>
      <element       name            = 'MediaRef'
                     type            = 'MediaRef'/>
      <element       name            = 'MiscellaneousDocLink'
                     type            =
                                     'MiscellaneousLinkWithOptionalFragment'/>
    </choice>
  </group>

  <group             name            = 'PhraseElements'>
    <choice>
      <group         ref             = 'TitleMarkupElements'/>
      <group         ref             = 'OtherPhraseElements'/>
    </choice>
  </group>

  <group             name            = 'ParaLevelElements'>
    <choice>
      <element       name            = 'Para'
                     type            = 'PhraseLevel'/>
      <element       name            = 'LiteralLayout'
                     type            = 'PhraseLevel'/>
      <element       name            = 'Table'
                     type            = 'Table'/>
      <element       name            = 'ItemizedList'
                     type            = 'ItemizedList'/>
      <element       name            = 'OrderedList'
                     type            = 'OrderedList'/>
      <element       name            = 'QandASet'
                     type            = 'QandASet'/>
      <element       name            = 'Contact'
                     type            = 'Contact'/>
      <element       name            = 'MediaLink'
                     type            = 'MediaLink'/>
      <element       name            = 'MiscellaneousDocLink'
                     type            =
                                     'MiscellaneousLinkWithOptionalFragment'/>
    </choice>
  </group>

  <group             name            = 'PhraseOrParaElements'>
    <choice>
      <group         ref             = 'PhraseElements'/>
      <group         ref             = 'ParaLevelElements'/>
    </choice>
  </group>

<!--=================================================================-->
<!--                  GENERAL TEXT ELEMENT TYPES                     -->
<!--=================================================================-->
  <complexType       name            = 'Title'
                     mixed           = 'true'>
    <choice          minOccurs       = '0'
                     maxOccurs       = 'unbounded'>
      <group         ref             = 'TitleMarkupElements'/>
    </choice>
  </complexType>

  <complexType       name            = 'AltTitle'
                     mixed           = 'true'>
    <choice          minOccurs       = '0'
                     maxOccurs       = 'unbounded'>
      <group         ref             = 'TitleMarkupElements'/>
    </choice>
    <attribute       name            = 'TitleType'
                     type            = 'AltTitleType'/>
    <attribute       name            = 'Usage'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'PhraseLevel'
                     mixed           = 'true'>
    <choice          minOccurs       = '0'
                     maxOccurs       = 'unbounded'>
      <group         ref             = 'PhraseElements'/>
      <group         ref             = 'CommonTextElements'/>
      <element       name            = 'PlaceHolder'
                     type            = 'PlaceHolder'/>
    </choice>
    <attribute       name            = 'cdr:id'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'PhraseLevelWithoutId'
                     mixed           = 'true'>
    <choice          minOccurs       = '0'
                     maxOccurs       = 'unbounded'>
      <group         ref             = 'PhraseElements'/>
      <group         ref             = 'CommonTextElements'/>
    </choice>
  </complexType>

  <complexType       name            = 'ParaLevel'>
    <choice          minOccurs       = '1'
                     maxOccurs       = 'unbounded'>
      <group         ref             = 'ParaLevelElements'/>
      <group         ref             = 'CommonTextElements'/>
    </choice>
  </complexType>

  <complexType       name            = 'GeneralText'
                     mixed           = 'true'>
    <choice          minOccurs       = '0'
                     maxOccurs       = 'unbounded'>
      <group         ref             = 'PhraseOrParaElements'/>
      <group         ref             = 'CommonTextElements'/>
    </choice>
  </complexType>

  <complexType       name            = 'Section'>
    <sequence>
      <element       name            = 'Title'
                     type            = 'Title'
                     minOccurs       = '0'/>
      <element       name            = 'AltTitle'
                     type            = 'AltTitle'
                     minOccurs       = '0'
                     maxOccurs       = 'unbounded'/>
      <element       name            = 'KeyPoint'
                     type            = 'PhraseLevel'
                     minOccurs       = '0'
                     maxOccurs       = 'unbounded'/>
      <choice        minOccurs       = '0'
                     maxOccurs       = 'unbounded'>
        <group       ref             = 'ParaLevelElements'/>
      </choice>
      <element       name            = 'Section'
                     type            = 'Section'
                     minOccurs       = '0'
                     maxOccurs       = 'unbounded'/>
    </sequence>
    <attribute       name            = 'cdr:id'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'Contact'>
    <sequence>
      <element       name            = 'ContactName'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'
                     maxOccurs       = 'unbounded'/>
      <element       name            = 'ContactDetail'
                     type            = 'ContactDetail'/>
    </sequence>
  </complexType>

  <complexType       name            = 'ContactDetail'>
    <sequence>
      <element       name            = 'PostalAddress'
                     type            = 'PostalAddress'
                     minOccurs       = '0'/>
      <element       name            = 'Phone'
                     type            = 'Phone'
                     minOccurs       = '0'/>
      <element       name            = 'TollFreePhone'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      <element       name            = 'Fax'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      <element       name            = 'Email'
                     type            = 'Email'
                     minOccurs       = '0'/>
      <element       name            = 'WebSite'
                     type            = 'ExternalRef'
                     minOccurs       = '0'/>
    </sequence>
    <attribute       name            = 'cdr:id'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'Email'>
    <simpleContent>
      <extension     base            = 'EmailAddress'>
        <attribute   name            = 'Public'
                     type            = 'No'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'Phone'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'Public'
                     type            = 'No'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'PostalAddress'>
    <sequence>
      <element       name            = 'Street'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'
                     maxOccurs       = 'unbounded'/>
      <element       name            = 'City'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      <element       name            = 'CitySuffix'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      <element       name            = 'PoliticalSubUnit_State'
                     type            = 'PoliticalSubUnitLink'
                     minOccurs       = '0'/>
      <element       name            = 'Country'
                     type            = 'CountryLink'/>
      <element       name            = 'PostalCode_ZIP'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    </sequence>
    <attribute       name            = 'Public'
                     type            = 'No'
                     minOccurs       = '0'/>
    <attribute       name            = 'AddressType'
                     type            = 'AddressType'/>
  </complexType>

  <complexType       name            = 'Quote'>
    <sequence>
      <element       name            = 'QuotedText'
                     type            = 'GeneralText'/>
      <element       name            = 'Source'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      <element       name            = 'QuoteAuthor'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    </sequence>
  </complexType>

  <complexType       name            = 'ItemizedList'>
    <sequence>
      <element       name            = 'ListTitle'
                     type            = 'Title'
                     minOccurs       = '0'/>
      <element       name            = 'ListItem'
                     type            = 'GeneralText'
                     maxOccurs       = 'unbounded'/>
    </sequence>
    <attribute       name            = 'Style'
                     type            = 'ItemizedListStyle'/>
    <attribute       name            = 'cdr:id'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'Compact'
                     type            = 'No'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'OrderedList'>
    <sequence>
      <element       name            = 'ListTitle'
                     type            = 'Title'
                     minOccurs       = '0'/>
      <element       name            = 'ListItem'
                     type            = 'GeneralText'
                     maxOccurs       = 'unbounded'/>
    </sequence>
    <attribute       name            = 'Style'
                     type            = 'OrderedListStyle'
                     minOccurs       = '0'/>
    <attribute       name            = 'cdr:id'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'Compact'
                     type            = 'No'
                     minOccurs       = '0'/>
  </complexType>

  <!-- CdrHref and CdrRef are not currently used but should be left for 
       future possible use
    -->

  <complexType       name            = 'CdrHref'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocId'
                     minOccurs       = '0'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'CdrRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'
                     minOccurs       = '0'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'ExternalRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:xref'
                     type            = 'anyURI'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'ProtocolLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
        <attribute   name            = 'comment'
                     type            = 'string'
                     minOccurs       = '0'/>
        <attribute   name            = 'LastReviewed'
                     type            = 'date'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'ProtocolFragmentLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocIdWithFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'ProtocolRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
        <attribute   name            = 'comment'
                     type            = 'string'
                     minOccurs       = '0'/>
        <attribute   name            = 'LastReviewed'
                     type            = 'date'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'ProtocolFragmentRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocIdWithFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'SummaryLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'DrugSummaryLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'SummaryFragmentLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocIdWithFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'SummaryRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'DrugSummaryRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocId'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'SummaryFragmentRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocIdWithFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'OrganizationLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'OrganizationOrPersonLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'OrganizationFragmentLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocIdWithFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'OrganizationRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'OrganizationFragmentRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocIdWithFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'OrganizationLinkWithOptionalFragment'>
    <simpleContent>
      <extension     base            = 'string'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocIdWithOptionalFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'string'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'PersonLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'PersonFragmentLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocIdWithFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'PersonRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'PersonFragmentRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocIdWithFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'TerminologyLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'TerminologyRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'PoliticalSubUnitLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'CitationLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
        <attribute   name            = 'comment'
                     type            = 'string'
                     minOccurs       = '0'/>
        <attribute   name            = 'LastReviewed'
                     type            = 'date'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'CitationFragmentLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocIdWithFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'CitationRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
        <attribute   name            = 'comment'
                     type            = 'string'
                     minOccurs       = '0'/>
        <attribute   name            = 'LastReviewed'
                     type            = 'date'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'CitationFragmentRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocIdWithFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'MiscellaneousLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'MiscellaneousFragmentLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocIdWithFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'MiscellaneousLinkWithOptionalFragment'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocIdWithOptionalFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'MiscellaneousRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'MiscellaneousFragmentRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocIdWithFragment'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'DiagnosisLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'GlossaryLink'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'GlossaryConceptLink'>
    <simpleContent>
      <extension     base            = 'string'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'GlossaryNameLink'>
    <simpleContent>
      <extension     base            = 'string'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'GlossaryRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocId'/>
        <attribute   name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'QandASet'>
    <sequence>
      <element       name            = 'MarkedUpTitle'
                     type            = 'Title'
                     minOccurs       = '0'/>
      <choice>
        <element     name            = 'QandADiv'
                     type            = 'QandASet'
                     maxOccurs       = 'unbounded'/>
        <element     name            = 'QandAEntry'
                     type            = 'QandAEntry'
                     maxOccurs       = 'unbounded'/>
      </choice>
    </sequence>
    <attribute       name            = 'cdr:id'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'QandAEntry'>
    <sequence>
      <element       name            = 'Question'
                     type            = 'GeneralText'/>
      <element       name            = 'Answer'
                     type            = 'GeneralText'
                     minOccurs       = '0'
                     maxOccurs       = 'unbounded'/>
    </sequence>
    <attribute       name            = 'cdr:id'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'DatedAction'>
    <sequence>
      <element       name            = 'ActionDescription'
                     type            = 'NotEmptyString'/>
      <element       name            = 'ActionDate'
                     type            = 'date'/>
      <element       name            = 'Comment'
                     type            = 'Comment'
                     minOccurs       = '0'/>
    </sequence>
  </complexType>

  <complexType       name            = 'PlaceHolder'>
    <simpleContent>
      <extension     base            = 'EmptyContent'>
        <attribute   name            = 'name'
                     type            = 'string'/>
      </extension>
    </simpleContent>
  </complexType>

  <simpleType        name            = 'EmptyContent'>
   <restriction      base            = 'string'>
    <maxLength       value           = '0'/>
   </restriction>
  </simpleType>

<!--=================================================================-->
<!--                         TABLE TYPES                             -->
<!--=================================================================-->
  <complexType       name            = 'Table'>
    <sequence>
      <element       name            = 'Title'
                     type            = 'Title'/>
      <element       name            = 'TitleAbbrev'
                     type            = 'Title'
                     minOccurs       = '0'/>
      <element       name            = 'TGroup'
                     type            = 'TGroup'
                     maxOccurs       = 'unbounded'/>
    </sequence>
    <attribute       name            = 'Frame'
                     type            = 'FrameAttrType'
                     minOccurs       = '0'/>
    <attribute       name            = 'RowSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'ColSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'TabStyle'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
    <attribute       name            = 'cdr:id'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'PdqKey'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'InformalTable'>
    <sequence>
      <element       name            = 'TGroup'
                     type            = 'TGroup'
                     maxOccurs       = 'unbounded'/>
    </sequence>
    <attribute       name            = 'Frame'
                     type            = 'FrameAttrType'
                     minOccurs       = '0'/>
    <attribute       name            = 'RowSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'ColSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'TabStyle'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'TGroup'>
    <sequence>
      <element       name            = 'ColSpec'
                     type            = 'ColSpec'
                     minOccurs       = '0'
                     maxOccurs       = 'unbounded'/>
      <element       name            = 'SpanSpec'
                     type            = 'SpanSpec'
                     minOccurs       = '0'
                     maxOccurs       = 'unbounded'/>
      <element       name            = 'THead'
                     type            = 'THeadOrFoot'
                     minOccurs       = '0'/>
      <element       name            = 'TFoot'
                     type            = 'THeadOrFoot'
                     minOccurs       = '0'/>
      <element       name            = 'TBody'
                     type            = 'TBody'/>
    </sequence>
    <attribute       name            = 'RowSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'ColSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'Align'
                     type            = 'Align'
                     minOccurs       = '0'/>
    <attribute       name            = 'Char'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'Charoff'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
    <attribute       name            = 'Cols'
                     type            = 'integer'/>
    <attribute       name            = 'TGroupStyle'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'ColSpec'>
    <attribute       name            = 'Align'
                     type            = 'Align'
                     minOccurs       = '0'/>
    <attribute       name            = 'Char'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'Charoff'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
    <attribute       name            = 'ColName'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
    <attribute       name            = 'ColNum'
                     type            = 'integer'
                     minOccurs       = '0'/>
    <attribute       name            = 'ColWidth'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'RowSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'ColSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'SpanSpec'>
    <attribute       name            = 'Align'
                     type            = 'Align'
                     minOccurs       = '0'/>
    <attribute       name            = 'Char'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'Charoff'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
    <attribute       name            = 'SpanName'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
    <attribute       name            = 'NameSt'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
    <attribute       name            = 'NameEnd'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
    <attribute       name            = 'RowSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'ColSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'THeadOrFoot'>
    <sequence>
      <element       name            = 'ColSpec'
                     type            = 'ColSpec'
                     minOccurs       = '0'
                     maxOccurs       = 'unbounded'/>
      <element       name            = 'Row'
                     type            = 'Row'
                     maxOccurs       = 'unbounded'/>
    </sequence>
    <attribute       name            = 'Valign'
                     type            = 'Valign'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'TBody'>
    <sequence>
      <element       name            = 'Row'
                     type            = 'Row'
                     maxOccurs       = 'unbounded'/>
    </sequence>
    <attribute       name            = 'Valign'
                     type            = 'Valign'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'Row'>
    <sequence>
      <element       name            = 'entry'
                     type            = 'Entry'
                     maxOccurs       = 'unbounded'/>
    </sequence>
    <attribute       name            = 'RowSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'Valign'
                     type            = 'Valign'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'Entry'
                     mixed           = 'true'>
    <choice          minOccurs       = '0'
                     maxOccurs       = 'unbounded'>
      <group         ref             = 'PhraseElements'/>
    </choice>
    <attribute       name            = 'RowSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'ColSep'
                     type            = 'YesOrNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'NameSt'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
    <attribute       name            = 'NameEnd'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
    <attribute       name            = 'SpanName'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
    <attribute       name            = 'MoreRows'
                     type            = 'integer'
                     minOccurs       = '0'/>
    <attribute       name            = 'Align'
                     type            = 'Align'
                     minOccurs       = '0'/>
    <attribute       name            = 'Char'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'Charoff'
                     type            = 'NMTOKEN'
                     minOccurs       = '0'/>
    <attribute       name            = 'Cols'
                     type            = 'integer'
                     minOccurs       = '0'/>
    <attribute       name            = 'Valign'
                     type            = 'Valign'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'DocumentationLink'>
 
   <simpleContent>

      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'
                     minOccurs       = '0'/>
      </extension>

    </simpleContent>
  </complexType>

  <complexType       name            = 'MediaLink'>
    <sequence>
      <element       name            = 'MediaID'
                     type            = 'MediaID'/>
      <element       name            = 'Caption'
                     type            = 'GeneralText'
                     minOccurs       = '0'
                     maxOccurs       = 'unbounded'/>
    </sequence>
    <attribute       name            = 'AlternativeText'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
    <attribute       name            = 'Inline'
                     type            = 'YesNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'UseCaption'
                     type            = 'YesNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'size'
                     type            = 'MediaSize'
                     minOccurs       = '0'/>
    <attribute       name            = 'thumb'
                     type            = 'YesNo'
                     minOccurs       = '0'/>
    <attribute       name            = 'MinWidth'
                     type            = 'integer'
                     minOccurs       = '0'/>
    <attribute       name            = 'cdr:id'
                     type            = 'NotEmptyString'
                     minOccurs       = '0'/>
  </complexType>

  <complexType       name            = 'MediaID'>
   <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
      </extension>
    </simpleContent>
  </complexType>

  <simpleType        name            = 'MediaSize'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'full'/>
      <enumeration   value           = 'half'/>
      <enumeration   value           = 'third'/>
      <enumeration   value           = 'quarter'/>
      <enumeration   value           = 'fifth'/>
      <enumeration   value           = 'sixth'/>
      <enumeration   value           = 'as-is'/>
      <enumeration   value           = 'three-quarters'/>
    </restriction>
  </simpleType>


  <complexType       name            = 'DocumentationFragmentLink'>
 
   <simpleContent>

      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocIdWithFragment'
                     minOccurs       = '0'/>
      </extension>

    </simpleContent>
  </complexType>

  <complexType       name            = 'SupplementaryInfoLink'>
   <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:ref'
                     type            = 'DocId'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'MediaRef'>
    <simpleContent>
      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'FragmentIdWithOptionalDocId'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name           = 'DocumentationRef'>
 
   <simpleContent>

      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocId'
                     minOccurs       = '0'/>
      </extension>

    </simpleContent>
  </complexType>

  <complexType       name            = 'DocumentationFragmentRef'>
 
   <simpleContent>

      <extension     base            = 'NotEmptyString'>
        <attribute   name            = 'cdr:href'
                     type            = 'DocIdWithFragment'
                     minOccurs       = '0'/>
      </extension>

    </simpleContent>
  </complexType>

  <complexType       name            = 'UpdateMode'>
 
   <simpleContent>

      <extension     base            = 'UpdateModeValidValues'>
        <attribute   name            = 'MailerType'
                     type            = 'MailerTypeValidValues'/>
      </extension>

    </simpleContent>
  </complexType>

  <complexType       name            = 'Comment'>
    <simpleContent>
      <extension     base            = 'string'>
        <attribute   name            = 'audience'
                     type            = 'CommentAudience'
                     minOccurs       = '0'/>
        <attribute   name            = 'user'
                     type            = 'string'
                     minOccurs       = '0'/>
        <attribute   name            = 'date'
                     type            = 'date'
                     minOccurs       = '0'/>
      </extension>
    </simpleContent>
  </complexType>

  <complexType       name            = 'RelatedDocumentsLinks'>
    <sequence>
      <element       name            = 'SupplementaryInfoLink'
                     type            = 'SupplementaryInfoLink'
                     maxOccurs       = 'unbounded'/>
    </sequence>
  </complexType>

<!--=================================================================-->
<!--                    COMMON SIMPLE TYPES                          -->
<!--=================================================================-->

  <simpleType        name            = 'CommentAudience'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'Internal'/>
      <enumeration   value           = 'External'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'NotEmptyString'>
    <restriction     base            = 'string'>
      <minLength     value           = '0'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'NonEmptyString'>
    <restriction     base            = 'string'>
      <minLength     value           = '1'/>
    </restriction>
  </simpleType>

  <!-- Fields that are really data, not text.  All whitespace normalized -->
  <simpleType        name            = 'DataString'>
    <restriction     base            = 'string'>
      <pattern       value           = '\S+( \S+)*'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'ItemizedListStyle'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'simple'/>
      <enumeration   value           = 'bullet'/>
      <enumeration   value           = 'dash'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'OrderedListStyle'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'Arabic'/>
      <enumeration   value           = 'UAlpha'/>
      <enumeration   value           = 'URoman'/>
      <enumeration   value           = 'LAlpha'/>
      <enumeration   value           = 'LRoman'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'YesOrNo'>
    <restriction     base            = 'integer'>
    <!--YesOrNo type used in tables only-->
      <enumeration   value           = '0'/>
      <enumeration   value           = '1'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'YesNo'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'Yes'/>
      <enumeration   value           = 'No'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'FrameAttrType'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'Sides'/>
      <enumeration   value           = 'Top'/>
      <enumeration   value           = 'Bottom'/>
      <enumeration   value           = 'TopBot'/>
      <enumeration   value           = 'All'/>
      <enumeration   value           = 'None'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'Align'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'Center'/>
      <enumeration   value           = 'Char'/>
      <enumeration   value           = 'Justify'/>
      <enumeration   value           = 'Left'/>
      <enumeration   value           = 'Right'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'Valign'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'Bottom'/>
      <enumeration   value           = 'Middle'/>
      <enumeration   value           = 'Top'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'DocId'>
    <restriction     base            = 'string'>
      <pattern       value           = 'CDR[0-9]{10}'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'DocIdWithFragment'>
    <restriction     base            = 'string'>
      <pattern       value           = 'CDR[0-9]{10}#[A-Za-z_]\S{0,31}'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'FragmentId'>
    <restriction     base            = 'string'>
      <pattern       value           = '[A-Za-z_]\S{0,31}'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'AddressType'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'US'/>
    <!--Will enforce (through programming outside schema):
        1. Zip should be required
        2. State should be required
        3. Country=US
        4. Phone should be required
      -->
      <enumeration   value           = 'Non-US'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'PrimarySecondary'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'Primary'/>
      <enumeration   value           = 'Secondary'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'No'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'No'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'Yes'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'Yes'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'YN'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'Y'/>
      <enumeration   value           = 'N'/>
      <!--For possible use in PubMed citations only-->
    </restriction>
  </simpleType>

  <simpleType        name            = 'DocIdWithOptionalFragment'>
    <restriction     base            = 'string'>
      <pattern       value           = 'CDR[0-9]{10}(#[A-Za-z_]\S*)?'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'FragmentIdWithOptionalDocId'>
    <restriction     base            = 'string'>
      <pattern       value           = '(CDR[0-9]{10})?#[A-Za-z_]\S*'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'FragmentRef'>
    <restriction     base            = 'string'>
      <pattern       value           = '#[A-Za-z_]\S*'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'MailerTypeValidValues'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'Protocol_SandP'/>
      <enumeration   value           = 'Protocol_Abstract'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'UpdateModeValidValues'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'Web-based'/>
      <enumeration   value           = 'External data file'/>
      <enumeration   value           = 'RSS'/>
      <enumeration   value           = 'COG'/>
      <enumeration   value           = 'Oncore'/>
      <enumeration   value           = 'NCIC'/>
      <enumeration   value           = 'Mail'/>
      <enumeration   value           = 'NCI Liaison Office'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'AltTitleType'>
    <restriction     base            = 'string'>
      <enumeration   value           = 'Short'/>
      <enumeration   value           = 'Display'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'EmailAddress'>
    <restriction     base            = 'string'>
      <pattern       value           = '[^\s@]+@[^\s@]+\.[^\s@]+'/>
    </restriction>
  </simpleType>

  <simpleType        name            = 'NMTOKENS'>
    <restriction     base            = 'string'>
      <pattern       value           = '\S+(\s+\S+)*'/>
    </restriction>
  </simpleType>

</schema>
