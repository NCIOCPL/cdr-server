<?xml version = "1.0" encoding="utf-8"?>
<!-- $Id$ -->
<!-- Filter title: Vendor Filter: Convert CG to Public Data -->
<!--

BZIssue::4675 - Create URLInfo Block
BZIssue::5149 - [Mobile/Deeplinking] Changes to vendor filter to strip out
BZIssue::5274 - Mobile images in Spanish Summaries
OCEPROJECT-2877: Post-processing vendor filter change to update Summary
                 title

==========================================================================
Filter to create Vendor Person XML documents 
========================================================================== -->
  <xsl:transform             xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr" 
               exclude-result-prefixes = "cdr">
    
  <xsl:output                   method = "xml" 
                  omit-xml-declaration = "no"
                              encoding = "utf-8"/>
   
  <xsl:include href = "cdr:name:Module: Global Filter Templates"/>

  <!-- Stylesheet level parameter DateFirstPub, passed in from the caller -->
  <xsl:param                      name = "audience"
                                select = "/Summary/SummaryMetaData
                                                  /SummaryAudience"/>
  <xsl:param                      name = "language"
                                select = "/Summary/SummaryMetaData
                                                  /SummaryLanguage"/>
  <xsl:param                      name = "DateFirstPub"
                                select = "''"/>


<!-- =================================================================
                        Copy control information 
     ================================================================= -->
  <xsl:template                  match = "/">

  <!--
  NOTE:  DO NOT modify the following section!
         This ensures that the DOCTYPE declaration is displayed on a single
         line followed by the root element on it's own line.
  ========================================================================= -->
  <xsl:text  disable-output-escaping = "yes">
&lt;!DOCTYPE </xsl:text>
  <xsl:value-of               select = "name(*)"/>
  <xsl:text  disable-output-escaping = "yes"> &gt;
</xsl:text>
  <!-- 
  End section
  ========================================================================= -->


   <xsl:apply-templates         select = "*" 
                                  mode = "copy"/>
  </xsl:template>


 <!--
 Remove the '-for HP' text from the SummaryTitle
 The text has been added for Cancer.gov only
 ======================================================= -->
 <xsl:template                   match = "SummaryTitle"
                                  mode = "copy">
  <xsl:copy>
   <!-- Old Titles, before -->
   <xsl:variable                  name = "beforeENold"
                                select = "substring-before(., '&#8211;f')"/>
   <xsl:variable                  name = "beforeESold"
                                select = "substring-before(., '&#8211;p')"/>

   <!-- New Titles, before -->
   <xsl:variable                  name = "beforeENhp"
                                select = "substring-before(., '&#8211;H')"/>
   <xsl:variable                  name = "beforeENpat"
                                select = "substring-before(., '&#8211;P')"/>
   <xsl:variable                  name = "beforeES"
                                select = "substring-before(., '&#8211;V')"/>

   <!-- Old Titles, after -->
   <xsl:variable                  name = "afterENold"
                                select = "substring-after(., 
                                        '&#8211;for health professionals')"/>
   <xsl:variable                  name = "afterESold"
                                select = "substring-after(., 
                                        '&#8211;para profesionales de salud')"/>

   <!-- New Titles, after -->
   <xsl:variable                  name = "afterENhp"
                                select = "substring-after(., 
                                        '&#8211;Health Professional Version')"/>
   <xsl:variable                  name = "afterENpat"
                                select = "substring-after(., 
                                        '&#8211;Patient Version')"/>
   <xsl:variable                  name = "afterEShp"
                                select = "substring-after(., 
                                        'para profesionales de salud')"/>
   <xsl:variable                  name = "afterESpat"
                                select = "substring-after(., 
                                        'para pacientes')"/>
   <!-- Patient summaries -->
   <xsl:choose>
    <xsl:when                     test = "$audience = 'Patients'">
     <xsl:choose>
      <!-- Spanish summaries -->
      <xsl:when                   test = "$language = 'Spanish'">
       <xsl:choose>
        <!-- New - the old format didn't modify patient titles -->
        <xsl:when                 test = "$beforeES">
         <xsl:value-of          select = "concat($beforeES, $afterESpat)"/>
        </xsl:when>
        <xsl:otherwise>
         <xsl:value-of          select = "."/>
        </xsl:otherwise> 
       </xsl:choose>
      </xsl:when>
      <!-- English summaries -->
      <xsl:otherwise>
       <xsl:choose>
        <!-- New - the old format didn't modify patient titles -->
        <xsl:when                 test = "$beforeENpat">
         <xsl:value-of          select = "concat($beforeENpat, $afterENpat)"/>
        </xsl:when>
        <xsl:otherwise>
         <xsl:value-of          select = "."/>
        </xsl:otherwise> 
       </xsl:choose>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:when>
    <!-- HP summaries -->
    <xsl:otherwise>
     <xsl:choose>
      <!-- Spanish summaries -->
      <xsl:when                   test = "$language = 'Spanish'">
       <xsl:choose>
        <xsl:when                 test = "$beforeESold">
         <xsl:value-of          select = "concat($beforeESold, $afterESold)"/>
        </xsl:when>
        <xsl:otherwise>
         <xsl:value-of          select = "concat($beforeES, $afterEShp)"/>
        </xsl:otherwise> 
       </xsl:choose>
      </xsl:when>
      <!-- English summaries -->
      <xsl:otherwise>
       <xsl:choose>
        <xsl:when                 test = "$beforeENold">
         <xsl:value-of          select = "concat($beforeENold, $afterENold)"/>
        </xsl:when>
        <xsl:otherwise>
         <xsl:value-of          select = "concat($beforeENhp, $afterENhp)"/>
        </xsl:otherwise> 
       </xsl:choose>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:otherwise>
   </xsl:choose>
   <!-- xsl:apply-templates/ -->
  </xsl:copy>
 </xsl:template>


 <!--
 Remove various elements from the licensee output
 ======================================================= -->
 <xsl:template                   match = "ArmsOrGroups         |
                                          MobileURL            |
                                          OfficialProtocolTitle|
                                          PermaTargs           |
                                          RegulatoryInformation|
                                          CTGovInterventionType|
                                          UrlInfo"
                                  mode = "copy"/>

 <!--
 Remove ProtocolSpecialCategory from CTGovProtocols 
 (but not InScopeProtocols)
 ======================================================= -->
 <xsl:template                   match = "CTGovProtocol/
                                          ProtocolSpecialCategory"
                                  mode = "copy"/>

 <!--
 Licensees only receive 'screen' output but no content
 intended for ebook or mobile only.  Therefore, if the
 exclude attribute lists 'screen' we drop the entire section.
 If the attribute lists anything else (mobile, none) we
 will just drop the attribute.
 ======================================================= -->
 <xsl:template                   match = "SummarySection[@ExcludedDevices]"
                                  mode = "copy">
  <xsl:choose>
   <xsl:when                      test = "@ExcludedDevices = 'screen'">
    <!-- Do nothing and drop the section -->
   </xsl:when>
   <xsl:otherwise>
    <xsl:copy>
     <xsl:apply-templates       select = "* | @* |
                                          text() |
                                          processing-instruction() |
                                          comment()"
                                  mode = "copy"/>
    </xsl:copy>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!--
 Licensees don't receive the URL attribute of the 
 RelatedSummaryRef/RelatedDrugSummaryRef - drop it.
 ======================================================= -->
 <xsl:template                   match = "GlossaryTerm/RelatedInformation/
                                            RelatedSummaryRef/@url
                                          |
                                          GlossaryTerm/RelatedInformation/
                                            RelatedDrugSummaryRef/@url"
                                  mode = "copy">
 </xsl:template>


 <!--
 Remove the ExcludedDevices attribute
 ======================================================= -->
 <xsl:template                   match = "@ExcludedDevices" 
                                  mode = "copy"/>

 <!--
 Licensees only receive 'screen' output but no content
 intended for ebook or mobile only.  Therefore, if the
 include attribute lists 'screen' we drop the attribute.
 If the attribute lists anything else (mobile, none) we
 will just drop the entire section.
 ======================================================= -->
 <xsl:template                   match = "SummarySection[@IncludedDevices] |
                                          MediaLink[@IncludedDevices]"
                                  mode = "copy">
  <xsl:choose>
   <xsl:when                      test = "@IncludedDevices = 'screen'">
    <xsl:copy>
     <xsl:apply-templates       select = "* | @* |
                                          text() |
                                          processing-instruction() |
                                          comment()"
                                  mode = "copy"/>
    </xsl:copy>
   </xsl:when>
   <xsl:otherwise>
    <!-- Do nothing and drop the section -->
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>

 <!--
 Remove the IncludedDevices attribute
 ======================================================= -->
 <xsl:template                   match = "@IncludedDevices" 
                                  mode = "copy"/>
</xsl:transform>
