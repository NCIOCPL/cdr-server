<?xml version="1.0" ?>
<!-- Filter title: Vendor Filter: Convert CG to Public Data -->
<!--

BZIssue::4675 - Create URLInfo Block
BZIssue::5149 - [Mobile/Deeplinking] Changes to vendor filter to strip out
BZIssue::5274 - Mobile images in Spanish Summaries
OCEPROJECT-2877: Post-processing vendor filter change to update Summary
                 title

==========================================================================
Filter to create Vendor Person XML documents
========================================================================== -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
               exclude-result-prefixes = "cdr">

  <xsl:output                   method = "xml"
                  omit-xml-declaration = "no"
                              encoding = "utf-8"/>

  <xsl:include href = "cdr:name:Module: Global Filter Templates"/>

  <!-- Stylesheet level parameter DateFirstPub, passed in from the caller -->
  <xsl:param                      name = "audience"
                                select = "/Summary/SummaryMetaData
                                                  /SummaryAudience"/>
  <xsl:param                      name = "language"
                                select = "/Summary/SummaryMetaData
                                                  /SummaryLanguage"/>
  <xsl:param                      name = "DateFirstPub"
                                select = "''"/>


  <!--
  =================================================================
                        Copy control information
  ================================================================= -->
  <xsl:template                  match = "/">

  <!--
  NOTE:  DO NOT modify the following section!
         This ensures that the DOCTYPE declaration is displayed on a single
         line followed by the root element on it's own line.
  ========================================================================= -->
  <xsl:text    disable-output-escaping = "yes">
&lt;!DOCTYPE </xsl:text>
  <xsl:value-of                 select = "name(*)"/>
  <xsl:text    disable-output-escaping = "yes"> &gt;
</xsl:text>
  <!--
  End section
  ========================================================================= -->


   <xsl:apply-templates         select = "*"
                                  mode = "copy"/>
  </xsl:template>


 <!--
 Remove the '-for HP' text from the SummaryTitle
 The text has been added for Cancer.gov only

 With the introduction of the SVPC summaries the additional
 text "-Patient Version" doesn't exist for patient summaries anymore.  This
 change only needs to be applied to legacy summaries.
 ========================================================================== -->
 <xsl:template                   match = "SummaryTitle[not(/Summary/@PartnerMergeSet)]"
                                  mode = "copy">
  <xsl:copy>
   <!-- New Titles, before -->
   <xsl:variable                  name = "beforeENhp"
                                select = "substring-before(., '&#8211;H')"/>
   <xsl:variable                  name = "beforeENpat"
                                select = "substring-before(., '&#8211;P')"/>
   <xsl:variable                  name = "beforeES"
                                select = "substring-before(., '&#8211;V')"/>

   <!-- Patient summaries -->
   <xsl:choose>
    <xsl:when                     test = "$audience = 'Patients'">
     <xsl:choose>
      <!-- Spanish summaries -->
      <xsl:when                   test = "$language = 'Spanish'">
       <!-- New - the old format didn't modify patient titles -->
       <xsl:value-of            select = "$beforeES"/>
      </xsl:when>
      <!-- English summaries -->
      <xsl:otherwise>
       <!-- New - the old format didn't modify patient titles -->
       <xsl:value-of            select = "$beforeENpat"/>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:when>
    <!-- HP summaries -->
    <xsl:otherwise>
     <xsl:choose>
      <!-- Spanish summaries -->
      <xsl:when                   test = "$language = 'Spanish'">
       <xsl:value-of            select = "$beforeES"/>
      </xsl:when>
      <!-- English summaries -->
      <xsl:otherwise>
       <xsl:value-of            select = "$beforeENhp"/>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:copy>
 </xsl:template>


 <!--
 The AltTitle[@TitleType=Short] has been removed and replaced with a
 Browser title and a CTHP title.  These titles are only for
 Drupal and have no meaning for the partners.  We're copying
 the CTHP title and continue to supply a Short title for the
 partner output while removing the Browser title.
 ============================================================ -->
 <xsl:template                   match = "AltTitle[@TitleType = 'Browser']"
                                  mode = "copy"/>
 <xsl:template                   match = "AltTitle[@TitleType = 'CancerTypeHomePage']"
                                  mode = "copy">
  <xsl:element                    name = "AltTitle">
   <xsl:attribute                 name = "TitleType">
    <xsl:text>Short</xsl:text>
   </xsl:attribute>
   <xsl:apply-templates/>
  </xsl:element>
 </xsl:template>


 <!--
 Remove the element ExtraDefinitionLinks but keep the content
 ============================================================ -->
 <xsl:template                   match = "ExtraDefinitionLinks"
                                  mode = "copy">
  <xsl:apply-templates          select = "* | @* |
                                          text() |
                                          processing-instruction() |
                                          comment()"
                                  mode = "copy"/>
 </xsl:template>


 <!--
 Remove various elements from the licensee output
 ======================================================= -->
 <xsl:template                   match = "ArmsOrGroups         |
                                          MobileURL            |
                                          OfficialProtocolTitle|
                                          PermaTargs           |
                                          RegulatoryInformation|
                                          CTGovInterventionType|
                                          UrlInfo"
                                  mode = "copy"/>

 <!--
 Remove ProtocolSpecialCategory from CTGovProtocols
 (but not InScopeProtocols)
 ======================================================= -->
 <xsl:template                   match = "CTGovProtocol/
                                          ProtocolSpecialCategory"
                                  mode = "copy"/>

 <!--
 Licensees only receive 'screen' output but no content
 intended for ebook or mobile only.  Therefore, if the
 exclude attribute lists 'screen' we drop the entire section.
 If the attribute lists anything else (mobile, none) we
 will just drop the attribute.
 ======================================================= -->
 <xsl:template                   match = "SummarySection[@ExcludedDevices]"
                                  mode = "copy">
  <xsl:choose>
   <xsl:when                      test = "@ExcludedDevices = 'screen'">
    <!-- Do nothing and drop the section -->
   </xsl:when>
   <xsl:otherwise>
    <xsl:copy>
     <xsl:apply-templates       select = "* | @* |
                                          text() |
                                          processing-instruction() |
                                          comment()"
                                  mode = "copy"/>
    </xsl:copy>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!--
 Licensees don't receive the URL attribute of the
 RelatedSummaryRef/RelatedDrugSummaryRef - drop it.
 ======================================================= -->
 <xsl:template                   match = "GlossaryTerm/RelatedInformation/
                                            RelatedSummaryRef/@url
                                          |
                                          GlossaryTerm/RelatedInformation/
                                            RelatedDrugSummaryRef/@url"
                                  mode = "copy">
 </xsl:template>


 <!--
 Licensees don't receive the @UseWith or @audience attributes added
 to the RelatedGlossaryTermRef for cancer.gov.  Also, the duplication of
 the elements for EN/ES, HP/Patient needs to be removed, so we're
 dropping HP and Spanish records and dropt the attributes.
 ======================================================================= -->
 <xsl:template                   match = "GlossaryTerm/RelatedInformation/
                                            RelatedGlossaryTermRef[
                                            @UseWith = 'es'] |
                                          GlossaryTerm/RelatedInformation/
                                            RelatedGlossaryTermRef[
                                            @audience = 'Health_professionals']
                                            |
                                          GlossaryTerm/RelatedInformation/
                                            RelatedGlossaryTermRef/@audience
                                            |
                                          GlossaryTerm/RelatedInformation/
                                            RelatedGlossaryTermRef/@UseWith"
                                  mode = "copy">
 </xsl:template>


 <!--
 Licensees don't receive the CGovInfo data
 ======================================================= -->
 <xsl:template                   match = "CGovInfo"
                                  mode = "copy">
 </xsl:template>


 <!--
 Remove the ExcludedDevices attribute
 ======================================================= -->
 <xsl:template                   match = "@ExcludedDevices"
                                  mode = "copy"/>

 <!--
 Licensees only receive 'screen' output but no content
 intended for ebook or mobile only.  Therefore, if the
 include attribute lists 'screen' we drop the attribute.
 If the attribute lists anything else (mobile, none) we
 will just drop the entire section.
 ======================================================= -->
 <xsl:template                   match = "SummarySection[@IncludedDevices] |
                                          MediaLink[@IncludedDevices]"
                                  mode = "copy">
  <xsl:choose>
   <xsl:when                      test = "@IncludedDevices = 'screen'">
    <xsl:copy>
     <xsl:apply-templates       select = "* | @* |
                                          text() |
                                          processing-instruction() |
                                          comment()"
                                  mode = "copy"/>
    </xsl:copy>
   </xsl:when>
   <xsl:otherwise>
    <!-- Do nothing and drop the section -->
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>

 <!--
 Remove the IncludedDevices attribute
 Also remove unused MediaLink attributes
 ======================================================= -->
 <xsl:template                   match = "@IncludedDevices |
                                          @inline          |
                                          @MinWidth        |
                                          @placement       |
                                          @size            |
                                          @template        |
                                          @thumb"
                                  mode = "copy"/>

 <!--
 Remove the @PartnerMergSet attribute used for the SVPC project
 ===================================================================== -->
 <xsl:template                   match = "@PartnerMergeSet"
                                  mode = "copy"/>


 <!--
 Convert the SummaryRef elements to an ExternalRef element and point
 to cancer.gov if it points to a SVPC document. The SVPC documents are
 not part of the documents the partner receives, so we'll have to
 point to the original on CG. If the document doesn't point to
 a SVPC element keep the SummaryRef as is.
 ===================================================================== -->
 <xsl:template                   match = "SummaryRef"
                                  mode = "copy">

  <xsl:variable                   name = "docNormId">
   <xsl:choose>
    <xsl:when                     test = "contains(@href, '#_sm_')">
     <xsl:value-of              select = "number(substring-before(
                                            substring-after(@href, '#_sm_CDR'), '_'))"/>
    </xsl:when>
    <xsl:otherwise>
     <xsl:value-of              select = "number(
                                           substring-before(
                                           concat(
                                           substring-after(@href, 'CDR'),
                                                            '#'), '#'))"/>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:variable>

  <xsl:variable                   name = "fragmentId">
   <xsl:choose>
    <xsl:when                     test = "contains(@href, '#')">
     <xsl:value-of              select = "substring-after(@href, '#')"/>
    </xsl:when>
    <xsl:otherwise>
     <xsl:text></xsl:text>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:variable>

  <!--
  Identify if the CDR-ID contained in the module fragment is a SVPC document
  or regular module
  ========================================================================== -->
  <xsl:variable                   name = "sqlQuery">
         SELECT s.doc_id, s.value AS "SVPC", u.value AS "SVPCURL"
           FROM query_term_pub s
           JOIN query_term_pub u
		     ON u.doc_id = s.doc_id
		    AND u.path = '/Summary/SummaryMetaData/SummaryURL/@cdr:xref'
          WHERE s.doc_id = ?
            AND s.path = '/Summary/@SVPC'
  </xsl:variable>

  <xsl:variable                   name = "queryRows"
                                select = "document(cdr:escape-uri(
                                           concat('cdrutil:/sql-query/',
                                                   $sqlQuery,
                                                   '~',
                                                   $docNormId)))"/>
  <xsl:variable                   name = "isSVPC"
                                select = "$queryRows
                                         /SqlResult
                                         /row
                                         /col[@name='SVPC']"/>

  <xsl:variable                   name = "svpcurl"
                                select = "$queryRows
                                         /SqlResult
                                         /row
                                         /col[@name='SVPCURL']"/>

  <xsl:choose>
   <xsl:when                      test = "$isSVPC = 'Yes'">
    <xsl:element                  name = "ExternalRef">

     <xsl:attribute               name = "xref">
      <xsl:value-of             select = "$svpcurl"/>

      <xsl:choose>
      <xsl:when                   test = "substring-after(@href, '#_sm_CDR')">
       <xsl:text>#</xsl:text>
       <xsl:value-of            select = "concat('_', substring-after(
                                           substring-after(@href, '#_sm_CDR'), '_'))"/>
      </xsl:when>
      <xsl:when                   test = "substring-after(@href, '#')">
       <xsl:text>#</xsl:text>
       <xsl:value-of            select = "concat('_', substring-after(
                                           substring-after(@href, '#'), '_'))"/>
      </xsl:when>
      </xsl:choose>
     </xsl:attribute>

     <xsl:value-of              select = "."/>
    </xsl:element>
   </xsl:when>
   <xsl:otherwise>
    <xsl:copy-of                select = "."/>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>

</xsl:transform>
