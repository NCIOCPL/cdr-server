<CdrDoc Type='Filter' Id='CDR0000000136'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">Vendor Filter: PoliticalSubUnit</DocTitle>
<DocComment>CVS-V1.12: Fixing cdr:ref attribute</DocComment><ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml      version = "1.0"?>
<!-- 
======================================================================
             Filter to create Vendor XML for Political SubUnit
====================================================================== -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
               exclude-result-prefixes = "cdr">
    
  
 <xsl:include  href = "cdr:name:Module: Global Filter Templates"/>
  
 <xsl:output                    method = "xml" 
                  omit-xml-declaration = "no"/>

 <!-- 
 =================================================================== 
 Copy DocId, PoliticalSubUnitFullName,PoliticalSubUnitShortName, and
 Country 
 =================================================================== -->
 <!-- Stylesheet level parameter DateFirstPub, passed in from the caller -->
 <xsl:param                       name = "DateFirstPub"
                                select = "''"/>

 <!-- 
 ======================================================================
 Main Template for Political SubUnit
 ====================================================================== -->
 <xsl:template                   match = "PoliticalSubUnit">
  <xsl:element name='{name()}'>
   <xsl:for-each                select = "document('cdrutil:/docid')">
    <xsl:attribute                name = "id">
     <xsl:value-of              select = "."/>
    </xsl:attribute>
   </xsl:for-each>

   <xsl:attribute                 name = "LegacyPDQID">
    <xsl:value-of               select = "PdqKey"/>
   </xsl:attribute>

   <xsl:apply-templates         select = "PoliticalSubUnitFullName" 
                                  mode = "copy"/>
   <xsl:apply-templates         select = "PoliticalSubUnitShortName" 
                                  mode = "copy"/>
   <xsl:apply-templates         select = "PoliticalSubUnitAlternateName" 
                                  mode = "copy"/>
   <xsl:variable                  name = "ref" 
                                select = "Country/@cdr:ref"/>
   <CountryName                    ref = "{$ref}">
    <xsl:value-of               select = "Country/CountryFullName"/> 
   </CountryName>

   <xsl:choose>
    <xsl:when                     test = "CdrDocCtl/FirstPub/Date">
     <DateFirstPublished>
      <xsl:value-of             select = "substring-before (CdrDocCtl/
                                          FirstPub/Date,'T')"/>
     </DateFirstPublished>
    </xsl:when>
    <xsl:otherwise>
     <xsl:call-template           name = "getDateFirstPub">
      <xsl:with-param             name = "date"
                                select = "$DateFirstPub"/>
     </xsl:call-template>    
    </xsl:otherwise>
   </xsl:choose>
 
   <xsl:if test = "DateLastModified">
    <xsl:apply-templates        select = "DateLastModified" 
                                  mode = "copy"/>
   </xsl:if>

  </xsl:element>
 </xsl:template>
</xsl:transform>
]]>
</CdrDocXml>
</CdrDoc>