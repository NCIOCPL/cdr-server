<?xml version="1.0" ?>
<!-- Filter title: Summaries Toc Report -->
<!--
====================================================================

Filter to create the table of content (TOC) for summaries up to
a specified level.

Volker Englisch, 2003-08-12

BZIssue::5104 - [Summaries] Changes to Summaries TOC Lists report
BZISSUE::5273 - [Summaries] Identifying Modules in Summary Reports
OCECDR-3575   - [Summaries] Identifying Modules in Summary Reports

==================================================================== -->
<xsl:transform              xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                            xmlns:cdr = "cips.nci.nih.gov/cdr"
                              version = "1.0"
              exclude-result-prefixes = "cdr">

 <xsl:output                   method = "html"
                             encoding = "UTF-8"/>

 <xsl:include href = "cdr:name:Module: STYLE Default"/>
 <xsl:include href = "cdr:name:Module: STYLE QC Summary"/>

 <xsl:variable                    name = "docID"
                                select = "document('cdrutil:/docid')"/>
 <xsl:param                       name = "showLevel"
                                select = "'5'"/>
 <xsl:param                       name = "showId"
                                select = "'N'"/>
 <!--
 ===================================================================
 Main template
 =================================================================== -->
 <xsl:template                   match = "/">
   <xsl:apply-templates         select = "Summary"/>
 </xsl:template>

 <!--
 =====================================================================
 Produce the HTML BODY
 ===================================================================== -->
 <xsl:template                   match = "Summary">
  <H5>
   <xsl:if                        test = "$showId = 'Y'">
    <xsl:value-of               select = "concat('CDR',
                                           number(
                                           substring-after($docID, 'CDR')))"/>
    <xsl:text> - </xsl:text>
   </xsl:if>
   <xsl:apply-templates         select = "SummaryTitle"
                                  mode = "TOC"/>
  </H5>

  <xsl:if                         test = "SummarySection">
   <UL CLASS="lnone">
    <xsl:for-each               select = "SummarySection">
     <xsl:call-template           name = "TocSummarySection">
      <xsl:with-param             name = "level"
                                select = "1"/>
     </xsl:call-template>
    </xsl:for-each>
   </UL>
  </xsl:if>

  <hr/>

  <xsl:apply-templates/>
 </xsl:template>


 <!--
 =====================================================================
 Display TOC Summary Title with Deletion and Insertion
 ===================================================================== -->
 <xsl:template                   match = "SummaryTitle"
                                  mode = "TOC">
  <xsl:apply-templates/>

  <xsl:if                         test = "/Summary/@ModuleOnly">
   <xsl:text> (Module)</xsl:text>
  </xsl:if>
 </xsl:template>


 <!--
 =====================================================================
 Display inline markup
 ===================================================================== -->
 <xsl:template                   match = "GeneName |
                                          ForeignWord |
                                          ScientificName |
                                          Emphasis">
  <xsl:element                    name = "em">
   <xsl:apply-templates/>
  </xsl:element>

 </xsl:template>


 <!--
 =====================================================================
 Display inline markup
 ===================================================================== -->
 <xsl:template                   match = "Strong">
  <xsl:element                    name = "strong">
   <xsl:apply-templates/>
  </xsl:element>

 </xsl:template>


 <!--
 =====================================================================
 Display SummarySection in TOC.
 ===================================================================== -->
 <xsl:template                    name = "TocSummarySection">
  <xsl:param                      name = "level"/>

  <xsl:if                         test = "Title">
   <LI>
    <xsl:apply-templates        select = "Title"
                                  mode = "TOC"/>
   </LI>
  </xsl:if>

  <xsl:if                         test = "SummarySection and
                                            $level &lt; $showLevel">
   <UL Class="lnone">
    <xsl:for-each               select = "SummarySection">
      <xsl:call-template          name = "TocSummarySection">
       <xsl:with-param            name = "level"
                                select = "$level + 1"/>
      </xsl:call-template>
    </xsl:for-each>
   </UL>
  </xsl:if>
 </xsl:template>


 <!--
 =====================================================================
 Display SummarySection in TOC.
 ===================================================================== -->
 <xsl:template                   match = "Title"
                                  mode = "TOC">
  <xsl:apply-templates            mode = "tocMarkup"/>
 </xsl:template>


 <!--
 =====================================================================
 Display SummarySection in TOC.
 ===================================================================== -->
 <xsl:template                   match = "Insertion | Deletion"
                                  mode = "tocMarkup">
  <xsl:variable                   name = "markup"
                                select = "name()"/>
  <xsl:element                    name = "span">
   <xsl:attribute                 name = "class">
    <xsl:value-of               select = "$markup"/>
   </xsl:attribute>
   <xsl:attribute                 name = "style">
    <xsl:choose>
     <xsl:when                    test = "$markup = 'Insertion'">
       <xsl:value-of            select = "'color: red;'"/>
     </xsl:when>
     <xsl:otherwise>
       <xsl:value-of            select = "'color:red;text-decoration:line-through'"/>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:attribute>
   <xsl:value-of                select = "."/>
  </xsl:element>
 </xsl:template>


 <!--
 ================================================================
 This template deletes data elements not used in the display
 ================================================================ -->
 <xsl:template                 match = "*"/>
 <!--
 <xsl:template                 match = "AltTitle           |
                                        DateLastModified   |
                                        Deletion           |
                                        Diagnosis          |
                                        DocId              |
                                        Insertion          |
                                        ItemizedList       |
                                        LastReviewed       |
                                        MainTopics         |
                                        OrderedList        |
                                        Para               |
                                        PatientVersionOf   |
                                        PDQBoard           |
                                        PdqKey             |
                                        PurposeText        |
                                        ReplacementFor     |
                                        SecondaryTopics    |
                                        SectionType        |
                                        SummaryAudience    |
                                        SummaryDescription |
                                        SummaryLanguage    |
                                        SummarySection     |
                                        SummaryTitle       |
                                        SummaryType        |
                                        SummaryURL         |
                                        TranslationOf"/>
-->
</xsl:transform>
