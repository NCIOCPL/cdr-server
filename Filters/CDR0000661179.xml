<?xml version="1.0" ?>
<!-- Filter title: Licensee QC Report Filter -->
<!--
 ================================================================
 Filter to create a PDQ Partner (a.k.a. Licensee) QC Report
 Written by Volker Englisch
 ================================================================ -->
<xsl:transform               xmlns:xsl = 'http://www.w3.org/1999/XSL/Transform'
                             xmlns:cdr = 'cips.nci.nih.gov/cdr'
                               version = '1.0'>

 <xsl:output                    method = "html"/>

 <xsl:include  href = "cdr:name:Module: Attribute Sets"/>
 <xsl:include  href = "cdr:name:Module: InLine Markup Formatter"/>
 <xsl:include  href = "cdr:name:Module: QC Filter Templates"/>
 <xsl:include  href = "cdr:name:Module: QC Filter Templates - Summary"/>
 <xsl:include  href = "cdr:name:Module: Table Formatter"/>
 <xsl:include  href = "cdr:name:Module: STYLE Default"/>
 <xsl:include  href = "cdr:name:Module: STYLE RS Insertion Deletion"/>

 <xsl:variable                    name = "docID"
                                select = "document('cdrutil:/docid')"/>
 <xsl:variable                    name = "whoAmI"
                                select = "'Licensee'"/>
 <xsl:variable                    name = "dateTime"
                                select = "document('cdrutil:/date')"/>

 <!--
 ======================================================================
 Main Template
 ====================================================================== -->
 <xsl:template                   match = "/">
  <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
  <xsl:element                    name = "html">
   <xsl:element                   name = "head">
    <xsl:variable                 name = "cdrdocs"
                                select = "document('cdrx:/*/CdrCtl')"/>

    <xsl:element                  name = "title">
     <xsl:value-of              select = "concat('CDR',
                                           number(
                                           substring-after($docID, 'CDR')))"/>
     <xsl:text>: </xsl:text>
     <xsl:value-of              select = "substring-before(
                                           concat($cdrdocs/CdrDocCtl/
                                                  DocTitle, ';'), ';')"/>
    </xsl:element>

    <xsl:element                  name = "style">
     <xsl:attribute               name = "type">
      <xsl:text>text/css</xsl:text>
     </xsl:attribute>
     <xsl:text>
     body          { font-family: Arial, Helvetica, sans-serif; 
                     padding: 0; }
     .miscdoc   { background-color: DFDFDF; }
     .label-big    { font-size: 1.1em;     /* Using 1.2m appears to big on IE */
                     font-weight: bold;
                     margin-top: 1.0em; }  /* Using medium to small on FireFx */
     .label-small  { font-weight: bold; }
     .text-bold    { font-weight: bold; }
     ul            { margin: 0 0 0 16 ;
                     padding-left: 0;}
     li            { margin: .1em; }
     .comment-attrib {
                     font-style: italic; }
     /* Clear floats after the columns */
     .status-info  { margin-top: 1.0em; }
     .row          { margin-top: .5em; }
     .row:after    { content: "";
                     display: table;
                     clear: both; }
     .column       { float: left; 
                     min-height: 1px; }
     .left         { width: 30%; }
     .right        { width: 70%; }
     .image-center { text-align: center;
                     margin-top: 1.0em; }
     .big          { font-size: 14pt;
                     font-weight: bold; }
     .center       { text-align: center; }
     .date-header  { text-align: center;
                     font-weight: bold;
                     margin-bottom: 14px; }
     table         { width: 100%; }
     table, tr, td, th { border: 1px solid black;
                         border-collapse: collapse; }
     .language     { font-weight: bold; }
     .label

     </xsl:text>
     <xsl:call-template           name = "defaultStyle"/>
     <xsl:call-template           name = "rsInsertionDeletionStyle"/>
    </xsl:element>
   </xsl:element>

   <xsl:apply-templates         select = "Licensee"/>

  </xsl:element>
 </xsl:template>


 <!--
 ===================================================================
 Generate the HTML for the Licensee QC Report
 =================================================================== -->
 <xsl:template                   match = "Licensee">
  <xsl:element                    name = "body">
   <xsl:attribute                 name = "class">
    <xsl:text>report</xsl:text>
   </xsl:attribute>

   <!--
   ==================================================================
   Display Report Name
   ================================================================== -->
   <xsl:call-template             name = "qcReportHeader">
    <xsl:with-param               name = "reportName"
                                select = "'PDQ Partner'"/>
   </xsl:call-template>

   <!--
   ====================================================================
   Display date as subheading
   ==================================================================== -->
   <xsl:call-template             name = "blockTitle">
    <xsl:with-param               name = "label"
                                select = "concat('CDR',
                                           number(
                                           substring-after($docID, 'CDR')))"/>
   </xsl:call-template>


  <!--
  ===================================================================
  Display Document Title
  =================================================================== -->
   <xsl:apply-templates         select = "LicenseeInformation"/>


   <xsl:apply-templates         select = "ContactPersons"/>

   <xsl:apply-templates         select = "FtpInformation"/>

   <xsl:call-template             name = "labelTextRow">
    <xsl:with-param               name = "label"
                                select = "'Date Last Modified'"/>
    <xsl:with-param               name = "labelSize"
                                select = "'label-small'"/>
    <xsl:with-param               name = "text"
                                select = "DateLastModified"/>
   </xsl:call-template>

  </xsl:element>
 </xsl:template>


 <!--
 ===================================================================
 Generate the HTML for the Licensee Name Information
 =================================================================== -->
 <xsl:template                   match = "LicenseeInformation">

  <xsl:call-template              name = "labelStatusRow">
   <xsl:with-param                name = "label"
                                select = "'PDQ Partner Information'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-big'"/>
  </xsl:call-template>

  <xsl:apply-templates          select = "LicenseeNameInformation"/>

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'Organization Type'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "OrganizationType"/>
  </xsl:call-template>

  <xsl:apply-templates          select = "ContactDetail"/>

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'PDQ Partner Type'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "LicenseeType"/>
  </xsl:call-template>

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'PDQ Partner Status'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "LicenseeStatus"/>
  </xsl:call-template>

  <xsl:apply-templates          select = "LicenseeStatusDates"/>

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'Comment'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "Comment"/>
  </xsl:call-template>

 </xsl:template>


 <!--
 ===================================================================
 Generate the HTML for the Licensee Name Information
 =================================================================== -->
 <xsl:template                   match = "LicenseeNameInformation">
  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'Official Name'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "OfficialName/
                                          Name"/>
  </xsl:call-template>

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'Alternate Name'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "OtherNames/
                                          AlternateName"/>
  </xsl:call-template>

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'Former Name'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "OtherNames/
                                          FormerName"/>
  </xsl:call-template>

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'Name Comment'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "Comment"/>
  </xsl:call-template>

 </xsl:template>


 <!--
 ===================================================================
 Generate the HTML for the Licensee Status Dates
 =================================================================== -->
 <xsl:template                   match = "LicenseeStatusDates">
  <xsl:call-template              name = "blockTitle">
   <xsl:with-param                name = "label"
                                select = "'Licensee Status Dates'"/>
  </xsl:call-template>

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'Test Activation'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "TestActivation"/>
  </xsl:call-template>

  <xsl:if                         test = "TestExtension">
   <xsl:call-template             name = "labelTextRow">
    <xsl:with-param               name = "label"
                                select = "'Test Extension'"/>
    <xsl:with-param               name = "labelSize"
                                select = "'label-small'"/>
    <xsl:with-param               name = "text"
                                select = "TestExtension"/>
   </xsl:call-template>
  </xsl:if>

  <xsl:if                         test = "TestInactivation">
   <xsl:call-template             name = "labelTextRow">
    <xsl:with-param               name = "label"
                                select = "'Test Inactivation'"/>
    <xsl:with-param               name = "labelSize"
                                select = "'label-small'"/>
    <xsl:with-param               name = "text"
                                select = "TestInactivation"/>
   </xsl:call-template>
  </xsl:if>

  <xsl:if                         test = "ProductionActivation">
   <xsl:call-template             name = "labelTextRow">
    <xsl:with-param               name = "label"
                                select = "'Production Activation'"/>
    <xsl:with-param               name = "labelSize"
                                select = "'label-small'"/>
    <xsl:with-param               name = "text"
                                select = "ProductionActivation"/>
   </xsl:call-template>
  </xsl:if>

  <xsl:if                         test = "ProductionInactivation">
   <xsl:call-template             name = "labelTextRow">
    <xsl:with-param               name = "label"
                                select = "'Production Inactivation'"/>
    <xsl:with-param               name = "labelSize"
                                select = "'label-small'"/>
    <xsl:with-param               name = "text"
                                select = "ProductionInactivation"/>
   </xsl:call-template>
  </xsl:if>
 </xsl:template>


 <!--
 ===================================================================
 Generate the HTML for the Ftp Information
 =================================================================== -->
 <xsl:template                   match = "FtpInformation">
  <xsl:call-template              name = "blockTitle">
   <xsl:with-param                name = "label"
                                select = "'FTP Information'"/>
  </xsl:call-template>

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'User ID'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "UserName"/>
  </xsl:call-template>

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'Account Blocked?'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "AccountBlocked"/>
  </xsl:call-template>
 </xsl:template>


 <!--
 ===================================================================
 Generate the HTML for the PDQ Partner Contact Information
 =================================================================== -->
 <xsl:template                   match = "ContactPersons">
  <xsl:call-template              name = "blockTitle">
   <xsl:with-param                name = "label"
                                select = "'Contact Persons'"/>
  </xsl:call-template>

  <!-- Adding each person's contact information
       ======================================== -->
  <xsl:apply-templates          select = "ContactPerson"/>

 </xsl:template>


 <!--
 ===================================================================
 Generate the HTML for the Licensee Name Information
 =================================================================== -->
 <xsl:template                   match = "ContactPerson">

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'Contact Name'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "ContactName"/>
   <xsl:with-param                name = "text-style"
                                select = "'text-bold'"/>
  </xsl:call-template>

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'Contact Role'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "ContactRole"/>
  </xsl:call-template>

  <!-- Adding address information for each contact person
       ================================================== -->
  <xsl:apply-templates          select = "ContactDetail"/>

 </xsl:template>



 <!--
 ===================================================================
 Generate the HTML for the Licensee Name Information
 =================================================================== -->
 <xsl:template                   match = "ContactDetail">

  <xsl:apply-templates          select = "PostalAddress">
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
  </xsl:apply-templates>

  <xsl:call-template              name = "labelTextRow">
   <xsl:with-param                name = "label"
                                select = "'Phone'"/>
   <xsl:with-param                name = "labelSize"
                                select = "'label-small'"/>
   <xsl:with-param                name = "text"
                                select = "Phone"/>
  </xsl:call-template>

  <xsl:if                         test = "TollFreePhone">
   <xsl:call-template             name = "labelTextRow">
    <xsl:with-param               name = "label"
                                select = "'Toll Free Phone'"/>
    <xsl:with-param               name = "labelSize"
                                select = "'label-small'"/>
    <xsl:with-param               name = "text"
                                select = "TollFreePhone"/>
   </xsl:call-template>
  </xsl:if>

  <xsl:if                         test = "FAX">
   <xsl:call-template             name = "labelTextRow">
    <xsl:with-param               name = "label"
                                select = "'FAX'"/>
    <xsl:with-param               name = "labelSize"
                                select = "'label-small'"/>
    <xsl:with-param               name = "text"
                                select = "FAX"/>
   </xsl:call-template>
  </xsl:if>

  <xsl:if                         test = "Email">
   <xsl:call-template             name = "labelTextRow">
    <xsl:with-param               name = "label"
                                select = "'Email'"/>
    <xsl:with-param               name = "labelSize"
                                select = "'label-small'"/>
    <xsl:with-param               name = "text"
                                select = "Email"/>
   </xsl:call-template>
  </xsl:if>

  <xsl:if                         test = "WebSite">
   <xsl:call-template             name = "labelTextRow">
    <xsl:with-param               name = "label"
                                select = "'Web'"/>
    <xsl:with-param               name = "labelSize"
                                select = "'label-small'"/>
    <xsl:with-param               name = "text"
                                select = "WebSite"/>
   </xsl:call-template>
  </xsl:if>

  <xsl:apply-templates          select = "Comment"
                                  mode = "withAttribute">
   <xsl:with-param                name = "label"
                                select = "'Status Comment'"/>
  </xsl:apply-templates>
 </xsl:template>

 <!--
 ======================================================================
 Template to create a block title
 ====================================================================== -->
 <xsl:template                    name = "blockTitle">
  <xsl:param                      name = "label"/>

  <xsl:element                    name = "div">
   <xsl:attribute                 name = "class">
    <xsl:text>label-big</xsl:text>
   </xsl:attribute>
   <xsl:value-of                select = "$label"/>
  </xsl:element>
 </xsl:template>

 <!--
 ======================================================================
 Template to create a two column row display of label/text pair.
 ====================================================================== -->
 <xsl:template                    name = "labelTextRow">
  <xsl:param                      name = "label"/>
  <xsl:param                      name = "labelSize"/>
  <xsl:param                      name = "text"/>
  <xsl:param                      name = "text-style"/>
  <xsl:param                      name = "addThis"/>

  <xsl:element                    name = "div">
   <xsl:attribute                 name = "class">
    <xsl:text>row</xsl:text>
   </xsl:attribute>

   <xsl:element                   name = "div">
    <xsl:attribute                name = "class">
     <xsl:text>column left</xsl:text>
    </xsl:attribute>

    <xsl:element                  name = "span">
     <xsl:attribute               name = "class">
      <xsl:value-of             select = "$labelSize"/>
     </xsl:attribute>
     <xsl:value-of              select = "$label"/>
    </xsl:element>
   </xsl:element>

   <xsl:element                   name = "div">
    <xsl:attribute                name = "class">
     <xsl:text>column right</xsl:text>
    </xsl:attribute>

    <!-- Single entry - markup email and URLs -->
    <xsl:choose>
     <xsl:when                    test = "count($text) = 1">
      <xsl:choose>
       <xsl:when                  test = "$label = 'Email'">
        <xsl:for-each           select = "Email">
         <xsl:call-template       name = "createEmailLink"/>
        </xsl:for-each>
       </xsl:when>
       <xsl:when                  test = "$label = 'Web'">
        <xsl:for-each           select = "WebSite">
         <xsl:call-template       name = "createWebLink"/>
         <xsl:element             name = "br"/>
         <xsl:value-of          select = "."/>
        </xsl:for-each>
       </xsl:when>
       <xsl:otherwise>
        <xsl:choose>
         <xsl:when                test = "$text-style">
          <xsl:element            name = "span">
           <xsl:attribute         name = "class">
            <xsl:value-of       select = "$text-style"/>
           </xsl:attribute>
           <xsl:value-of        select = "$text"/>
          </xsl:element>
         </xsl:when>
         <xsl:otherwise>
          <xsl:value-of         select = "$text"/>
         </xsl:otherwise>
        </xsl:choose>
       </xsl:otherwise>
      </xsl:choose>

      <xsl:if                     test = "$addThis">
       <xsl:value-of            select = "concat(' (CDR',
                                            number(
                                              substring-after($addThis, 'CDR')), ')')"/>
       <xsl:apply-templates     select = "@cdr:ref"/>
      </xsl:if>
     </xsl:when>
     <!-- Multiple entries should always be displayed as a bulleted list -->
     <xsl:otherwise>
      <xsl:element                name = "ul">
       <xsl:for-each            select = "$text">
        <xsl:element              name = "li">
         <xsl:if                  test = "@date">
          <xsl:element            name = "span">
           <xsl:attribute         name = "class">
            <xsl:text>comment-attrib</xsl:text>
           </xsl:attribute>
          <xsl:value-of         select = "@date"/>
          <xsl:text>, </xsl:text>
          <xsl:value-of         select = "@user"/>
          </xsl:element>
          <xsl:element            name = "br"/>
         </xsl:if>
         <xsl:value-of          select = "."/>
        </xsl:element>
       </xsl:for-each>
      </xsl:element>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:element>
  </xsl:element>
 </xsl:template>

 <!--
 ======================================================================
 Template to create a two column row display of label/text pair.
 ====================================================================== -->
 <xsl:template                   match = "PostalAddress">
  <xsl:param                      name = "label"
                                select = "'Address'"/>
  <xsl:param                      name = "labelSize"/>

  <xsl:for-each                 select = "Street">
   <xsl:element                   name = "div">
    <xsl:attribute                name = "class">
     <xsl:text>row</xsl:text>
    </xsl:attribute>
    <xsl:element                  name = "div">
    <xsl:attribute                name = "class">
     <xsl:text>column left</xsl:text>
    </xsl:attribute>
     <xsl:element                 name = "span">
      <xsl:attribute              name = "class">
       <xsl:value-of            select = "$labelSize"/>
      </xsl:attribute>
      <xsl:value-of             select = "$label"/>
     </xsl:element>
    </xsl:element>
    <xsl:element                  name = "div">
     <xsl:attribute               name = "class">
      <xsl:text>column right</xsl:text>
     </xsl:attribute>

     <xsl:value-of              select = "."/>
    </xsl:element>
   </xsl:element>
  </xsl:for-each>

  <xsl:element                    name = "div">
   <xsl:attribute                 name = "class">
    <xsl:text>row</xsl:text>
   </xsl:attribute>

   <xsl:element                   name = "div">
    <xsl:attribute                name = "class">
     <xsl:text>column left</xsl:text>
    </xsl:attribute>

    <xsl:element                  name = "span">
     <xsl:attribute               name = "class">
      <xsl:value-of             select = "$labelSize"/>
     </xsl:attribute>
     <xsl:value-of              select = "''"/>
    </xsl:element>
   </xsl:element>

   <xsl:element                   name = "div">
    <xsl:attribute                name = "class">
     <xsl:text>column right</xsl:text>
    </xsl:attribute>

    <xsl:value-of               select = "City"/>
    <xsl:text>, </xsl:text>
    <xsl:value-of               select = "PoliticalSubUnit_State"/>
    <xsl:text> </xsl:text>
    <xsl:value-of               select = "PostalCode_ZIP"/>
   </xsl:element>
  </xsl:element>

  <xsl:element                   name = "div">
   <xsl:attribute                name = "class">
    <xsl:text>row</xsl:text>
   </xsl:attribute>

   <xsl:element                  name = "div">
    <xsl:attribute                name = "class">
     <xsl:text>column left</xsl:text>
    </xsl:attribute>

     <xsl:element                 name = "span">
      <xsl:attribute              name = "class">
       <xsl:value-of            select = "$labelSize"/>
      </xsl:attribute>
      <xsl:value-of             select = "''"/>
     </xsl:element>
    </xsl:element>
    <xsl:element                  name = "div">
     <xsl:attribute               name = "class">
      <xsl:text>column right</xsl:text>
     </xsl:attribute>

    <xsl:value-of               select = "Country"/>
   </xsl:element>
  </xsl:element>

 </xsl:template>

 <!--
 ======================================================================
 Template to create a two column row display of label/text pair.
 ====================================================================== -->
 <xsl:template                    name = "labelStatusRow">
  <xsl:param                      name = "label"/>
  <xsl:param                      name = "labelSize"/>
  <xsl:param                      name = "text"/>
  <xsl:param                      name = "addThis"/>

  <xsl:element                    name = "div">
   <xsl:attribute                 name = "class">
    <xsl:text>row</xsl:text>
    <xsl:text> status-info</xsl:text>
   </xsl:attribute>

   <xsl:element                   name = "div">
    <xsl:attribute                name = "class">
     <xsl:text>column left</xsl:text>
    </xsl:attribute>

    <xsl:element                  name = "span">
     <xsl:attribute               name = "class">
      <xsl:value-of             select = "$labelSize"/>
     </xsl:attribute>
     <xsl:value-of              select = "$label"/>
    </xsl:element>
   </xsl:element>

   <xsl:element                   name = "div">
    <xsl:attribute                name = "class">
     <xsl:text>column right</xsl:text>
    </xsl:attribute>


    <xsl:choose>
     <xsl:when                    test = "../FtpInformation/
                                          AccountBlocked = 'Yes'">
      <xsl:element                name = "span">
       <xsl:attribute             name = "class">
        <xsl:text>error</xsl:text>
       </xsl:attribute>
       <xsl:text>*** Account Blocked ***</xsl:text>
      </xsl:element>
     </xsl:when>
     <xsl:otherwise>
      <!-- Display status of vendor if account isn't blocked yet -->
      <xsl:choose>
       <xsl:when                  test = "not(LicenseeStatusDates/
                                              ProductionInactivation)
                                          and
                                          LicenseeStatusDates/
                                          ProductionActivation">
        <xsl:element              name = "span">
         <xsl:attribute           name = "style">
          <xsl:text>color: blue; font-style: italic; font-weight: bold;</xsl:text>
         </xsl:attribute>
         <xsl:text>Regular, active</xsl:text>
        </xsl:element>
       </xsl:when>
       <xsl:when                  test = "LicenseeStatusDates/
                                              ProductionInactivation">
        <xsl:element              name = "span">
         <xsl:attribute           name = "style">
          <xsl:text>color: red; font-style: italic; font-weight: bold;</xsl:text>
         </xsl:attribute>
         <xsl:text>Regular, inactive</xsl:text>
        </xsl:element>
       </xsl:when>
       <xsl:when                  test = "not(LicenseeStatusDates/
                                              TestInactivation)
                                          and
                                          not(LicenseeStatusDates/
                                          ProductionActivation)">
        <xsl:element              name = "span">
         <xsl:attribute           name = "style">
          <xsl:text>color: orange; font-style: italic; font-weight: bold;</xsl:text>
         </xsl:attribute>
         <xsl:text>Test, active</xsl:text>
        </xsl:element>
       </xsl:when>
       <xsl:when                  test = "LicenseeStatusDates/
                                              TestInactivation
                                          and
                                          not(LicenseeStatusDates/
                                          ProductionActivation)">
        <xsl:element              name = "span">
         <xsl:attribute           name = "style">
          <xsl:text>color: red; font-style: italic; font-weight: bold;</xsl:text>
         </xsl:attribute>
         <xsl:text>Test, inactive</xsl:text>
        </xsl:element>
       </xsl:when>
      </xsl:choose>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:element>
  </xsl:element>
 </xsl:template>
</xsl:transform>
