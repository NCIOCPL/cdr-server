<?xml version="1.0" ?>
<!-- Filter title: Health Professional Summary Report -->
<!--
================================================================
Filter to create Health Professional Summary Report
Written by Volker Englisch, 2004-07-16

BZIssue::4990 - New "Quick & Dirty" QC report
================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
                               version = "1.0"
               exclude-result-prefixes = "cdr">

 <xsl:output                    method = "html"
                                indent = "no"
                              encoding = "UTF-8"/>

 <xsl:include   href = "cdr:name:Module: QC Filter Templates - Summary"/>
 <xsl:include   href = "cdr:name:Module: InLine Markup Formatter"/>
 <xsl:include   href = "cdr:name:Module: Checkbox Formatter"/>
 <xsl:include   href = "cdr:name:Module: Table Formatter"/>
 <xsl:include   href = "cdr:name:Module: STYLE Default"/>
 <xsl:include   href = "cdr:name:Module: STYLE QC Summary"/>
 <xsl:include   href = "cdr:name:Module: STYLE RS Insertion Deletion"/>

 <xsl:variable                    name = "docID"
                                select = "document('cdrutil:/docid')"/>
 <xsl:variable                    name = "whoAmI"
                                select = "'SummaryHPRS'"/>
 <!--
 ==================================================================
 Main template to create HTML output
 ================================================================== -->
 <xsl:template                   match = "/">
  <xsl:text    disable-output-escaping = "yes">&lt;!DOCTYPE html&gt;</xsl:text>
  <xsl:text>&#xA;</xsl:text>
  <HTML>
   <HEAD>
    <META http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <SCRIPT type='text/javascript'
      src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'>
    </SCRIPT>
    <!--
    The QC report get's copied to Word using copy/paste.  However, 
    Word only reads the first class name.  If an element is hidden
    using the "none" class Word does not "see" it if it's not the first
    class.  The comments are listed in a "span" element and this script
    removes all classes and replaces it with a single "none" if "none"
    exists in the list of class names.
    =================================================================== -->
    <script type='text/javascript'>
      $(document).ready(function(){
         $("span.none").removeClass().addClass("none");
      });
    </script>

    <xsl:variable                 name = "cdrdocs"
                                select = "document('cdrx:/*/CdrCtl')"/>

    <TITLE>
     <xsl:value-of              select = "concat('CDR',
                                           number(
                                           substring-after($docID, 'CDR')))"/>
     <xsl:text>: </xsl:text>
     <xsl:value-of              select = "substring-before(
                                           concat($cdrdocs/CdrDocCtl/
                                                  DocTitle, ';'), ';')"/>
    </TITLE>

    <STYLE type='text/css'>
     <xsl:call-template           name = "defaultStyle"/>
     <xsl:call-template           name = "qcSummaryStyle"/>
     <xsl:call-template           name = "rsInsertionDeletionStyle"/>
    </STYLE>
   </HEAD>

   <xsl:apply-templates         select = "Summary"/>
  </HTML>
 </xsl:template>

 <!--
 ==================================================================
 Display summary title
 ================================================================== -->
 <xsl:template                   match = "Summary">
  <!--
  Do not run this report if this is a patient summary.
  ================================================================= -->
  <xsl:choose>
   <xsl:when                      test = "//SummaryAudience='Patients'">
    <BODY>
     <h2>ERROR:</h2>
     <h3>HP Redline/Strikeout QC Report not valid for patient summaries</h3>
    </BODY>
   </xsl:when>
   <xsl:otherwise>
    <BODY>
     <xsl:apply-templates       select = "SummaryTitle"
                                  mode = "TOC"/>

     <!--
     ==================================================================
     Display summary type and audience
     ================================================================== -->
     <xsl:call-template           name = "displayMetaData"/>

     <!--
     ==================================================================
     Display summary type and audience
     ================================================================== -->
     <xsl:call-template           name = "displayTOC"/>

     <xsl:apply-templates/>

    </BODY>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!--
 ================================================================
 Display a Note
 ================================================================ -->
 <xsl:template                   match = "Note">
  <xsl:apply-templates          select = "."
                                  mode = "RS"/>
 </xsl:template>


 <!--
 ==============================================================
 Display Section Titles
 Temporary until all Patient summaries are in new format
 ============================================================  -->
 <xsl:template                   match ="Title">
  <xsl:apply-templates          select = "."
                                  mode = "HT"/>
 </xsl:template>


 <!--
 ================================================================
 Display Comments
 ================================================================ -->
 <xsl:template                   match = "Comment |
                                          ResponseToComment">
  <xsl:apply-templates          select = "."
                                  mode = "RS"/>
 </xsl:template>

</xsl:transform>
