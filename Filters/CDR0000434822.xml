<?xml version="1.0" ?>
<!-- Filter title: Module: QC Filter Templates - Summary -->
<!--
=========================================================================

Filter Module to include all general formatting templates for
Summary QC Reports
(Some of these could maybe moved to the module "QC Filter
 Templates" after checking that these would not interfere with
 the protocol QC reports.)
Volker Englisch, 2005-05-11

BZIssue::4919 - [Summary] QC Report Bugs
BZIssue::4970 - [Summary] Key Point display problems in QC reports
BZIssue::4990 - New "Quick & Dirty" QC report
BZIssue::5065 - [Summaries] 2 More Patient Summary QC Report Display Options

========================================================================= -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
               exclude-result-prefixes = "cdr">

 <xsl:output                    method = "html"/>

 <xsl:param                       name = "ShowKPBox"
                                select = "'N'"/>
 <xsl:param                       name = "ShowLearnMoreSection"
                                select = "'N'"/>
 <!--
 ======================================================================
 Remove the CdrDocCtl elements from the HTML output
 ====================================================================== -->
 <xsl:template                   match = "CdrDocCtl"/>


 <!--
 ================================================================
 This template deletes data elements not used in the display
 ================================================================ -->
 <xsl:template                   match = "DateLastModified |
                                          Diagnosis        |
                                          DocId            |
                                          Drug             |
                                          MainTopics       |
                                          PatientVersionOf |
                                          PDQBoard         |
                                          PdqKey           |
                                          ReplacementFor   |
                                          SecondaryTopics  |
                                          SectionType      |
                                          SummaryAudience  |
                                          SummaryLanguage  |
                                          SummaryMetaData  |
                                          SummaryTitle     |
                                          AltTitle         |
                                          SummaryType      |
                                          TranslationOf"/>


 <!--
 ========================================================================
 Display KeyPoints Box for Patient Summaries
 ======================================================================== -->
 <xsl:template                   match = "KeyPoints">
  <xsl:if                         test = "KeyPointsList/ListItem/KeyPoint">
   <xsl:choose>
    <xsl:when                     test = "$ShowKPBox = 'Y'">
    <table class="kpBox">
     <tr>
      <th class="kpBoxHdr">Key Points for This Section</th>
     </tr>
     <tr>
      <td>
       <xsl:if                    test = "KeyPointsList !=''">
        <xsl:apply-templates/>
       </xsl:if>
      </td>
     </tr>
    </table>
    <br />
    </xsl:when>
    <xsl:otherwise>
     <div class="gogreen">
      <span class="kpHdr">Key Point box display suppressed</span>
     </div>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:if>
 </xsl:template>


 <!--
 =========================================================
 Display KeyPoint
 ========================================================= -->
 <xsl:template                   match = "KeyPoint">
  <xsl:variable                   name = "kpLink">
   <xsl:for-each                select = "ancestor::*">
    <xsl:choose>
    <xsl:when                     test = "name() = 'KeyPointsList'">
     <xsl:text>False</xsl:text>
    </xsl:when>
    <xsl:otherwise>
     <!-- Do nothing -->
    </xsl:otherwise>
    </xsl:choose>
   </xsl:for-each>
  </xsl:variable>

  <!--
  We don't want to add the id attribute to the KeyPoint box items but to
  the items within the text
  ========================================================================= -->
  <span class="kpHdr">
   <xsl:if                        test = "not($kpLink = 'False')">
    <xsl:call-template            name = "addIdLinkTarget">
     <xsl:with-param              name = "id"
                                select = "@cdr:id"/>
    </xsl:call-template>
   </xsl:if>
   <xsl:apply-templates/>
  </span>

  <!--
  If a summary section contains nothing but a KeyPoint it needs to be
  separated from the following summary section by a blank line.
  However, we also need to make sure the KeyPoints table is not affected
  ====================================================================== -->
  <xsl:choose>
   <xsl:when                      test = "not(following-sibling::*)
                                          and
                                          not(ancestor::KeyPointsList)">
    <p/>
   </xsl:when>
   <xsl:otherwise>
    <!-- Do nothing -->
   </xsl:otherwise>
  </xsl:choose>

  <!-- If a KeyPoint is followed immediately by a SummarySection this
       KeyPoint is considered the heading for sub-sections.  Add a line
       break to separate this heading from the first sub-section heading -->
  <xsl:if                         test = "following-sibling::SummarySection">
   <p/>
  </xsl:if>
 </xsl:template>


 <!--
 ===================================================================
 Note: The insertion templates for the Redline/Strikeout,
       Bold/Underline and the patient summary reports are identical.
       However, the deletion templates for the Bold/Underline
       report are slightly different since deletions are not
       displayed in the BU report unless they are marked proposed.
 ===================================================================
 Display text with Insertion (Citation text is handled separately)
 ================================================================== -->
 <xsl:template                   match = "Insertion">
   <xsl:choose>
    <xsl:when                     test = "@RevisionLevel = 'proposed'">
     <xsl:choose>
      <xsl:when                   test = "@Source = 'advisory-board'">
       <span class="insertproposed_ad">
        <xsl:apply-templates/>
       </span>
      </xsl:when>
      <xsl:otherwise>
       <span class="insertproposed">
        <xsl:apply-templates/>
       </span>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:when>
    <xsl:otherwise>
     <xsl:choose>
      <xsl:when                   test = "@Source = 'advisory-board'">
       <span class="insertapproved_ad">
        <xsl:apply-templates/>
       </span>
      </xsl:when>
      <xsl:otherwise>
       <span class="insertapproved">
        <xsl:apply-templates/>
       </span>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:otherwise>
   </xsl:choose>
 </xsl:template>


 <!--
 ==================================================================
 Display text with Insertion (Citation text is handled separately)
 =================================================================== -->
 <xsl:template                   match = "Insertion"
                                  mode = "compactNo">
  <xsl:choose>
   <xsl:when                      test = "@RevisionLevel = 'proposed'">
    <xsl:choose>
     <xsl:when                    test = "@Source = 'advisory-board'">
      <span class="insertproposed_ad">
       <xsl:apply-templates/>
      </span>
     </xsl:when>
     <xsl:otherwise>
      <span class="insertproposed">
       <xsl:apply-templates/>
      </span>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:when>
   <xsl:otherwise>
    <xsl:choose>
     <xsl:when                    test = "@Source = 'advisory-board'">
      <span class="insertapproved_ad">
       <xsl:apply-templates/>
      </span>
     </xsl:when>
     <xsl:otherwise>
      <span class="insertapproved">
       <xsl:apply-templates/>
      </span>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!--
 Note: The insertion templates for the Redline/Strikeout,
       Bold/Underline and the patient summary reports are identical.
       However, the deletion templates for the Bold/Underline
       report are slightly different since deletions are not
       displayed in the BU report unless they are marked proposed.
 ==================================================================
 Display text proposed for Deletion (Citation text is handled
 separately).
 ================================================================== -->
 <xsl:template                   match = "Deletion">
   <xsl:choose>
    <xsl:when                     test = "@RevisionLevel = 'proposed'">
     <xsl:choose>
      <xsl:when                   test = "@Source = 'advisory-board'">
       <span class="deleteproposed_ad">
        <xsl:apply-templates/>
       </span>
      </xsl:when>
      <xsl:otherwise>
       <span class="deleteproposed">
        <xsl:apply-templates/>
       </span>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:when>
    <xsl:otherwise>
     <!--
     Approved deletions are being applied and not shown at all
     in the Bold/Underline reports.
     ========================================================= -->
     <xsl:if                      test = "not(contains($whoAmI, 'BU'))">
      <xsl:choose>
       <xsl:when                  test = "@Source = 'advisory-board'">
        <span class="deleteapproved_ad">
         <xsl:apply-templates/>
        </span>
       </xsl:when>
       <xsl:otherwise>
        <span class="deleteapproved">
         <xsl:apply-templates/>
        </span>
       </xsl:otherwise>
      </xsl:choose>
     </xsl:if>
    </xsl:otherwise>
   </xsl:choose>
 </xsl:template>


 <!--
 ==================================================================
 Display text proposed for Deletion (Citation text is handled
 separately).
 =================================================================== -->
 <xsl:template                   match = "Deletion"
                                  mode = "compactNo">
  <xsl:choose>
   <xsl:when                      test = "@RevisionLevel = 'proposed'">
    <xsl:choose>
     <xsl:when                    test = "@Source = 'advisory-board'">
      <span class="deleteproposed_ad">
       <xsl:apply-templates/>
      </span>
     </xsl:when>
     <xsl:otherwise>
      <span class="deleteproposed">
       <xsl:apply-templates/>
      </span>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:when>
   <xsl:otherwise>
    <!--
    Approved deletions are being applied and not shown at all
    in the Bold/Underline reports.
    ========================================================= -->
    <xsl:if                       test = "not(contains($whoAmI, 'BU'))">
     <xsl:choose>
      <xsl:when                   test = "@Source = 'advisory-board'">
       <span class="deleteapproved_ad">
        <xsl:apply-templates/>
       </span>
      </xsl:when>
      <xsl:otherwise>
       <span class="deleteapproved">
        <xsl:apply-templates/>
       </span>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:if>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!--
 =====================================================================
 Display Reference Section
 ===================================================================== -->
 <xsl:template                   match = "ReferenceList">
  <xsl:choose>
   <xsl:when                      test = "//SummaryLanguage='Spanish'">
    <h3>Bibliograf&#xED;a:</h3>
   </xsl:when>
   <xsl:otherwise>
    <h3>References:</h3>
   </xsl:otherwise>
  </xsl:choose>

  <xsl:choose>
   <xsl:when                      test = "$DisplayCitations = 'Y'">
    <ol>
     <xsl:for-each              select = "Citation">
      <xsl:call-template          name = "markupCitation"/>
     </xsl:for-each>
    </ol>
   </xsl:when>
   <xsl:otherwise>
    <table width="100%" border="0" style="background-color: #CCFFFF">
     <tr><td><b>Note: </b>Citation display suppressed</td></tr>
    </table>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!--
 ==============================================================
 Display Top SummarySection Title
 ============================================================== -->
 <xsl:template                   match = "SectionTitle/Title">
  <xsl:variable                   name = "thisTitle">
   <xsl:value-of                select = "."/>
  </xsl:variable>

  <xsl:choose>
   <xsl:when                      test = "$ShowLearnMoreSection = 'N'
                                          and
                                          starts-with(self::Title,
                                                      'To Learn More About')">
     <div class="gogreentlm">
      <span class="kpHdr">To Learn More section display suppressed</span>
     </div>
   </xsl:when>
   <xsl:otherwise>
    <h2>
     <xsl:call-template           name = "addIdLinkTarget">
      <xsl:with-param             name = "id"
                                select = "../@cdr:id"/>
     </xsl:call-template>

     <xsl:apply-templates/>
    </h2>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!--
 =================================================================
 Formatting the CAM summary QandA set
 ================================================================= -->
 <xsl:template                   match = "QandASet">
  <OL class="QandA-List">
   <xsl:apply-templates         select = "QandAEntry"/>
  </OL>
 </xsl:template>


 <!--
 =================================================================
 Formatting the CAM summary QandA entry (basically the list items)
 ================================================================= -->
 <xsl:template                   match = "QandAEntry">
  <LI class="addspace">
   <xsl:attribute                 name = "id">
    <xsl:value-of               select = "@cdr:id"/>
   </xsl:attribute>
   <xsl:apply-templates        select = "Question"/>
   <p/>
   <span class="answer">
    <xsl:apply-templates        select = "Answer"/>
   </span>
  </LI>
 </xsl:template>


 <!--
 ================================================================
 Name Template Section
 ================================================================ -->
 <!--
 =====================================================================
 Display the Citations in the Reference Section with Markup
 ===================================================================== -->
 <xsl:template                    name = "markupCitation">
  <xsl:choose>
   <xsl:when                      test = "@InsertionOrDeletion = 'Insertion'">
    <xsl:choose>
     <xsl:when                    test = "@existing">
      <li>
       <xsl:call-template         name = "addCitationLinkTarget"/>
       <xsl:value-of            select = "."/>
       <xsl:call-template         name = "addPMID"/>
      </li>
     </xsl:when>
     <xsl:otherwise>
      <xsl:choose>
       <xsl:when                  test = "@Source = 'advisory-board'">
        <xsl:choose>
         <xsl:when                test = "@RevisionLevel = 'proposed'">
          <li class="refinsertprop_ad">
           <xsl:call-template     name = "addCitationLinkTarget"/>
           <span class="insertproposed_ad">
            <xsl:value-of       select = "."/>
            <xsl:call-template    name = "addPMID"/>
           </span>
          </li>
         </xsl:when>
         <xsl:otherwise>
          <li class="refinsertappr_ad">
           <xsl:call-template     name = "addCitationLinkTarget"/>
           <span class="insertapproved_ad">
            <xsl:value-of       select = "."/>
            <xsl:call-template    name = "addPMID"/>
           </span>
          </li>
         </xsl:otherwise>
        </xsl:choose>
       </xsl:when>
       <xsl:otherwise>
        <xsl:choose>
         <xsl:when                test = "@RevisionLevel = 'proposed'">
          <li class="refinsertprop">
           <xsl:call-template     name = "addCitationLinkTarget"/>
           <span class="insertproposed">
            <xsl:value-of       select = "."/>
            <xsl:call-template    name = "addPMID"/>
           </span>
          </li>
         </xsl:when>
         <xsl:otherwise>
          <li class="refinsertappr">
           <xsl:call-template     name = "addCitationLinkTarget"/>
           <span class="insertapproved">
            <xsl:value-of       select = "."/>
            <xsl:call-template    name = "addPMID"/>
           </span>
          </li>
         </xsl:otherwise>
        </xsl:choose>
       </xsl:otherwise>
      </xsl:choose>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:when>
   <xsl:when                      test = "@InsertionOrDeletion = 'Deletion'">
    <xsl:choose>
     <xsl:when                    test = "@existing">
      <li>
       <xsl:call-template         name = "addCitationLinkTarget"/>
       <xsl:value-of            select = "."/>
       <xsl:call-template         name = "addPMID"/>
      </li>
     </xsl:when>

     <xsl:otherwise>
      <!-- Deletions are only to be displayed in the Bold/Underline Report
           when they are proposed. -->
      <xsl:choose>
       <xsl:when                  test = "@RevisionLevel = 'proposed'">
        <xsl:choose>
         <xsl:when                test = "@Source = 'advisory-board'">
          <li class="refdeleteprop_ad">
           <xsl:call-template     name = "addCitationLinkTarget"/>
           <span class="deleteproposed_ad">
            <xsl:value-of       select = "."/>
            <xsl:call-template    name = "addPMID"/>
           </span>
          </li>
         </xsl:when>
         <xsl:otherwise>
          <li class="refdeleteprop">
           <xsl:call-template     name = "addCitationLinkTarget"/>
           <span class="deleteproposed">
            <xsl:value-of       select = "."/>
            <xsl:call-template    name = "addPMID"/>
           </span>
          </li>
         </xsl:otherwise>
        </xsl:choose>
       </xsl:when>
       <xsl:otherwise>
        <xsl:choose>
         <xsl:when                test = "@Source = 'advisory-board'">
          <li class="refdeleteappr_ad">
           <xsl:call-template     name = "addCitationLinkTarget"/>
           <span class="deleteapproved_ad">
            <xsl:value-of       select = "."/>
            <xsl:call-template    name = "addPMID"/>
           </span>
          </li>
         </xsl:when>
         <xsl:otherwise>
          <!--
          Approved deletions are being applied and not shown at all
          in the Bold/Underline reports.
          ========================================================= -->
          <xsl:if                 test = "not(contains($whoAmI, 'BU'))">
           <li class="refdeleteappr">
            <xsl:call-template    name = "addCitationLinkTarget"/>
            <span class="deleteapproved">
             <xsl:value-of      select = "."/>
             <xsl:call-template   name = "addPMID"/>
            </span>
           </li>
          </xsl:if>
         </xsl:otherwise>
        </xsl:choose>
       </xsl:otherwise>
      </xsl:choose>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:when>
   <xsl:otherwise>
    <li>
     <xsl:call-template           name = "addCitationLinkTarget"/>
     <xsl:value-of              select = "."/>
     <xsl:call-template           name = "addPMID"/>
    </li>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!--
 ===================================================================
 Template to add a link target to the Citation references so that
 these can be linked to.
 =================================================================== -->
 <xsl:template                    name = "addCitationLinkTarget">
  <xsl:attribute                  name = "id">
   <xsl:text>CL</xsl:text>
   <xsl:value-of                select = "../../@cdr:id"/>
   <xsl:text>_</xsl:text>
   <xsl:value-of                select = "@refidx"/>
  </xsl:attribute>
 </xsl:template>


 <!--
 ===================================================================
 Template to add the PMID to the Citation references
 =================================================================== -->
 <xsl:template                    name = "addPMID">
  <xsl:if                         test = "@PMID">
   <xsl:text> PMID: </xsl:text>
   <xsl:value-of                select = "@PMID"/>
  </xsl:if>
 </xsl:template>


 <!--
 ===================================================================
 Display summary type and audience
 and a board link error if available for the QD QC report.
 =================================================================== -->
 <xsl:template                    name = "displayMetaData">
  <xsl:element                    name = "h3">
   <xsl:value-of                select = "concat(
                                            SummaryMetaData/SummaryType,
                                            ' - ',
                                            SummaryMetaData/SummaryAudience)"/>
  </xsl:element>
  <xsl:apply-templates    select = "SummaryMetaData/LinkError"/>
 </xsl:template>


 <!--
 ==================================================================
 Display a Contents List of Summary Section Titles
 10/06/2002 - Modified code to remove 4th level titles (CB)
 10/08/2002 - took breaks out at end of titles.
 =================================================================== -->
 <xsl:template                    name = "displayTOC">
  <ul class="tocSection">
   <xsl:for-each                select = "SummarySection">
    <xsl:call-template            name = "TocSummarySection">
     <xsl:with-param              name = "secID"
                                select = "@cdr:id"/>
     <xsl:with-param              name = "level"
                                select = "1"/>
    </xsl:call-template>
   </xsl:for-each>
  </ul>
  <hr/>
 </xsl:template>


 <!--
 ================================================================
 Display and format LinkErrors for QD QC reports
 ================================================================ -->
 <xsl:template                   match = "LinkError">
  <xsl:element                    name = "span">
   <xsl:attribute                 name = "style">
    <xsl:text>font-weight: bold; font-style: italic; color: red;</xsl:text>
   </xsl:attribute>
   <xsl:value-of                select = "."/>
  </xsl:element>
 </xsl:template>

</xsl:transform>
