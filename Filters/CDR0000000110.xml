<?xml version="1.0"?>

<!-- 
 ==================================================================
 $Id$

 $Log: not supported by cvs2svn $
 ================================================================== -->

<xsl:transform              xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                            xmlns:cdr = "cips.nci.nih.gov/cdr"
                              version = "1.0">

 <xsl:output                   method = "xml" 
                 omit-xml-declaration = "no"/>

 <!--
 ================================================================
 Passed in by the caller.
 ================================================================ -->
 <xsl:param                      name = "changeFrom"/>
 <xsl:param                      name = "changeTo"/>

 <!--
 ================================================================
 Default rule, copying back out everything just as we got it.
 ================================================================ -->
 <xsl:template                  match = "@*|comment()|*|
                                         processing-instruction()|text()">
  <xsl:copy>
   <xsl:apply-templates        select = "@*|comment()|*|
                                         processing-instruction()|text()"/>
  </xsl:copy>
 </xsl:template>

 <!--
 ===================================================================
 Template to change the Person link
 There are four possible options for changing a Person link:
 a)  Value in Document 11111
     changeFrom        11111
     ==> change to 22222 or 22222#F2 depending on user entry
 b)  Value in Document 11111#F1
     changeFrom        11111
     ==> change to 22222 or 22222#F2 depending on user entry
 c)  Value in Document 11111
     changeFrom        11111#F1
     ==> no change will be done. If the user specified the fragment
         specifically it has to be assumed that this fragment exists
 d)  Value in Document 11111#F1
     changeFrom        11111#F1
     ==> change to 22222 or 22222#F2 depending on user entry
 =================================================================== -->
 <xsl:template                  match = "/InScopeProtocol/ProtocolAdminInfo
                                         /ProtocolLeadOrg/LeadOrgPersonnel/
                                         Person
                                         |
                                         /InScopeProtocol/ProtocolAdminInfo
                                         /ProtocolLeadOrg/ProtocolSites
                                         /OrgSite/OrgSiteContact
                                         /SpecificPerson/Person
                                         |
                                         /InScopeProtocol/ProtocolAdminInfo
                                         /ProtocolLeadOrg/ProtocolSites
                                         /PrivatePracticeSite
                                         /PrivatePracticeSiteID">
  <xsl:choose>
   <!-- Changing Person link based on option (d) -->
   <xsl:when                     test = "contains(@cdr:ref, '#') and
                                         contains($changeFrom, '#') and
                                         @cdr:ref=$changeFrom">
    <Person>
     <xsl:attribute              name = "cdr:ref">
      <xsl:value-of            select = "$changeTo"/>
     </xsl:attribute>
     <xsl:if                     test = "@Public">
      <xsl:attribute             name = "Public">
       <xsl:value-of           select = "@Public"/>
      </xsl:attribute>
     </xsl:if>
    </Person>
   </xsl:when>

   <!-- Changing Person link based on option (b) -->
   <xsl:when                      test = "contains(@cdr:ref, '#') and
                                          not(contains($changeFrom, '#')) and
                                          substring-before(@cdr:ref, '#')
                                          =$changeFrom">
    <Person>
     <xsl:attribute              name = "cdr:ref">
      <xsl:value-of            select = "$changeTo"/>
     </xsl:attribute>
     <xsl:if                     test = "@Public">
      <xsl:attribute             name = "Public">
       <xsl:value-of           select = "@Public"/>
      </xsl:attribute>
     </xsl:if>
    </Person>
   </xsl:when>

   <!-- Changing Person link based on option (a) -->
   <xsl:when                     test = "not(contains(@cdr:ref, '#')) and
                                         not(contains($changeFrom, '#')) and
                                         @cdr:ref=$changeFrom">
   <!-- xsl:when                     test = "@cdr:ref=$changeFrom"-->
    <Person>
     <xsl:attribute              name = "cdr:ref">
      <xsl:value-of            select = "$changeTo"/>
     </xsl:attribute>
     <xsl:if                     test = "@Public">
      <xsl:attribute             name = "Public">
       <xsl:value-of           select = "@Public"/>
      </xsl:attribute>
     </xsl:if>
    </Person>
   </xsl:when>

   <!-- All other Person links will be put out as is -->
   <xsl:otherwise>
    <xsl:copy>
     <xsl:apply-templates      select = "@*|comment()|*|
                                         processing-instruction()|text()"/>
    </xsl:copy>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>

</xsl:transform>
