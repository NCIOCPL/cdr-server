<?xml version="1.0" ?>
<!-- Filter title: Denormalization Filter: Summary -->
<!--
 ================================================================

Filter to denormalize summary data.
   Written by Volker Englisch, 2003-08-12

BZIssue::4836 - Create new section at end of HP summaries
OCECDR-3824: Filter changes for new Spanish CAM summaries
OCECDR-3869: Support for linking to blocked trials
OCECTS-116 - Add nct_id attribute to ProtocolRef element
OCECDR-4511 - Remove template which adds nct_id attributes to ProtocolRefs

 ================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
                               version = "1.0">

 <xsl:output                    method = "xml"
                  omit-xml-declaration = "no"
                              encoding = "UTF-8"/>

 <xsl:include href = "cdr:name:Module: Citation Denormalization"/>
 <xsl:include href = "cdr:name:Module: Multimedia Denormalization"/>

 <xsl:param                       name = "isQC"
                                select = "'N'"/>

 <xsl:variable                    name = "sumLanguage">
  <xsl:choose>
   <xsl:when                      test = "/Summary
                                           /SummaryMetaData
                                           /SummaryLanguage = 'English'">
    <xsl:text>EN</xsl:text>
   </xsl:when>
   <xsl:otherwise>
    <xsl:text>ES</xsl:text>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:variable>

 <xsl:variable                    name = "sumType"
                                select = "/Summary
                                          /SummaryMetaData
                                          /SummaryType"/>

 <!-- Getting the Editorial Board value -->
 <xsl:variable                    name = "sumBoard">
  <xsl:for-each                 select = "/Summary
                                          /SummaryMetaData
                                          /PDQBoard[not(substring-before(Board,
                                                            'Advisory Board'))]">

   <xsl:value-of                select = "Board"/>
  </xsl:for-each>
 </xsl:variable>

  <xsl:variable                   name = "sumId">
   <xsl:value-of                select = "document('cdrutil:/docid')"/>
  </xsl:variable>
  <xsl:variable                   name = "sumNormId"
                                select = "number(
                                           substring-before(
                                           concat(
                                           substring-after($sumId, 'CDR'),
                                                               '#'), '#'))"/>
  <xsl:variable                   name = "sumNormIdEN">
   <xsl:choose>
    <xsl:when                     test = "$sumLanguage = 'EN'">
     <xsl:value-of              select = "$sumNormId"/>
    </xsl:when>
    <xsl:otherwise>
     <xsl:value-of              select = "number(
                                           substring-before(
                                           concat(
                                           substring-after(/Summary
                                                           /TranslationOf
                                                           /@cdr:ref, 'CDR'),
                                                               '#'), '#'))"/>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:variable>


 <!--
 =================================================================
 Copy control information and generate current date
 ================================================================= -->
 <xsl:template                    match = "Summary">
  <xsl:copy>
   <xsl:apply-templates          select = "@*"/>
   <xsl:apply-templates          select = "document('cdrutil:/docid')"/>
   <xsl:apply-templates          select = "document('cdrx:/*/CdrCtl')"/>

   <xsl:apply-templates/>
  </xsl:copy>
 </xsl:template>


 <!--
 =================================================================
 Test if a SummarySection is empty (no children, only white space)

 Such an element may appear if a complete SummarySection has been
 marked with the proposed insertion element and therefore all
 content gets stripped but the SummarySection tags itself are left
 untouched.
 ================================================================= -->
 <xsl:template                   match = "SummarySection">
  <xsl:choose>
   <xsl:when                      test = "normalize-space(.)">
    <xsl:copy>
     <xsl:apply-templates       select = "node() | @*"/>
    </xsl:copy>
   </xsl:when>
   <xsl:otherwise>
    <!-- Do Nothing:  SummarySection is empty!  -->
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!--
 =================================================================
 Suppress the default BoardMember template
 The BoardMember elements will be added as part of the Board
 template.
 ================================================================= -->
 <xsl:template                    name = "BoardMember"
                                  mode = "remove"/>


 <!--
 =================================================================
 Populate the English board information and add the list of
 BoardMembers
 ================================================================= -->
 <xsl:template                   match = "Board"
                                  mode = "ENboard">

  <xsl:variable                   name = "BoardInfo"
                                select = "document(concat('cdr:',@cdr:ref,
                                                          '/last'))"/>

  <xsl:element                    name = "Board">
   <xsl:attribute                 name = "cdr:ref">
    <xsl:value-of               select = "@cdr:ref"/>
   </xsl:attribute>

   <xsl:value-of                select = "$BoardInfo/Organization
                                            /OrganizationNameInformation
                                            /OfficialName
                                            /Name"/>
  </xsl:element>

  <xsl:copy-of                  select = "$BoardInfo/Organization
                                            /PDQBoardInformation
                                            /ShowReviewerInfo"/>

  <xsl:copy-of                  select = "$BoardInfo/Organization
                                            /PDQBoardInformation
                                            /BoardNameTranslation"/>

  <xsl:variable                   name = "loeID"
                                select = "$BoardInfo/Organization
                                            /PDQBoardInformation
                                            /LOESummary/@cdr:ref"/>

  <!--
  Advisory Boards may not list LOE information
  ============================================ -->
  <xsl:if                         test = "$loeID">
   <xsl:variable                  name = "loeInfo"
                                select = "document(concat('cdr:',$loeID,
                                                           '/lastp'))"/>
   <xsl:element                   name = "LOESummary">
    <xsl:attribute                name = "cdr:ref">
     <xsl:value-of              select = "$BoardInfo/Organization
                                            /PDQBoardInformation
                                            /LOESummary/@cdr:ref"/>
    </xsl:attribute>
    <xsl:value-of               select = "$loeInfo/Summary
                                            /SummaryTitle"/>
   </xsl:element>

   <xsl:element                   name = "BoardLOEURL">
    <xsl:attribute                name = "cdr:xref">
     <xsl:value-of              select = "$loeInfo/Summary
                                            /SummaryMetaData
                                            /SummaryURL/@cdr:xref"/>
    </xsl:attribute>
    <xsl:value-of               select = "$loeInfo/Summary
                                            /SummaryMetaData
                                            /SummaryURL"/>
   </xsl:element>


   <!--
   For the Spanish summaries we need to retrieve the LOE documents
   from the information provided in the English board document.
   =================================================================== -->
   <xsl:variable                  name = "loeNormIDES"
                                select = "number(
                                           substring-before(
                                           concat(
                                           substring-after($loeID, 'CDR'),
                                                               '#'), '#'))"/>
   <xsl:variable                  name = "sqlQueryESLoe">
SELECT doc_id AS "CDRID"
  FROM query_term_pub
 WHERE int_val = ?
   AND path = '/Summary/TranslationOf/@cdr:ref'
   </xsl:variable>

   <xsl:variable                  name = "queryRowsLoe"
                                select = "document(cdr:escape-uri(
                                           concat('cdrutil:/sql-query/',
                                                   $sqlQueryESLoe,
                                                   '~',
                                                   $loeNormIDES)))"/>

   <xsl:variable                  name = "loeIDES">
    <xsl:for-each               select = "$queryRowsLoe
                                             /SqlResult
                                             /row">
     <xsl:value-of              select = "col[@name='CDRID']"/>
    </xsl:for-each>
   </xsl:variable>

   <!--
   Cancel the report if we can't find a translation of the LOE Summary
   for this document type/board.

   Should we be checking this for English Summaries, too? VE, 2021-02-10
   ==================================================================== -->
   <xsl:if                        test = "$loeIDES = ''">
    <xsl:message             terminate = "yes">
     <xsl:text>Publishable version missing for Spanish LOE translation with </xsl:text>
     <xsl:text>SummaryType '</xsl:text>
     <xsl:value-of              select = "$sumType"/>
     <xsl:text>' and Board '</xsl:text>
     <xsl:value-of              select = "normalize-space($sumBoard)"/>
     <xsl:text>'</xsl:text>
    </xsl:message>
   </xsl:if>

   <xsl:variable                  name = "loeInfoES"
                                select = "document(concat('cdr:',
                                          format-number($loeIDES,
                                                        'CDR0000000000'),
                                                           '/lastp'))"/>

   <xsl:element                   name = "LOESummaryES">
    <xsl:attribute                name = "cdr:ref">
     <xsl:value-of              select = "format-number($loeIDES,
                                                         'CDR0000000000')"/>
    </xsl:attribute>
    <xsl:value-of               select = "$loeInfoES/Summary
                                            /SummaryTitle"/>
   </xsl:element>

   <xsl:element                   name = "BoardLOEURLES">
    <xsl:attribute                name = "cdr:xref">
     <xsl:value-of              select = "$loeInfoES/Summary
                                            /SummaryMetaData
                                            /SummaryURL/@cdr:xref"/>
    </xsl:attribute>
    <xsl:value-of               select = "$loeInfoES/Summary
                                            /SummaryMetaData
                                            /SummaryURL"/>
   </xsl:element>
  </xsl:if>

  <xsl:apply-templates          select = "../BoardMember"/>
 </xsl:template>


 <!--
 =================================================================
 Template to denormalize the Board elements
 We also need the information of the LOE summaries.

 With the change of allowing 2 editorial boards to be added to a
 single summary we need to change how the PDQBoard section is
 created.  For English summaries we're copying the existing PDQBoard
 sections but we may need to create extra PDQBoard sections for
 Spanish summaries - Spanish summaries never include more than 1
 PDQBoard element which is only included as a placeholder.
                                                    VE, 2023-11-16
 ================================================================= -->
 <xsl:template                   match = "PDQBoard">


  <!-- Create PDQBoard information for English summries -->
  <xsl:choose>
   <xsl:when                      test = "$sumLanguage = 'EN'">
    <xsl:element                  name = "PDQBoard">
     <xsl:apply-templates       select = "Board"
                                  mode = "ENboard"/>
    </xsl:element>
   </xsl:when>
   <!-- Create PDQBoard information for Spanish summries -->
   <xsl:otherwise>
    <!--
    For Spanish summaries we need to find the Board information by
    using the TranslationOf element and retrieving the information
    for the editorial board from the English version
    ===================================================================== -->
    <xsl:variable                 name = "sqlQueryESBoard">
SELECT q.doc_id, q.path, q.int_val, eb.value AS 'ENBoard',
       eb.int_val AS 'ENBoardID'
  FROM query_term q
  JOIN query_term eb
    ON eb.doc_id = q.int_val
   AND eb.path = '/Summary/SummaryMetaData/PDQBoard/Board/@cdr:ref'
  JOIN query_term bt
    ON eb.int_val = bt.doc_id
   AND bt.path = '/Organization/OrganizationNameInformation/OfficialName/Name'
 WHERE q.path = '/Summary/TranslationOf/@cdr:ref'
   AND bt.value not like '%Advisory%'
   AND q.doc_id = ?
    </xsl:variable>

    <xsl:variable                 name = "queryRows"
                                select = "document(cdr:escape-uri(
                                          concat('cdrutil:/sql-query/',
                                                   $sqlQueryESBoard,
                                                   '~',
                                                   $sumNormId)))"/>

    <xsl:for-each               select = "$queryRows
                                             /SqlResult
                                             /row">
      <xsl:variable               name = "BoardID"
                                select = "col[@name='ENBoard']"/>
      <!--
      Cancel the report if we can't find the board ID for the English board to
      retrieve the board information.
      ==================================================================== -->
      <xsl:if                     test = "$BoardID = ''">
       <xsl:message          terminate = "yes">
        <xsl:text>Error: No board ID available to retrieve board info!</xsl:text>
       </xsl:message>
      </xsl:if>

      <xsl:variable               name = "BoardInfo"
                                select = "document(concat('cdr:', $BoardID,
                                                          '/last'))"/>
      <xsl:element                name = "PDQBoard">
       <xsl:element               name = "Board">
        <xsl:attribute            name = "cdr:ref">
         <xsl:value-of          select = "$BoardID"/>
        </xsl:attribute>

        <xsl:value-of           select = "$BoardInfo/Organization
                                            /OrganizationNameInformation
                                            /OfficialName
                                            /Name"/>
       </xsl:element>

       <xsl:copy-of             select = "$BoardInfo/Organization
                                            /PDQBoardInformation
                                            /ShowReviewerInfo"/>

       <xsl:copy-of             select = "$BoardInfo/Organization
                                            /PDQBoardInformation
                                            /BoardNameTranslation"/>

       <xsl:variable              name = "loeID"
                                select = "$BoardInfo/Organization
                                            /PDQBoardInformation
                                            /LOESummary/@cdr:ref"/>

       <!--
       Advisory Boards may not list LOE information
       ============================================ -->
       <xsl:if                    test = "$loeID">
        <xsl:variable             name = "loeInfo"
                                select = "document(concat('cdr:',$loeID,
                                                                '/lastp'))"/>
        <xsl:element              name = "LOESummary">
         <xsl:attribute           name = "cdr:ref">
          <xsl:value-of         select = "$BoardInfo/Organization
                                            /PDQBoardInformation
                                            /LOESummary/@cdr:ref"/>
         </xsl:attribute>
         <xsl:value-of          select = "$loeInfo/Summary
                                            /SummaryTitle"/>
        </xsl:element>

        <xsl:element              name = "BoardLOEURL">
         <xsl:attribute           name = "cdr:xref">
          <xsl:value-of         select = "$loeInfo/Summary
                                            /SummaryMetaData
                                            /SummaryURL/@cdr:xref"/>
         </xsl:attribute>
         <xsl:value-of          select = "$loeInfo/Summary
                                            /SummaryMetaData
                                            /SummaryURL"/>
        </xsl:element>

        <!--
        For the Spanish summaries we need to retrieve the LOE documents
        from the information provided in the English board document.
        =================================================================== -->
        <xsl:variable             name = "loeNormIDES"
                                select = "number(
                                           substring-before(
                                           concat(
                                           substring-after($loeID, 'CDR'),
                                                               '#'), '#'))"/>
        <xsl:variable             name = "sqlQueryESLoe">
     SELECT doc_id AS "CDRID"
       FROM query_term_pub
      WHERE int_val = ?
        AND path = '/Summary/TranslationOf/@cdr:ref'
        </xsl:variable>

        <xsl:variable             name = "queryRowsLoe"
                                select = "document(cdr:escape-uri(
                                           concat('cdrutil:/sql-query/',
                                                   $sqlQueryESLoe,
                                                   '~',
                                                   $loeNormIDES)))"/>

        <xsl:variable             name = "loeIDES">
         <xsl:for-each          select = "$queryRowsLoe
                                             /SqlResult
                                             /row">
          <xsl:value-of         select = "col[@name='CDRID']"/>
         </xsl:for-each>
        </xsl:variable>

        <!--
        Cancel the report if we can't find a translation of the LOE Summary
        for this document type/board.

        Should we be checking this for English Summaries, too? VE, 2021-02-10
        ==================================================================== -->
        <xsl:if                   test = "$loeIDES = ''">
         <xsl:message        terminate = "yes">
          <xsl:text>Publishable version missing for Spanish LOE translation with </xsl:text>
          <xsl:text>SummaryType '</xsl:text>
          <xsl:value-of         select = "$sumType"/>
          <xsl:text>' and Board '</xsl:text>
          <xsl:value-of         select = "normalize-space($sumBoard)"/>
          <xsl:text>'</xsl:text>
         </xsl:message>
        </xsl:if>

        <xsl:variable             name = "loeInfoES"
                                select = "document(concat('cdr:',
                                          format-number($loeIDES,
                                                        'CDR0000000000'),
                                                           '/lastp'))"/>

        <xsl:element              name = "LOESummaryES">
         <xsl:attribute           name = "cdr:ref">
          <xsl:value-of         select = "format-number($loeIDES,
                                                         'CDR0000000000')"/>
         </xsl:attribute>
         <xsl:value-of          select = "$loeInfoES/Summary
                                            /SummaryTitle"/>
        </xsl:element>

        <xsl:element              name = "BoardLOEURLES">
         <xsl:attribute           name = "cdr:xref">
          <xsl:value-of         select = "$loeInfoES/Summary
                                            /SummaryMetaData
                                            /SummaryURL/@cdr:xref"/>
         </xsl:attribute>
         <xsl:value-of          select = "$loeInfoES/Summary
                                            /SummaryMetaData
                                            /SummaryURL"/>
        </xsl:element>
       </xsl:if>
      </xsl:element>
    </xsl:for-each>

    <!--
    Adding PDQ Board Members to the Spanish summary

    (Currently) unable to add BoardMember elements while inside the
    for-each loop.  Added additional PDQBoard section containing the
    list of all editorial board members.
    ===================================================== -->
    <xsl:element                  name = "PDQBoard">
     <xsl:apply-templates       select = "Board"/>
     <xsl:apply-templates       select = "BoardMember"/>
    </xsl:element>

   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


         <!--
         =================================================================
         Template to denormalize the Board elements
         We also need the information of the LOE summaries.
         ================================================================= -->
         <xsl:template                   match = "BoardXXX">

          <!--
          For Spanish summaries we need to find the Board information by
          using the TranslationOf element and retrieving the information
          for the editorial board from the English version
          ===================================================================== -->
          <xsl:variable                   name = "sqlQueryESBoard">
        SELECT top 1 q.doc_id, q.path, q.int_val, eb.value AS 'ENBoard',
               eb.int_val AS 'ENBoardID'
          FROM query_term q
          JOIN query_term eb
            ON eb.doc_id = q.int_val
           AND eb.path = '/Summary/SummaryMetaData/PDQBoard/Board/@cdr:ref'
          JOIN query_term bt
            ON eb.int_val = bt.doc_id
           AND bt.path = '/Organization/OrganizationNameInformation/OfficialName/Name'
         WHERE q.path = '/Summary/TranslationOf/@cdr:ref'
           AND bt.value not like '%Advisory%'
           AND q.doc_id = ?
          </xsl:variable>

          <xsl:variable                   name = "queryRows"
                                        select = "document(cdr:escape-uri(
                                                  concat('cdrutil:/sql-query/',
                                                           $sqlQueryESBoard,
                                                           '~',
                                                           $sumNormId)))"/>


          <!--
          Assign the Board ID for English summaries
          Assign the Board ID of the corresponding English summary for Spanish
          ==================================================================== -->
          <xsl:variable                   name = "BoardID">
           <xsl:choose>
            <xsl:when                     test = "$sumLanguage = 'EN'">
             <xsl:value-of              select = "@cdr:ref"/>
            </xsl:when>
            <xsl:otherwise>
             <xsl:for-each              select = "$queryRows
                                                     /SqlResult
                                                     /row">
              <xsl:value-of             select = "col[@name='ENBoard']"/>
             </xsl:for-each>
            </xsl:otherwise>
           </xsl:choose>
          </xsl:variable>
          <xsl:value-of select = "$BoardID"/>
          <xsl:text>ZZZ</xsl:text>

          <!--
          Cancel the report if we can't find the board ID for the English board to
          retrieve the board information.
          ==================================================================== -->
          <xsl:if                         test = "$BoardID = ''">
           <xsl:message              terminate = "yes">
            <xsl:text>Error: No board ID available to retrieve board info!</xsl:text>
           </xsl:message>
          </xsl:if>

          <xsl:variable                   name = "BoardInfo"
                                        select = "document(concat('cdr:',$BoardID,
                                                                   '/last'))"/>
           <xsl:choose>
            <xsl:when                     test = "$sumLanguage = 'EN'">
             <xsl:element                 name = "Board">
              <xsl:attribute              name = "cdr:ref">
               <xsl:value-of            select = "@cdr:ref"/>
              </xsl:attribute>

              <xsl:value-of             select = "$BoardInfo/Organization
                                                    /OrganizationNameInformation
                                                    /OfficialName
                                                    /Name"/>
             </xsl:element>
            </xsl:when>
            <xsl:otherwise>
             <xsl:for-each              select = "$queryRows
                                                     /SqlResult
                                                     /row">
              <xsl:element                name = "Board">
               <xsl:attribute             name = "cdr:ref">
                <xsl:value-of           select = "col[@name='ENBoard']"/>
               </xsl:attribute>
               <xsl:value-of            select = "$BoardInfo/Organization
                                                    /OrganizationNameInformation
                                                    /OfficialName
                                                    /Name"/>
              </xsl:element>
             </xsl:for-each>
            </xsl:otherwise>
           </xsl:choose>

          <xsl:copy-of                  select = "$BoardInfo/Organization
                                                    /PDQBoardInformation
                                                    /ShowReviewerInfo"/>
          <xsl:copy-of                   select = "$BoardInfo/Organization
                                                    /PDQBoardInformation
                                                    /BoardNameTranslation"/>

          <xsl:variable                   name = "loeID"
                                        select = "$BoardInfo/Organization
                                                    /PDQBoardInformation
                                                    /LOESummary/@cdr:ref"/>

          <!--
          Advisory Boards may not list LOE information
          ============================================ -->
          <xsl:if                         test = "$loeID">
           <xsl:variable                  name = "loeInfo"
                                        select = "document(concat('cdr:',$loeID,
                                                                   '/lastp'))"/>
           <xsl:element                   name = "LOESummary">
            <xsl:attribute                name = "cdr:ref">
             <xsl:value-of              select = "$BoardInfo/Organization
                                                    /PDQBoardInformation
                                                    /LOESummary/@cdr:ref"/>
            </xsl:attribute>
            <xsl:value-of               select = "$loeInfo/Summary
                                                    /SummaryTitle"/>
           </xsl:element>

           <xsl:element                   name = "BoardLOEURL">
            <xsl:attribute                name = "cdr:xref">
             <xsl:value-of              select = "$loeInfo/Summary
                                                    /SummaryMetaData
                                                    /SummaryURL/@cdr:xref"/>
            </xsl:attribute>
            <xsl:value-of               select = "$loeInfo/Summary
                                                    /SummaryMetaData
                                                    /SummaryURL"/>
           </xsl:element>

           <!--
           For the Spanish summaries we need to retrieve the LOE documents
           from the information provided in the English board document.
           This only needs to be done for the treatment, supportive care, CAM.

           Starting in Dec. 2021 we also have to include Genetics summaries.
           We now include each (currently available ) summary type in this
           if block and should remove the if-block eventually.
           =================================================================== -->
           <xsl:if                        test = "$sumType = 'Treatment'
                                                  or
                                                  $sumType = 'Supportive care'
                                                  or
                                                  $sumType = 'Screening'
                                                  or
                                                  $sumType = 'Prevention'
                                                  or
                                                  $sumType = 'Genetics'
                                                  or
                                                  $sumType = concat('Integrative,',
                                                                    ' alternative, and ',
                                                                    'complementary therapies')">
           <xsl:variable                  name = "loeNormIDES"
                                        select = "number(
                                                   substring-before(
                                                   concat(
                                                   substring-after($loeID, 'CDR'),
                                                                       '#'), '#'))"/>
           <xsl:variable                  name = "sqlQueryESLoe">
        SELECT doc_id AS "CDRID"
          FROM query_term_pub
         WHERE int_val = ?
           AND path = '/Summary/TranslationOf/@cdr:ref'
           </xsl:variable>

           <xsl:variable                  name = "queryRowsLoe"
                                        select = "document(cdr:escape-uri(
                                                   concat('cdrutil:/sql-query/',
                                                           $sqlQueryESLoe,
                                                           '~',
                                                           $loeNormIDES)))"/>

           <!-- xsl:value-of select = "$loeNormIDES"/ -->

           <xsl:variable                  name = "loeIDES">
            <xsl:for-each               select = "$queryRowsLoe
                                                     /SqlResult
                                                     /row">
             <xsl:value-of              select = "col[@name='CDRID']"/>
            </xsl:for-each>
           </xsl:variable>

           <!--
           Cancel the report if we can't find a translation of the LOE Summary
           for this document type/board.

           Should we be checking this for English Summaries, too? VE, 2021-02-10
           ==================================================================== -->
           <xsl:if                        test = "$loeIDES = ''">
            <xsl:message             terminate = "yes">
             <xsl:text>Publishable version missing for Spanish LOE translation with </xsl:text>
             <xsl:text>SummaryType '</xsl:text>
             <xsl:value-of              select = "$sumType"/>
             <xsl:text>' and Board '</xsl:text>
             <xsl:value-of              select = "normalize-space($sumBoard)"/>
             <xsl:text>'</xsl:text>
            </xsl:message>
           </xsl:if>

           <xsl:variable                  name = "loeInfoES"
                                        select = "document(concat('cdr:',
                                                  format-number($loeIDES,
                                                                'CDR0000000000'),
                                                                   '/lastp'))"/>

           <xsl:element                   name = "LOESummaryES">
            <xsl:attribute                name = "cdr:ref">
             <xsl:value-of              select = "format-number($loeIDES,
                                                                 'CDR0000000000')"/>
            </xsl:attribute>
            <xsl:value-of               select = "$loeInfoES/Summary
                                                    /SummaryTitle"/>
           </xsl:element>

           <xsl:element                   name = "BoardLOEURLES">
            <xsl:attribute                name = "cdr:xref">
             <xsl:value-of              select = "$loeInfoES/Summary
                                                    /SummaryMetaData
                                                    /SummaryURL/@cdr:xref"/>
            </xsl:attribute>
            <xsl:value-of               select = "$loeInfoES/Summary
                                                    /SummaryMetaData
                                                    /SummaryURL"/>
           </xsl:element>
           </xsl:if>
          </xsl:if>

         </xsl:template>


 <!--
 =================================================================
 Template to denormalize the BoardMember elements
 ================================================================= -->
 <xsl:template                   match = "BoardMember">
  <xsl:variable                   name = "BoardMemberID"
                                select = "@cdr:ref"/>
  <xsl:variable                   name = "BoardMemberInfo"
                                select = "document(concat('cdr:',
                                                            $BoardMemberID,
                                                            '/last'))"/>
  <xsl:variable                   name = "personNormId"
                                select = "number(
                                           substring-before(
                                           concat(
                                           substring-after(@cdr:ref, 'CDR'),
                                                               '#'), '#'))"/>
  <!-- -->
  <!--
  The BoardMember names are formatted for use with the Mailers
  ============================================================ -->
  <xsl:element                    name = "BoardMember">
   <xsl:attribute                 name = "cdr:ref">
    <xsl:value-of               select = "@cdr:ref"/>
   </xsl:attribute>

   <xsl:value-of                select = "concat($BoardMemberInfo/
                                                   Person/
                                                   PersonNameInformation/
                                                   SurName,
                                                   ', ',
                                                  $BoardMemberInfo/
                                                   Person/
                                                   PersonNameInformation/
                                                   GivenName)"/>
  </xsl:element>

  <!--
  We need the board member name (including affiliation) but
  we're unable to get this information from the Person document,
  so we will have to query the database to find the related
  BoardMember document and then create a formatted string
  for the display in the About This Summary section.
  Only the Editorial Board Members need this, not the Advisory
  Board members and we only pick up affiliation names without
  Usage attribute and with the SR attribute.
  Note:  This query must pass the CDR-ID of the English summary
         even for the Spanish documents.
  Note2: The query joins to the query_term_pub table to get
         the summaries.  This means that the publish preview
         will not see the affiliation name for newly added
         board members until *after* a publishable version
         has been created.
  ============================================================ -->
  <xsl:if                         test = "not(contains(
                                           ../Board, 'Advisory'))">
   <xsl:variable                  name = "sqlQueryName">
SELECT s.doc_id AS 'Summary-ID', s.int_val AS 'Person-ID',
       b.doc_id AS 'BoardMember-ID', p.value AS 'BoardMember Name',
       an.value AS 'Affiliation Name', au.value AS 'Usage'
  FROM query_term_pub s
  JOIN query_term p
    ON p.doc_id  = s.int_val
  JOIN query_term b
    ON s.int_val = b.int_val
   AND b.path    = '/PDQBoardmemberInfo/BoardMemberName/@cdr:ref'
  JOIN query_term an
    ON an.doc_id = b.doc_id
   AND an.path   = '/PDQBoardMemberInfo/Affiliations/' +
                   'Affiliation/AffiliationName'
  LEFT OUTER JOIN query_term au
    ON au.doc_id = b.doc_id
   AND au.path   = '/PDQBoardMemberInfo/Affiliations/Affiliation/@Usage'
   AND LEFT(an.node_loc, 8) = LEFT(au.node_loc, 8)
 WHERE s.path    = '/Summary/SummaryMetaData/PDQBoard/BoardMember/@cdr:ref'
   AND p.path    = '/Person/PersonNameInformation/SurName'
   AND p.doc_id  = ?
   AND s.doc_id  = ?
 ORDER BY au.value
   </xsl:variable>

   <!--
   Note: Don't perform a normalize-space here since it would convert
         the resulting node into a string
   ================================================================== -->
   <xsl:variable                  name = "queryRows"
                                select = "document(cdr:escape-uri(
                                           concat('cdrutil:/sql-query/',
                                                   $sqlQueryName,
                                                   '~',
                                                   $personNormId,
                                                   '~',
                                                   $sumNormIdEN)))"/>

   <xsl:element                   name = "LeadReviewer">
    <!-- Adding last name as attribute to allow sorting by last name -->
    <xsl:attribute                name = "lname">
     <xsl:value-of              select = "$BoardMemberInfo
                                                   /Person
                                                   /PersonNameInformation
                                                   /SurName"/>
    </xsl:attribute>
    <xsl:value-of               select = "$BoardMemberInfo
                                                   /Person
                                                   /PersonNameInformation
                                                   /GivenName"/>
    <xsl:text> </xsl:text>
    <xsl:if                       test = "$BoardMemberInfo
                                                   /Person
                                                   /PersonNameInformation
                                                   /MiddleInitial">
     <xsl:value-of              select = "$BoardMemberInfo
                                                   /Person
                                                   /PersonNameInformation
                                                   /MiddleInitial"/>
     <xsl:text> </xsl:text>
    </xsl:if>
    <xsl:value-of               select = "$BoardMemberInfo
                                                   /Person
                                                   /PersonNameInformation
                                                   /SurName"/>
    <xsl:for-each               select = "$BoardMemberInfo
                                                   /Person
                                                   /PersonNameInformation
                                                   /ProfessionalSuffix
                                                   /StandardProfessionalSuffix |
                                          $BoardMemberInfo
                                                   /Person
                                                   /PersonNameInformation
                                                   /ProfessionalSuffix
                                                   /CustomProfessionalSuffix">
     <xsl:text>, </xsl:text>
     <xsl:value-of              select = "."/>
    </xsl:for-each>

    <!--
    Don't display parenthesis if no affiliation name exists
    ======================================================= -->
    <xsl:if                       test = "$queryRows
                                            /SqlResult
                                            /row">
     <xsl:text> (</xsl:text>
     <xsl:for-each              select = "$queryRows
                                           /SqlResult
                                           /row">
      <xsl:if                     test = "not(col[@name='Usage'] = 'BD')">
       <xsl:value-of            select = "col[@name='Affiliation Name']"/>
       <xsl:if                    test = "not(position() = last())">
        <xsl:text> &amp; </xsl:text>
       </xsl:if>
      </xsl:if>
     </xsl:for-each>
     <xsl:text>)</xsl:text>
    </xsl:if>
   </xsl:element>
  </xsl:if>
 </xsl:template>


 <!--
 =================================================================
 Template to denormalize the Term elements
 ================================================================= -->
 <xsl:template                    match = "Term">
  <xsl:variable                    name = "TermID"
                                 select = "@cdr:ref"/>
  <xsl:variable                    name = "TermInfo"
                                 select = "document(concat('cdr:',$TermID,
                                                           '/lastp'))"/>
  <xsl:element                     name = "Term">
   <xsl:attribute                  name = "cdr:ref">
    <xsl:value-of                select = "@cdr:ref"/>
   </xsl:attribute>

   <xsl:value-of                 select = "$TermInfo/Term/
                                            PreferredName"/>
  </xsl:element>
 </xsl:template>


 <!--
 =================================================================
 Template to denormalize the Term elements
 ================================================================= -->
 <xsl:template                    match = "Diagnosis | Intervention | Drug">
  <xsl:variable                    name = "TermID"
                                 select = "@cdr:ref"/>

  <xsl:variable                    name = "TermInfo"
                                 select = "document(concat('cdr:',$TermID,
                                                           '/lastp'))"/>
  <xsl:element                     name = "{name()}">
   <xsl:attribute                  name = "cdr:ref">
    <xsl:value-of                select = "@cdr:ref"/>
   </xsl:attribute>

   <xsl:value-of                 select = "$TermInfo/Term/
                                            PreferredName"/>
  </xsl:element>
 </xsl:template>


 <!--
 =================================================================
 Template to denormalize the SummaryRef elements
 We need this denormalization in order to correctly create the
 link in the QC report to the listed summaries.
 ================================================================= -->
 <xsl:template                    match = "SummaryRef |
                                           SummaryFragmentRef">
  <xsl:variable                    name = "SummaryRefID"
                                 select = "substring-before(
                                             concat(@cdr:href, '#'), '#')"/>

  <xsl:variable                    name = "thisSummaryId"
                                 select = "document('cdrutil:/docid')"/>
  <xsl:variable                    name = "pubVersion"
                                 select = "document(concat('cdrutil:',
                                                           '/get-pv-num/',
                                                       $SummaryRefID))"/>

  <!--
  If a SummaryRef or SummaryFragmentRef is pointing to itself and the summary
  is new we can't expect a publishable version of the summary to exist.
  In this case we need to allow to denormalize with the last version.
  ====================================================================== -->
  <xsl:variable                    name = "verQualifier">
   <xsl:choose>
    <xsl:when                      test = "$pubVersion = 0
                                           and
                                           $SummaryRefID = $thisSummaryId">
     <xsl:text>/last</xsl:text>
    </xsl:when>

    <!-- Exit with an error if and empty tag is found or no publishable
         version exists -->
    <xsl:when                      test = "not($SummaryRefID)
                                           or
                                           normalize-space($SummaryRefID) = ''">
     <xsl:message             terminate = "yes">
      <xsl:text>Empty </xsl:text>
      <xsl:value-of              select = "name()"/>
      <xsl:text> tag found</xsl:text>
     </xsl:message>
    </xsl:when>
    <xsl:when                      test = "$pubVersion = 0">
     <xsl:message             terminate = "yes">
      <xsl:text>Publishable version doesn't exist: </xsl:text>
      <xsl:value-of              select = "name()"/>
      <xsl:text>/@</xsl:text>
      <xsl:value-of              select = "$SummaryRefID"/>
     </xsl:message>
    </xsl:when>
    <xsl:otherwise>
     <xsl:text>/lastp</xsl:text>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:variable>
  <xsl:variable                    name = "SummaryRefInfo"
                                 select = "document(concat('cdr:',
                                                           $SummaryRefID,
                                                           $verQualifier))"/>

  <xsl:element                     name = "{name()}">
   <xsl:attribute                  name = "cdr:href">
    <xsl:value-of                select = "@cdr:href"/>
   </xsl:attribute>

   <xsl:element                    name = "SummaryRefText">
    <xsl:apply-templates/>
   </xsl:element>

   <xsl:element                    name = "LinkedSummary">
    <xsl:element                   name = "LinkedSummaryType">
     <xsl:value-of               select = "$SummaryRefInfo/Summary
                                             /SummaryMetaData
                                             /SummaryType"/>
    </xsl:element>
    <xsl:element                   name = "LinkedSummaryAudience">
     <xsl:value-of               select = "$SummaryRefInfo/Summary
                                             /SummaryMetaData
                                             /SummaryAudience"/>
    </xsl:element>

   </xsl:element>
  </xsl:element>
 </xsl:template>


 <!--
 =================================================================
 Template to denormalize the Term elements
 ================================================================= -->
 <xsl:template                    match = "MiscellaneousDocLink">
  <xsl:variable                    name = "miscID"
                                 select = "@cdr:ref"/>

  <xsl:variable                    name = "docVersion">
   <xsl:choose>
    <xsl:when                      test = "$isQC = 'N'">
     <xsl:text>/lastp</xsl:text>
    </xsl:when>
   </xsl:choose>
  </xsl:variable>

  <xsl:variable                    name = "miscInfo"
                                 select = "document(concat('cdr:',
                                            cdr:escape-uri($miscID),
                                                           $docVersion))"/>
  <xsl:variable                    name = "miscIDFrag"
                                 select = "substring-after($miscID, '#')"/>

  <xsl:element                     name = "MiscellaneousDocLink">
   <xsl:attribute                  name = "cdr:ref">
    <xsl:value-of                select = "@cdr:ref"/>
   </xsl:attribute>

   <xsl:apply-templates          select = "$miscInfo/
                                            MiscellaneousDocument/
                                            MiscellaneousDocumentText//
                                            Section[@cdr:id = $miscIDFrag]"/>
  </xsl:element>
 </xsl:template>


 <!--
 ==================================================================
 Template to denormalize the Section element within a
 MiscDocument.
 ================================================================== -->
 <xsl:template                    match = "Section">
  <xsl:element                     name = "{name()}">
   <xsl:attribute                  name = "cdr:id">
    <xsl:value-of                select = "concat('_md', @cdr:id)"/>
   </xsl:attribute>

   <xsl:apply-templates          select = "node()"
                                   mode = "miscdoc">
    <xsl:with-param                name = "md_id"
                                 select = "'_md'"/>
   </xsl:apply-templates>

   </xsl:element>
 </xsl:template>


 <!--
 =================================================================
 Template to convert the cdr:id value for all elements of the
 MiscDocument. cdr:id values need to be unique within a summary
 document, so we're adding "_md" as a prefix.
 ================================================================= -->
 <xsl:template                    match = "Para | Table |
                                           ItemizedList | OrderedList |
                                           MediaLink | QandASet | PlaceHolder"
                                   mode = "miscdoc">
  <xsl:param                       name = "md_id"/>
  <xsl:element                     name = "{name()}">
   <xsl:for-each                 select = "@*">
    <xsl:choose>
     <xsl:when                     test = "name() = 'cdr:id'">
      <xsl:attribute               name = "cdr:id">
       <xsl:value-of             select = "$md_id"/>
       <xsl:value-of             select = "."/>
      </xsl:attribute>
     </xsl:when>
     <xsl:otherwise>
      <xsl:attribute               name = "{name()}">
       <xsl:value-of             select = "."/>
      </xsl:attribute>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:for-each>

   <xsl:apply-templates/>

  </xsl:element>
 </xsl:template>


 <!--
 =================================================================
 Drop the Title element from the Misc. Doc Section. The title is
 provided by the Summary document where needed.
 ================================================================= -->
 <xsl:template                    match = "Section/Title"
                                   mode = "miscdoc">
 </xsl:template>


 <!--
 ==================================================================
 Template rule used to do XML to XML transformations which
 copies any attribute node, or node that is child of of something
 This rule is applied only to the mode='miscdoc'.
 ================================================================== -->
 <xsl:template                    match = "@*|node()"
                                   mode = "miscdoc">
  <xsl:param                       name = "md_id"/>
  <xsl:copy>
   <xsl:apply-templates          select = "@*|node()"
                                   mode = "miscdoc">
    <xsl:with-param                name = "md_id"
                                 select = "'_md'"/>
   </xsl:apply-templates>
  </xsl:copy>
 </xsl:template>


 <!--
 ==================================================================
 Template rule used to do XML to XML transformations which
 copies any attribute node, or node that is child of of something
 ================================================================== -->
 <xsl:template                    match = "@*|node()">
  <xsl:copy>
   <xsl:apply-templates          select = "@*|node()"/>
  </xsl:copy>
 </xsl:template>

</xsl:transform>
