<?xml version = "1.0"?>
<!-- Filter title: DocTitle for GlossaryTermConcept -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">
 <xsl:output                    method = "text"/>

 <!-- Pass Doc ID in CDRnnnnnnnnnn format -->
 <xsl:param                       name = "docId" 
                                select = "'CDR9999999999'"/>

 <!--
 =====================================================================
 This filter creates the document.title for GlossaryTermConcept docs.
 ===================================================================== -->
 <xsl:template                   match = "GlossaryTermConcept">
  <xsl:variable                   name = "cdrId"
                                select = "document('cdrutil:/docid')"/>
  <xsl:variable                   name = "def"
                                select = "TermDefinition[1]/DefinitionText"/>
  <xsl:variable                   name = "front"
                                select = "concat(substring($def, 1, 50), 
                                                ' ...')"/>
  <!-- 
  If we are running this filter through the server (via XMetaL) the
  docId parameter will be passed.  However, if the parameter has not been
  passed the filter has been submitted some other way and we're
  retrieving the CDR-ID using the 'cdrutil:/docid' function.
  ======================================================================= -->
  <xsl:choose>
   <xsl:when                      test = "not($docId = 'CDR9999999999')">
    <xsl:value-of               select = "concat( 
                                           number(
                                           substring-after($docId, 'CDR')),
                                           ': ',
                                           $front)"/>
   </xsl:when>
   <xsl:otherwise>
    <xsl:value-of               select = "concat( 
                                           number(
                                           substring-after($cdrId, 'CDR')),
                                           ': ',
                                           $front)"/>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>

</xsl:transform>
