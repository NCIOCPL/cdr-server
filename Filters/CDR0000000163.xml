<?xml version="1.0"?>
<!-- Filter title: Glossary Term Display for Patient Summaries -->
<xsl:transform   xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                   version = "1.0">

 <xsl:include   href = "cdr:name:Module: InLine Markup Formatter"/>
 <xsl:include   href = "cdr:name:Module: STYLE Default"/>  

 <xsl:output                    method = "html" 
                                indent = "no"/>

 <!-- Written by Nanci, 5/14/2002 -->

 <!-- 
 ==================================================================
 Create HTML Output
 ================================================================== -->
 <xsl:template                   match = "/">
  <!--Filter written by C.Burg - 6/12/2001 -->
  <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
  <HTML>
   <HEAD>
    <xsl:variable                 name = "cdrdocs" 
                                select = "document('cdrx:/*/CdrCtl')"/>
    <TITLE>
     <xsl:value-of              select = "document('cdrutil:/docid')"/>
     <xsl:text>: </xsl:text>
     <xsl:value-of              select = "substring-before($cdrdocs/
                                          CdrDocCtl/DocTitle,';')"/>
    </TITLE>
     
    <STYLE type='text/css'>
     <xsl:call-template           name = "defaultStyle"/>  

    </STYLE>
   </HEAD>
   <BASEFONT                      FACE = 'Arial, Helvetica, sans-serif'/> 
   <xsl:apply-templates         select = "GlossaryTerm"/>
  </HTML>
 </xsl:template>


 <!--
 =============================================================
 Displays Glossary Term, Pronunciation, and Definition
 ============================================================= -->
 <xsl:template                   match = "GlossaryTerm">
  <BODY>
   <b>
    <xsl:value-of               select = "TermName"/>
   </b>

   <xsl:choose>
    <xsl:when                     test = "TermPronunciation">
     <xsl:text> </xsl:text>
      <i>
       <xsl:value-of            select = "TermPronunciation"/>
      </i>
     <xsl:text>:</xsl:text>
    </xsl:when>
    <xsl:otherwise>
     <xsl:text>:</xsl:text>
    </xsl:otherwise>
   </xsl:choose>
   <p/>
      
   <xsl:for-each                select = "TermDefinition">
    <xsl:if                       test = "Audience = 'Patient' 
                                          and 
                                          Dictionary = 'Cancer.gov'">
     <xsl:apply-templates       select = "DefinitionText"/>
    </xsl:if>
   </xsl:for-each>
  </BODY>
 </xsl:template>

  </xsl:transform>
