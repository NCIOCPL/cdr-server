<?xml version="1.0"?>
<!-- Filter title: DrugInformationSummary QC Report Filter -->
<!--
================================================================

Filter to create the DrugInformationSummary QC Report
   Written      2006-04-03

================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "html"/>

 <xsl:include  href = "cdr:name:Module: Attribute Sets"/>
 <xsl:include  href = "cdr:name:Module: InLine Markup Formatter"/>
 <xsl:include  href = "cdr:name:Module: QC Filter Templates"/>
 <xsl:include  href = "cdr:name:Module: QC Filter Templates - Summary"/>
 <xsl:include  href = "cdr:name:Module: Checkbox Formatter"/>
 <xsl:include  href = "cdr:name:Module: Table Formatter"/>
 <xsl:include  href = "cdr:name:Module: STYLE Default"/>
 <xsl:include  href = "cdr:name:Module: STYLE RS Insertion Deletion"/>

 <xsl:variable                    name = "docID"
                                select = "document('cdrutil:/docid')"/>
 <xsl:variable                    name = "whoAmI"
                                select = "'DrugInfoSummary'"/>
 <!--
 ======================================================================
 Main Template
 ====================================================================== -->
 <xsl:template                   match = "/">
  <!-- <!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /> -->
  <HTML>
   <HEAD>
    <xsl:variable                 name = "cdrdocs"
                                select = "document('cdrx:/*/CdrCtl')"/>
    <TITLE>
     <xsl:value-of              select = "concat('CDR',
                                           number(
                                           substring-after($docID, 'CDR')))"/>
     <xsl:text>: </xsl:text>
     <xsl:value-of              select = "substring-before(
                                           concat($cdrdocs/CdrDocCtl/
                                                  DocTitle, ';'), ';')"/>
    </TITLE>
    <STYLE type='text/css'>
     .miscdoc   { background-color: DFDFDF; }
     <xsl:call-template           name = "defaultStyle"/>
     <xsl:call-template           name = "rsInsertionDeletionStyle"/>
    </STYLE>
   </HEAD>
   <BASEFONT                      FACE = 'Arial, Helvetica, sans-serif' />
   <xsl:apply-templates         select = "DrugInformationSummary"/>
  </HTML>
 </xsl:template>


 <!--
 ===================================================================
 Generate the HTML for the Terminology QC Report
 =================================================================== -->
 <xsl:template                   match = "DrugInformationSummary">
  <BODY>

  <!--
  ==================================================================
  Display Report heading and subheading
  ================================================================== -->
  <xsl:element                    name = "span">
   <xsl:attribute                 name = "class">
    <xsl:text>big</xsl:text>
   </xsl:attribute>

    <center>
     <xsl:text>Drug Information Summary</xsl:text>
     <br/>
     <xsl:text>QC Report</xsl:text>
    </center>
  </xsl:element>

   <b>
   <font size='3'>
    <center>
     <xsl:value-of              select = "document(
                                           concat('cdrutil:/date/%25B %25#d,',
                                                  ' %25Y %25#I:%25M% 25p'))"/>
    </center>
   </font>
  </b>
  <p/>

  <!--
  ====================================================================
  Display CDR ID
  ==================================================================== -->
  <xsl:element                    name = "span">
   <xsl:attribute                 name = "class">
    <xsl:text>big</xsl:text>
   </xsl:attribute>

   <xsl:value-of                select = "concat('CDR',
                                           number(
                                           substring-after($docID, 'CDR')))"/>
  </xsl:element>
  <p/>

  <!--
  ===================================================================
  Display Document Title
  =================================================================== -->
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:element                 name = "span">
      <xsl:attribute              name = "class">
       <xsl:text>big</xsl:text>
      </xsl:attribute>

      <xsl:text>Title</xsl:text>
     </xsl:element>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "Title"/>
    </td>
   </tr>
  </table>
  <p/>

  <!--
  ===================================================================
  Display Drug Information Meta Data
  =================================================================== -->
  <xsl:element                 name = "span">
   <xsl:attribute              name = "class">
    <xsl:text>big</xsl:text>
   </xsl:attribute>
   <xsl:text>Drug Info Meta Data</xsl:text>
  </xsl:element>
  <xsl:apply-templates          select = "DrugInfoMetaData"/>

  <!--
  ===================================================================
  Display Drug Information Summary Data
  =================================================================== -->
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:element                 name = "span">
      <xsl:attribute              name = "class">
       <xsl:text>big</xsl:text>
      </xsl:attribute>
      <xsl:text>Drug Info Summary</xsl:text>
     </xsl:element>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "SummarySection"/>
    </td>
   </tr>
  </table>
  <p/>

  <!--
  ===================================================================
  Display Drug Information Administrative Data
  =================================================================== -->
  <xsl:apply-templates          select = "DrugReference"/>
  <p/>

  <xsl:call-template              name = "adminSection"/>
  </BODY>
 </xsl:template>


 <!--
 ===================================================================
 Template to display the Other Name elements
 =================================================================== -->
 <xsl:template                   match = "DrugInfoMetaData">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Description</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "Description"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>URL</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "URL"/>
     <br/>
     <xsl:for-each              select = "URL">
      <xsl:call-template          name = "createWebLink"/>
     </xsl:for-each>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Audience</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "Audience"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Drug Info Type</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "DrugInfoType"/>
    </td>
   </tr>
   <xsl:if                        test = "Manufacturer">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Manufacturer</b>
     </td>
     <td>
      <xsl:for-each             select = "Manufacturer">
       <li>
       <xsl:value-of            select = "Organization/
                                          OrganizationNameInformation/
                                          OfficialName/
                                          Name"/>
       <xsl:for-each            select = "Organization">
        <xsl:call-template        name = "createCdrQcLink"/>
       </xsl:for-each>
       </li>
      </xsl:for-each>
     </td>
    </tr>
   </xsl:if>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>FDA Approved</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "FDAApproved"/>
    </td>
   </tr>
   <xsl:if                        test = "ApprovedIndication">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Approved Indication</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:for-each             select = "ApprovedIndication">
       <li>
        <xsl:value-of           select = "Term/
                                          PreferredName"/>
         <xsl:for-each          select = "Term">
          <xsl:call-template      name = "createCdrQcLink"/>
        </xsl:for-each>
       </li>
      </xsl:for-each>
     </td>
    </tr>
   </xsl:if>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Term Link</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "TerminologyLink/
                                          Term/
                                          PreferredName"/>
     <xsl:for-each              select = "TerminologyLink/Term">
      <xsl:call-template          name = "createCdrQcLink"/>
     </xsl:for-each>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Glossary Link</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "GlossaryLink/
                                          GlossaryTermName/
                                          TermName/
                                          TermNameString"/>
     <xsl:for-each              select = "GlossaryLink/
                                          GlossaryTermName">
      <xsl:call-template          name = "createGlossaryQcLink"/>
     </xsl:for-each>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>


 <!--
 ===================================================================
 Display Description information with insertion/deletion markup
 =================================================================== -->
 <xsl:template                   match = "Description |
                                          DateLastModified">
  <xsl:apply-templates/>
 </xsl:template>


 <!--
 ===================================================================
 Template to display the OtherNameType values

 Note:  The proper display requires that the NLM DrugRefs are 
        entered first and before the FDA DrugRefs.  If there are 
        multiple NLM DrugRefs, those must be listed together.
 =================================================================== -->
 <xsl:template                   match = "DrugReference">
  <xsl:variable                   name = "fracID"
                                select = "substring-after(
                                            DrugReferenceDescription/
                                            MiscellaneousDocument/
                                            @cdr:ref, '#')"/>

  <!-- Store the number of NLM DrugRefs -->
  <xsl:variable                   name = "nlmRefs"
                                select = "count(//DrugReference[
                                                    DrugReferenceType='NLM'
                                                    ])"/>

  <!-- 'NLM' may have multiple drugs but we only display one heading -->
  <xsl:choose>
   <xsl:when                      test = "DrugReferenceType = 'NLM'
                                          and
                                          position() = 1">
    <xsl:element                  name = "span">
     <xsl:attribute               name = "class">
      <xsl:text>big</xsl:text>
     </xsl:attribute>

     <xsl:text>Drug Reference - </xsl:text>
     <xsl:value-of              select = "DrugReferenceType"/>
    </xsl:element>
   </xsl:when>
   <xsl:when                      test = "DrugReferenceType = 'NLM'
                                          and
                                          position() > 1">
    <!-- Do nothing -->
   </xsl:when>

   <!-- Only display non-NLM headings here -->
   <xsl:otherwise>
    <xsl:element                  name = "span">
     <xsl:attribute               name = "class">
      <xsl:text>big</xsl:text>
     </xsl:attribute>

     <xsl:text>Drug Reference - </xsl:text>
     <xsl:value-of              select = "DrugReferenceType"/>
    </xsl:element>
   </xsl:otherwise>
  </xsl:choose>

  <table        xsl:use-attribute-sets = "table">
   <xsl:if                        test = "DrugReferencePostedDate">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Posted Date</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:apply-templates      select = "DrugReferencePostedDate"/>
     </td>
    </tr>
   </xsl:if>

   <!-- 'NLM' may have multiple drugs but we only display one heading -->
   <xsl:choose>
    <xsl:when                     test = "DrugReferenceType = 'NLM'
                                          and
                                          position() = 1">
     <tr>
      <td       xsl:use-attribute-sets = "cell1of2">
       <b>Link</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:apply-templates     select = "DrugReferenceLink"/>
       <br/>
       <xsl:for-each            select = "DrugReferenceLink">
        <xsl:call-template        name = "createWebLink"/>
       </xsl:for-each>
      </td>
     </tr>
    </xsl:when>
    <xsl:when                     test = "DrugReferenceType = 'NLM'
                                          and
                                          position() > 1">
     <tr>
      <td       xsl:use-attribute-sets = "cell1of2">
       <xsl:text> </xsl:text>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:apply-templates     select = "DrugReferenceLink"/>
       <br/>
       <xsl:for-each            select = "DrugReferenceLink">
        <xsl:call-template        name = "createWebLink"/>
       </xsl:for-each>
      </td>
     </tr>
    </xsl:when>
    <xsl:otherwise>
     <tr>
      <td       xsl:use-attribute-sets = "cell1of2">
       <b>Link</b>
      </td>
      <td       xsl:use-attribute-sets = "cell2of2">
       <xsl:apply-templates     select = "DrugReferenceLink"/>
       <br/>
       <xsl:for-each            select = "DrugReferenceLink">
        <xsl:call-template        name = "createWebLink"/>
       </xsl:for-each>
      </td>
     </tr>
    </xsl:otherwise>
   </xsl:choose>

   <xsl:if                        test = "DrugReferenceType = 'NLM'
                                         and
                                         position() = $nlmRefs">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <xsl:element                name = "span">
       <xsl:attribute             name = "class">
        <xsl:text>bold</xsl:text>
       </xsl:attribute>

       <xsl:text>Description </xsl:text>
      </xsl:element>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:apply-templates      select = "DrugReferenceDescription/
                                          MiscellaneousDocument/
                                          MiscellaneousDocumentTitle"/>
      <xsl:for-each             select = "DrugReferenceDescription/
                                          MiscellaneousDocument">
       <xsl:call-template         name = "createCdrQcLink"/>
      </xsl:for-each>
      <br/>
      <i><br/>
       <div class="miscdoc">
        <xsl:apply-templates    select = "DrugReferenceDescription//*[@cdr:id
                                                                 = $fracID]"/>
       </div>
      </i>
     </td>
    </tr>
   </xsl:if>

   <xsl:if                        test = "Comment">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Comments</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
     <xsl:for-each              select = "Comment">
      <xsl:apply-templates      select = "."/>
      <br/>
     </xsl:for-each>
     </td>
    </tr>
   </xsl:if>
  </table>
  <p/>
 </xsl:template>

 <!--
 ===================================================================
 Template to display the OtherNameType values
 =================================================================== -->
 <xsl:template                    name = "adminSection">
  <hr width="35%"/>
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Entered By</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "EnteredBy"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Entry Date</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "EntryDate"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Date Last Modified</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "DateLastModified"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Processing Status</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ProcessingStatus"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Comments</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "Comment"/>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>

 <!--
 ================================================================
 Display Comments
 ================================================================ -->
 <xsl:template                   match = "Comment |
                                          ResponseToComment">
  <xsl:apply-templates          select = "."
                                  mode = "RS"/>
 </xsl:template>
</xsl:transform>
