<?xml                   version = '1.0'?>

<!--

  $Id$

  Name: 'EVS Concept Filter'

  Extracts properties from EVS concept documents for import as CDR Term
  documents.

-->

<xsl:transform        xmlns:xsl = 'http://www.w3.org/1999/XSL/Transform'
                    xmlns:xlink = 'http://www.w3.org/1999/xlink'
                        version = '1.0'>
 <xsl:output             method = 'xml'/>
 <xsl:param                name = 'concepts'
                         select = '"org.LexGrid.concepts"'/>
 <xsl:param                name = 'commonTypes'
                         select = '"org.LexGrid.commonTypes"'/>
 <xsl:param                name = 'conceptClass'
                         select = 'concat($concepts, ".Concept")'/>
 <xsl:param                name = 'presentationClass'
                         select = 'concat($concepts, ".Presentation")'/>
 <xsl:param                name = 'definitionClass'
                         select = 'concat($concepts, ".Definition")'/>
 <xsl:param                name = 'propertyClass'
                         select = 'concat($commonTypes, ".Property")'/>
 <xsl:param                name = 'sourceClass'
                         select = 'concat($commonTypes, ".Source")'/>
 <xsl:param                name = 'textClass'
                         select = 'concat($commonTypes, ".Text")'/>

 <xsl:template            match = '/'>
  <xsl:apply-templates   select = 'xlink:httpQuery/queryResponse'/>
 </xsl:template>

 <xsl:template            match = 'queryResponse'>
  <xsl:apply-templates   select = 'class[@name = $conceptClass]'/>
 </xsl:template>

 <xsl:template            match = 'class'>
  <xsl:variable            name = 'code'
                         select = 'field[@name = "_entityCode"]'/>
  <Concept                 code = '{$code}'>
   <xsl:for-each         select = 'field[@name = "_presentationList"]'>
    <xsl:call-template     name = 'extractNames'/>
   </xsl:for-each>
   <xsl:for-each         select = 'field[@name = "_definitionList"]'>
    <xsl:call-template     name = 'extractDefinitions'/>
   </xsl:for-each>
   <xsl:for-each         select = 'field[@name = "_propertyList"]'>
    <xsl:call-template     name = 'extractProperties'/>
   </xsl:for-each>
  </Concept>
 </xsl:template>

 <xsl:template             name = 'extractNames'>
  <xsl:for-each          select = 'class[@name = $presentationClass]'>
   <xsl:variable           name = 'pname'
                         select = 'field[@name = "_propertyName"]'/>
   <xsl:choose>
    <xsl:when              test = '$pname = "Preferred_Name"'>
     <Property>
      <Name>Preferred_Name</Name>
      <Value>
       <xsl:call-template  name = 'extractValue'/>
      </Value>
     </Property>
    </xsl:when>
    <xsl:when              test = '$pname = "FULL_SYN"'>
     <Property>
      <Name>FULL_SYN</Name>
      <Value>
       <xsl:call-template  name = 'extractValue'/>
      </Value>
      <xsl:for-each      select = 'field[@name = "_representationalForm"]'>
       <Group>
        <xsl:value-of    select = '.'/>
       </Group>
      </xsl:for-each>
      <xsl:for-each      select = 'field[@name = "_sourceList"]'>
       <xsl:for-each     select = 'class[@name = $sourceClass]'>
        <Source>
         <xsl:for-each   select = 'field[@name = "_content"]'>
          <xsl:value-of  select = '.'/>
         </xsl:for-each>
        </Source>
       </xsl:for-each>
      </xsl:for-each>
     </Property>
    </xsl:when>
   </xsl:choose>
  </xsl:for-each>
 </xsl:template>

 <xsl:template             name = 'extractDefinitions'>
  <xsl:for-each          select = 'class[@name = $definitionClass]'>
   <xsl:variable           name = 'pname'
                         select = 'field[@name = "_propertyName"]'/>
   <xsl:if                 test = '$pname = "DEFINITION"'>
    <Property>
     <Name>DEFINITION</Name>
     <Value>
      <xsl:call-template   name = 'extractValue'/>
     </Value>
     <xsl:for-each      select = 'field[@name = "_sourceList"]'>
      <xsl:for-each     select = 'class[@name = $sourceClass]'>
       <Source>
        <xsl:for-each   select = 'field[@name = "_content"]'>
         <xsl:value-of  select = '.'/>
        </xsl:for-each>
       </Source>
      </xsl:for-each>
     </xsl:for-each>
    </Property>
   </xsl:if>
  </xsl:for-each>  
 </xsl:template>

 <xsl:template             name = 'extractProperties'>
  <xsl:for-each          select = 'class[@name = $propertyClass]'>
   <xsl:variable           name = 'pname'
                         select = 'field[@name = "_propertyName"]'/>
   <xsl:if                 test = '$pname = "Semantic_Type" or
                                   $pname = "Synonym" or
                                   $pname = "CAS_Registry" or
                                   $pname = "NSC_Code" or
                                   $pname = "IND_Code"'>
    <Property>
     <Name>
      <xsl:value-of      select = '$pname'/>
     </Name>
     <Value>
      <xsl:call-template   name = 'extractValue'/>
     </Value>
    </Property>
   </xsl:if>
  </xsl:for-each>  
 </xsl:template>

 <!-- Concatenate the pieces of a text value -->
 <xsl:template             name = 'extractValue'>
  <xsl:for-each          select = 'field[@name = "_value"]'>
   <xsl:for-each         select = 'class[@name = $textClass]'>
    <xsl:for-each        select = 'field[@name = "_content"]'>
     <xsl:value-of       select = '.'/>
    </xsl:for-each>
   </xsl:for-each>
  </xsl:for-each>
 </xsl:template>
</xsl:transform>
