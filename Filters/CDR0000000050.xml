<?xml      version = "1.0"?>
<!--
 ================================================================
 $Id$

 Filter to create a Person Content QC Report 
 Written by Volker Englisch

 $Log: not supported by cvs2svn $
 ================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "html"/>

 <xsl:include  href = "cdr:name:Module: Attribute Sets"/>
 <xsl:include  href = "cdr:name:Module: STYLE Default"/> 
 <xsl:include  href = "cdr:name:Module: Organization QC Common"/>

 <xsl:variable                    name = "docID"
                                select = "document('cdrutil:/docid')"/>

   <!--Filter written by C.Burg - 9/25/2001 -->
   <!-- minor format changes 7/10/2002 -->
   <!-- more minor changes - 6/2003 - Nanci (to work w/new denorm filters) -->
   <!-- more minor changes - 6/16/2003 - Nanci (added tables) -->
   <!-- added space after CDRID - 8/7/2003 - Nanci -->
   <!-- added Website element content - 8/18/2003 - Nanci -->

   <!-- =========================================================
          This program is a filter to create an Organization
          Content QC Report 
        =========================================================-->
 <xsl:template                   match = "/">
  <xsl:text disable-output-escaping="yes">&lt;!DOCTYPE HTML PUBLIC '-//IETF//DTD HTML//EN' /&gt;</xsl:text>
  <HTML>
   <HEAD>
    <xsl:variable                 name = "cdrdocs" 
                                select = "document('cdrx:/*/CdrCtl')"/>
    <TITLE>
     <xsl:value-of              select = "concat('CDR', 
                                           number(
                                           substring-after($docID, 'CDR')))"/>
     <xsl:text>: </xsl:text>
     <xsl:value-of              select = "substring-before(
                                           concat($cdrdocs/CdrDocCtl/
                                                  DocTitle, ';'), ';')"/> 
    </TITLE>
    <STYLE type='text/css'>
     <xsl:call-template           name = "defaultStyle"/>  
     ul {margin-left: 16 ; padding-left: 0;}
     .attribute  { font-weight: normal; 
                   font-style: italic; 
                   background-color: #FFFFFF; }
     .even       { background-color: #EEEEEE; }
     .odd        { background-color: #BBBBBB; }
    </STYLE>
   </HEAD>
   <BASEFONT                      FACE = 'Arial, Helvetica, sans-serif' />
   <xsl:apply-templates         select = "Organization"/>
  </HTML>
 </xsl:template>


 <!-- 
 ===================================================================
 Generate the HTML for the Organization QC Report
 =================================================================== -->
 <xsl:template                   match = "Organization">
  <BODY>

  <!-- 
  ==================================================================
  Display Report heading and subheading 
  ================================================================== -->
  <b>
   <font size='4'>
    <center>
     <xsl:text>Organization</xsl:text>
     <br/>
     <xsl:text>QC Report</xsl:text>
    </center>
   </font>
   <font size='3'>
    <center>
     <xsl:value-of              select = "document('cdrutil:/date/%25B %25#d, %25Y %25#I:%25M% 25p')"/>
    </center>
   </font>
  </b>
  <p/>

  <!-- 
  ====================================================================
  Display CDR ID
  ==================================================================== -->
  <b>
   <font size='4'>
    <xsl:value-of               select = "concat('CDR', 
                                           number(
                                           substring-after($docID, 'CDR')))"/>
   </font>
  </b>
  <p/>

  <!--
  ===============================================================
  Display Name Information
  =============================================================== -->
  <b>
   <font size='4'><xsl:text>Name</xsl:text></font>
  </b>
  <br />
  <xsl:apply-templates          select = "OrganizationNameInformation"/>

  <!--
  ===============================================================
  Display Parent Information
  =============================================================== -->
  <xsl:if                         test = "OrganizationParent">
   <b>
    <font size='4'>Parent Organization</font>
   </b>
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Name</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:for-each             select = "OrganizationParent">
       <xsl:apply-templates     select = "."/>

       <xsl:variable              name = "cdrId"
                                select = "concat('CDR', 
                                           number(
                                            substring-after(
                                             substring-before(
                                              concat(@cdr:ref, '#'), '#'), 
                                                                   'CDR')))"/>
         <xsl:text> (</xsl:text>
         <xsl:element             name = "a">
          <xsl:attribute          name = "href">
           <xsl:value-of        select = "concat('/cgi-bin/cdr/QcReport.py',
                                                 '?Session=guest',
                                                 '&amp;DocId=',
                                                 $cdrId)"/>
          </xsl:attribute>
          <xsl:attribute          name = "target">
           <xsl:text>new</xsl:text>
          </xsl:attribute>
          <xsl:value-of         select = "$cdrId"/>
          </xsl:element>

       <xsl:text>)</xsl:text>
      </xsl:for-each>
     </td>
    </tr>
   </table>
   <p/>
  </xsl:if>

  <!-- 
  ==============================================================
  Display Administrative Information 
  ============================================================== -->
  <b>
   <font size='4'>Administrative Information</font>
  </b>
  <xsl:apply-templates          select = "OrganizationDetails"/>

  <xsl:if                         test = "OrganizationType">
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Organization Type</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <table    xsl:use-attribute-sets = "table">
       <xsl:for-each            select = "OrganizationType">
        <tr>
         <td>
          <xsl:value-of         select = "."/>
          <xsl:if                 test = "@Public">
           <b> (Public = No)</b>
          </xsl:if>
         </td>
        </tr>
       </xsl:for-each>
      </table>
     </td>
    </tr>
   </table>
  </xsl:if>

  <xsl:if                         test = "ProtocolIDAcronym">
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Protocol ID Acronym</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <table    xsl:use-attribute-sets = "table">
       <xsl:for-each            select = "ProtocolIDAcronym">
        <tr>
         <td>
          <xsl:value-of         select = "."/>
         </td>
        </tr>
       </xsl:for-each>
      </table>
     </td>
    </tr>
   </table>
  </xsl:if>

  <xsl:if                         test = "PreferredProtocolOrganization">
   <table       xsl:use-attribute-sets = "table">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Preferred Protocol Organization</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <table    xsl:use-attribute-sets = "table">
       <xsl:for-each            select = "PreferredProtocolOrganization">
        <tr>
         <td>
          <xsl:value-of         select = "substring-before(
                                           concat(., ';'), ';')"/>

          <xsl:variable           name = "cdrId"
                                select = "concat('CDR', 
                                           number(
                                            substring-after(
                                             substring-before(
                                              concat(@cdr:ref, '#'), '#'), 
                                                                   'CDR')))"/>
          <xsl:text> (</xsl:text>
          <xsl:element            name = "a">
           <xsl:attribute         name = "href">
            <xsl:value-of       select = "concat('/cgi-bin/cdr/QcReport.py',
                                                 '?Session=guest',
                                                 '&amp;DocId=',
                                                 $cdrId)"/>
           </xsl:attribute>
           <xsl:attribute         name = "target">
            <xsl:text>new</xsl:text>
           </xsl:attribute>
           <xsl:value-of        select = "$cdrId"/>
          </xsl:element>
          <xsl:text>)</xsl:text>

         </td>
        </tr>
       </xsl:for-each>
      </table>
     </td>
    </tr>
   </table>
  </xsl:if>

  <p/>

  <!--
  ====================================================================
  Display Locations and Affiliations information
  ==================================================================== -->
  <xsl:apply-templates          select = "OrganizationLocations"/>
  <xsl:apply-templates          select = "OrganizationAffiliations"/>

  <hr/>
  <b>
   <font size='4'>Links from Other Documents</font>
  </b>
  <br />

  <!--Variable names (@@...@@) will be replaced with a Yes/No depending
      on the query results for the links -->
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Active, Approved, Temporarily Closed Protocols</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@ACTIVE_APPR0VED_TEMPORARILY_CLOSED_PROTOCOLS@@</xsl:text>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Closed, Completed Protocols</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@CLOSED_COMPLETED_PROTOCOLS@@</xsl:text>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>ClinicalTrials.gov Protocols</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@CTGOV_PROTOCOLS@@</xsl:text>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Person Documents</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@PERSON_DOC_LINKS@@</xsl:text>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Organization Documents</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@ORG_DOC_LINKS@@</xsl:text>
    </td>
   </tr>
  </table>
  <p/>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>In External_Map Table</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@IN_EXTERNAL_MAP_TABLE@@</xsl:text>
    </td>
   </tr>
  </table>
  <p/>

  <b>
   <font size='4'>Record Information</font>
  </b>
  <br />
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Date created</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "substring-before(CdrDocCtl/Create/
                                                           Date, 'T')"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>User</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "CdrDocCtl/Create/User"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Date Modfied</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "substring-before(CdrDocCtl/Modify/
                                                           Date,'T')"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>User</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "CdrDocCtl/Modify/User"/>
    </td>
   </tr>
  </table>
  <p/>

  <xsl:apply-templates          select = "DatedAction"/>
   
  <!-- 
  =================================================================
  Display most recent Mailer Information
  ================================================================= -->
  <b>
   <font size='4'>Most Recent Mailer</font>
  </b>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
      <b><font size='3'>Date Sent</font></b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@MAILER_DATE_SENT@@</xsl:text>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Date Received</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@MAILER_RESPONSE_RECEIVED@@</xsl:text>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Type of Change</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:text>@@MAILER_TYPE_OF_CHANGE@@</xsl:text>
    </td>
   </tr>
  </table>
  <p/>

  </BODY>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Details Information
 ======================================================================= -->
 <xsl:template                   match = "OrganizationDetails">
  <xsl:apply-templates          select = "CIPSContactPerson"/>
  <xsl:apply-templates          select="OrganizationAdministrativeInformation"/>
  <xsl:apply-templates          select = "PreferredProtocolContactMode"/>

  <table        xsl:use-attribute-sets = "table">
   <xsl:apply-templates         select = "Comment"
                                  mode = "withAttribute">
    <xsl:with-param               name = "label"
                                select = "'Details Comment'"/>
   </xsl:apply-templates>
  </table>
  <p/>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Details Information
 ======================================================================= -->
 <xsl:template                   match = "CIPSContactPerson">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>CIPS Contact Person</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <table     xsl:use-attribute-sets = "table">
      <xsl:for-each             select = "Person/
                                          PersonNameInformation">
       <tr>
        <td>
         <xsl:value-of          select = "GivenName"/>
         <xsl:text> </xsl:text>
         <xsl:value-of          select = "SurName"/>

         <xsl:variable            name = "cdrId"
                                select = "concat('CDR', 
                                           number(
                                            substring-after(
                                             substring-before(
                                              concat(../@cdr:ref, '#'), '#'), 
                                                                   'CDR')))"/>
         <xsl:text> (</xsl:text>
         <xsl:element             name = "a">
          <xsl:attribute          name = "href">
           <xsl:value-of        select = "concat('/cgi-bin/cdr/QcReport.py',
                                                 '?Session=guest',
                                                 '&amp;DocId=',
                                                 $cdrId)"/>
          </xsl:attribute>
          <xsl:attribute          name = "target">
           <xsl:text>new</xsl:text>
          </xsl:attribute>
          <xsl:value-of         select = "$cdrId"/>
          </xsl:element>
         <xsl:text>)</xsl:text>

        </td>
       </tr>
      </xsl:for-each>
     </table>
    </td>
   </tr>
  </table>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Details Information
 ======================================================================= -->
 <xsl:template                  match = "OrganizationAdministrativeInformation">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Directory Type</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "@Directory"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Directory Include</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:choose>
      <xsl:when                   test = "IncludeInDirectory = 'Include'">
       <xsl:text>Yes</xsl:text>
      </xsl:when>
      <xsl:otherwise>
       <xsl:text>No</xsl:text>
      </xsl:otherwise>
     </xsl:choose>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Date</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "Date"/>
    </td>
   </tr>
  </table>
  <p/>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Current Status</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "/Organization/
                                           Status/CurrentStatus"/>
    </td>
   </tr>
   <xsl:apply-templates         select = "/Organization/
                                           Status/Comment"
                                  mode = "withAttribute">
    <xsl:with-param               name = "label"
                                select = "'Status Comment'"/>
   </xsl:apply-templates>
  </table>
  <p/>

  <table        xsl:use-attribute-sets = "table">
   <xsl:if                        test = "PreferredDirectoryContactMode">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Preferred Directory Contact</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "PreferredDirectoryContactMode"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:apply-templates         select = "Comment"
                                  mode = "withAttribute">
    <xsl:with-param               name = "label"
                                select = "'AdminInfo Comment'"/>
   </xsl:apply-templates>
  </table>
  <p/>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Locations Information
 ======================================================================= -->
 <xsl:template                   match = "PreferredProtocolContactMode">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Preferred Protocol Contact</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "."/>
    </td>
   </tr>
  </table>
 </xsl:template>


 <!--
 =======================================================================
 Template for Admin Information Comments
 ======================================================================= -->
 <xsl:template                   match = "Comment">
  <xsl:value-of                 select = "."/>
  <br/>
 </xsl:template>


 <!--
 =======================================================================
 Template for Admin Information Comments
 ======================================================================= -->
 <xsl:template                   match = "Comment"
                                  mode = "withAttribute">
  <xsl:param                      name = "label"
                                select = "'Comment'"/>

  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
    <b>
     <xsl:value-of              select = "$label"/>
    </b>
   </td>
   <td          xsl:use-attribute-sets = "cell2of2">
    <span class="attribute">
     <xsl:if                      test = "@audience">
      <xsl:text>audience=</xsl:text>
      <xsl:value-of             select = "@audience"/>
     </xsl:if>
     <xsl:if                      test = "@date">
      <xsl:text> date=</xsl:text>
      <xsl:value-of             select = "@date"/>
     </xsl:if>
     <xsl:if                      test = "@user">
      <xsl:text> user=</xsl:text>
      <xsl:value-of             select = "@user"/>
     </xsl:if>
    </span>
   </td>
  </tr>
  <tr>
   <td><xsl:text> </xsl:text></td>
   <td>
    <xsl:value-of              select = "."/>
    <p/>
   </td>
  </tr>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Locations Information
 ======================================================================= -->
<!-- 
 <xsl:template                   match = "Comment"
                                  mode = "orgDetails">
  <p/>
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Details Comment</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "."/>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>
-->

 <!--
 =======================================================================
 Template for Organization Affiliations Information
 ======================================================================= -->
 <xsl:template                   match = "OrganizationAffiliations">
  <b>
   <font size='4'>Organization Affiliations</font>
  </b>
  <br />
  <xsl:apply-templates          select = "MemberOfProfessionalOrganization[1] |
                                          MemberOfCooperativeGroups           |
                                          MemberOfCCOP                        |
                                          MemberOfAdHocGroup                  |
                                          ResearchBaseFor[1]"/>
 </xsl:template>


 <!--
 =======================================================================
 Template for Organization Membership Information
 ======================================================================= -->
 <xsl:template                   match = "MemberOfProfessionalOrganization">
  <b>
   <u>Professional Organization Membership</u>
  </b>
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2"> </td>
    <td>
     <table>
      <tr>
       <td      xsl:use-attribute-sets = "cell2of2">
        <ul>
         <xsl:for-each          select = "../MemberOfProfessionalOrganization"> 
          <li>
           <xsl:value-of        select = "."/>
          </li>
         </xsl:for-each>
        </ul>
       </td>
      </tr>
     </table>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Cooperative Group Membership
 Display a warning message if more then one MemberOfCooperativeGroups 
 element is found or if the existing element is empty.
 ======================================================================== -->
 <xsl:template                   match = "MemberOfCooperativeGroups">
  <b>
   <u>Cooperative Group Membership</u>
  </b>
  
  <xsl:choose>
   <xsl:when                      test = "count(../MemberOfCooperativeGroups)
                                                                        = 1">
    <xsl:apply-templates        select = "MainMemberOf |
                                          AffiliateMemberOf"/>
   </xsl:when>
   <xsl:when                      test = "count(../MemberOfCooperativeGroups)
                                                                     &gt; 1
                                          and 
                                          position() != last()
                                          and
                                          count(MainMemberOf)+
                                            count(AffiliateMemberOf) != 0">
    <xsl:apply-templates          select = "MainMemberOf |
                                          AffiliateMemberOf"/>
   </xsl:when>
   <xsl:otherwise>
    <br/>
    <b> 
     <center>
      <font color="red">
       <xsl:text>*** Duplicate MemberOfCooperativeGroups</xsl:text>
       <xsl:text> element should be corrected ***</xsl:text>
      </font>
     </center>
    </b>
   </xsl:otherwise>
  </xsl:choose>

 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                   match = "MainMemberOf">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Main Member of</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "CooperativeGroup/Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Protocol Participation</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "ProtocolParticipation"/>
    </td>
   </tr>
  </table>
  <p/> 
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                   match = "AffiliateMemberOf">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Affiliate Member of</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "CooperativeGroup/Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Main Member</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "MainMember/Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Protocol Participation</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "ProtocolParticipation"/>
    </td>
   </tr>
  </table>
  <p/> 
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                   match = "MemberOfCCOP">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>
      <u>CCOP Group Membership</u>
     </b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <table     xsl:use-attribute-sets = "table">
      <tr>
       <ul>
        <xsl:for-each           select = "CCOP/Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name">
         <li>
          <xsl:value-of         select = "."/>
         </li>
        </xsl:for-each>
       </ul>
      </tr>
     </table>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>


 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                   match = "MemberOfAdHocGroup">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>
      <u>AdHoc Group Membership</u>
     </b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <table     xsl:use-attribute-sets = "table">
      <tr>
       <ul>
        <xsl:for-each           select = "Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name">
         <li>
          <xsl:value-of         select = "."/>
         </li>
        </xsl:for-each>
       </ul>
      </tr>
     </table>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>

 <!--
 ========================================================================
 Named Template to display the Address
 ======================================================================== -->
 <xsl:template                   match = "ResearchBaseFor">
  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>
      <u>Research Base For</u>
     </b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <table     xsl:use-attribute-sets = "table">
      <tr>
       <ul>
        <xsl:for-each           select = "../ResearchBaseFor/Organization/
                                          OrganizationNameInformation/
                                          OfficialName/Name">
         <li>
          <xsl:value-of         select = "."/>
         </li>
        </xsl:for-each>
       </ul>
      </tr>
     </table>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>


 <!--
 ========================================================================
 Template for Dated Action
 ======================================================================== -->
 <xsl:template                   match = "DatedAction">
  <b>
   <font size='4'>Dated Action</font>
  </b>

  <table        xsl:use-attribute-sets = "table">
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Description</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ActionDescription"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Date</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ActionDate"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>Comment</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "Comment"/>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>
</xsl:transform>
