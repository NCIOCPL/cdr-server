<?xml version="1.0" ?>
<!-- Filter title: Module: Vendor Phone Templates -->

<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
               exclude-result-prefixes = "cdr"
                               version = "1.0">

  <xsl:output                   method = "xml"
                  omit-xml-declaration = "no"
                              encoding = "UTF-8"/>


 <!--
 ====================================================================
 Filter to enforce the business rules for selecting the proper phone
 number(s) (Phone) for the vendor and QC output.
 ==================================================================== -->
 <!--
 ====================================================================
 Template to select the phone/specific phone number.
 If the Public=No attribute exists this phone number will not be
 displayed via the vendor filter and the organization phone number
 needs to be displayed instead.  This org phone number is displayed
 in the OrgPhone element.
 ==================================================================== -->
 <xsl:template                   match = "Phone |
                                          SpecificPhone |
                                          BoardContactPhone |
                                          AssistantPhone">
  <xsl:element                    name = "Phone">

  <!--
  Phone with Public=No attribute is not to be published
  It will be filtered out with very last vendor filter.
  ===================================================== -->
   <xsl:if                        test = "@Public">
    <xsl:attribute                name = "Public">
     <xsl:value-of              select = "@Public"/>
    </xsl:attribute>
   </xsl:if>

  <!--
  For a Home or PrivatePracticeLocation we'll have to check if a
  SpecificPhone exists and use this instead of the phone provided
  with the Home or PrivatePracticeLocation itself.
  =============================================================== -->
  <xsl:choose>
   <xsl:when                      test = "../../../../../SpecificPhone">
     <xsl:value-of              select = "../../../../../SpecificPhone"/>
   </xsl:when>
   <xsl:otherwise>
     <xsl:apply-templates       select = "node()"/>
   </xsl:otherwise>
  </xsl:choose>

  </xsl:element>
 </xsl:template>


 <!--
 ====================================================================
 Filter to enforce the business rules for selecting the proper phone
 number(s) (Phone, TollFreePhone) for the vendor and QC output.
 ==================================================================== -->
 <xsl:template                   match = "TollFreePhone |
                                          SpecificTollFreePhone">
  <xsl:element                    name = "TollFreePhone">
   <xsl:apply-templates         select = "@*|node()"/>
  </xsl:element>
 </xsl:template>


 <!--
 ====================================================================
 The Fax number needs to be displayed on the QC reports.  However, it
 will have to be filtered out again from the vendor output.
 ==================================================================== -->
 <xsl:template                   match = "Fax |
                                          SpecificFax |
                                          BoardContactFax |
                                          AssistantFax">
  <xsl:element                    name = "Fax">
   <xsl:apply-templates         select = "@*|node()"/>
  </xsl:element>
 </xsl:template>


 <!--
 ====================================================================
 Filter to enforce the business rules for selecting the proper phone
 number(s) (Email) for the vendor and QC output.

 ==================================================================== -->
 <xsl:template                   match = "Email |
                                          SpecificEmail |
                                          BoardContactEmail |
                                          AssistantEmail">
  <!--
  Phone with Public=No attribute is not to be published
  ===================================================== -->
  <xsl:choose>
   <xsl:when                      test = "not(@Public)">
    <xsl:element                  name = "Email">
     <xsl:apply-templates       select = "node()"/>
    </xsl:element>
   </xsl:when>
   <xsl:otherwise>
    <xsl:element                  name = "Email">
     <xsl:attribute               name = "Public">
      <xsl:value-of             select = "@Public"/>
     </xsl:attribute>
     <xsl:apply-templates       select = "node()"/>
    </xsl:element>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!--
 ====================================================================
 Filter to enforce the business rules for selecting the proper phone
 number(s) (WebSite) for the vendor and QC output.
 ==================================================================== -->
 <xsl:template                   match = "WebSite | SpecificWebSite">
  <xsl:element                    name = "WebSite">
   <xsl:attribute                 name = "xref">
    <xsl:value-of               select = "@cdr:xref"/>
   </xsl:attribute>
   <xsl:apply-templates         select = "node()"/>
  </xsl:element>
 </xsl:template>


 <!--
 ====================================================================
 External Ref template.
 ==================================================================== -->
 <xsl:template                   match = "ExternalRef"
                                  mode = "copy">
  <xsl:element                    name = "ExternalRef">
   <xsl:attribute                 name = "xref">
    <xsl:value-of               select = "@cdr:xref"/>
   </xsl:attribute>
   <xsl:apply-templates         select = "node()"
                                  mode = "copy"/>
  </xsl:element>
 </xsl:template>


 <!--
 ====================================================================
 Picking up the Specific Phone from Protocol Record, Person Record or
 Phone from Organization record.
 ==================================================================== -->
 <xsl:template                    name = "getPersonOrgPhone">
  <xsl:param                      name = "orgAddressFID"/>

  <xsl:choose>
   <xsl:when                      test = "../../../SpecificPhone">
    <xsl:apply-templates        select = "../../../SpecificPhone"/>
   </xsl:when>
   <xsl:otherwise>
    <xsl:choose>
     <xsl:when                    test = "SpecificPhone">
<!--     <xsl:when                   test = "SpecificPhone
                                       and
                                       not(SpecificPhone/@Public)">
-->
      <xsl:element                name = "Phone">
    <xsl:if                       test = "SpecificPhone/@Public">
     <xsl:attribute               name = "Public">
      <xsl:value-of             select = "SpecificPhone/@Public"/>
     </xsl:attribute>
    </xsl:if>
       <xsl:value-of            select = "SpecificPhone"/>
      </xsl:element>
     </xsl:when>
     <xsl:when                    test = "OrganizationLocation/
                                          Organization/OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id = $orgAddressFID]/
                                          Phone">
      <xsl:element                name = "Phone">
     <xsl:attribute               name = "native">
      <xsl:value-of             select = "'no'"/>
     </xsl:attribute>
       <xsl:value-of            select = "OrganizationLocation/
                                          Organization/OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id = $orgAddressFID]/
                                          Phone"/>
      </xsl:element>
     </xsl:when>
    </xsl:choose>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!--
 ====================================================================
 Picking up the SpecificTollFreePhone from Person Record or
 TollFreePhone from Organization record.
 ==================================================================== -->
 <xsl:template                    name = "getPersonOrgTollFreePhone">
  <xsl:param                      name = "orgAddressFID"/>

  <xsl:choose>
   <xsl:when                      test = "SpecificTollFreePhone">
    <xsl:element                  name = "TollFreePhone">
     <xsl:value-of              select = "SpecificTollFreePhone"/>
    </xsl:element>
   </xsl:when>
   <xsl:when                      test = "OrganizationLocation/
                                          Organization/OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id = $orgAddressFID]/
                                          TollFreePhone">
    <xsl:element                  name = "TollFreePhone">
     <xsl:attribute               name = "native">
      <xsl:value-of             select = "'no'"/>
     </xsl:attribute>
     <xsl:value-of              select = "OrganizationLocation/
                                          Organization/OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id = $orgAddressFID]/
                                          TollFreePhone"/>
    </xsl:element>
   </xsl:when>
  </xsl:choose>
 </xsl:template>


 <!--
 ====================================================================
 Picking up the SpecificEmail from Person Record or
 Email from Organization record.
 Since Emails are typically only displayed for organizations and
 not for protocols we'll display the Email if it exists
 for a Person as a SpecificEmail or if the SpecificProtocolContact
 contains it but we will not pick it up from the Organization.
 ==================================================================== -->
 <xsl:template                    name = "getPersonOrgEmail">
  <xsl:param                      name = "orgAddressFID"/>

  <xsl:choose>
<!--   <xsl:when                   test = "SpecificEmail
                                       and
                                       not(SpecificEmail/@Public)">
-->
   <xsl:when                      test = "SpecificEmail">
    <xsl:element                  name = "Email">
    <xsl:if                       test = "SpecificEmail/@Public">
     <xsl:attribute               name = "Public">
      <xsl:value-of             select = "SpecificEmail/@Public"/>
     </xsl:attribute>
    </xsl:if>
     <xsl:value-of              select = "SpecificEmail"/>
    </xsl:element>
   </xsl:when>
   <!-- xsl:when                   test = "OrganizationLocation/
                                       Organization/OrganizationLocations/
                                       OrganizationLocation/
                                       Location[@cdr:id = $orgAddressFID]/
                                       Email">
    <xsl:element               name = "Email">
     <xsl:value-of           select = "OrganizationLocation/
                                       Organization/OrganizationLocations/
                                       OrganizationLocation/
                                       Location[@cdr:id = $orgAddressFID]/
                                       Email"/>
    </xsl:element>
   </xsl:when -->
  </xsl:choose>
 </xsl:template>


 <!--
 ====================================================================
 Fax
 ==================================================================== -->
 <xsl:template                    name = "getPersonOrgFax">
  <xsl:param                      name = "orgAddressFID"/>

  <xsl:choose>
   <xsl:when                      test = "SpecificFax">
    <xsl:element                  name = "Fax">
     <xsl:value-of              select = "SpecificFax"/>
    </xsl:element>
    <!-- xsl:apply-templates    select = "Fax | SpecificFax"/ -->
   </xsl:when>
   <xsl:when                      test = "OrganizationLocation/
                                          Organization/OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id = $orgAddressFID]/
                                          Fax">
    <xsl:element                  name = "Fax">
     <xsl:attribute               name = "native">
      <xsl:value-of             select = "'no'"/>
     </xsl:attribute>
     <xsl:value-of              select = "OrganizationLocation/
                                          Organization/OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id = $orgAddressFID]/
                                          Fax"/>
    </xsl:element>
   </xsl:when>
  </xsl:choose>
 </xsl:template>


 <!--
 ====================================================================
 Picking up the SpecificEmail from Person Record or
 Email from Organization record.
 Since WebSites are typically only displayed for organizations and
 not for protocols or persons we'll display the WebSite if it exists
 for a Person as a SpecificWebSite or if the SpecificProtocolContact
 contains it but we will not pick it up from the Organization.
 ==================================================================== -->
 <xsl:template                    name = "getPersonOrgWebSite">
  <xsl:param                      name = "orgAddressFID"/>

  <xsl:choose>
   <xsl:when                      test = "SpecificWebSite">
    <xsl:element                  name = "WebSite">
     <xsl:attribute               name = "xref">
      <xsl:value-of             select = "SpecificWebSite/@cdr:xref"/>
     </xsl:attribute>
     <xsl:value-of              select = "SpecificWebSite"/>
    </xsl:element>
   </xsl:when>
   <!--
   The Website needs to be displayed to be included to QC Reports
   ================================================================== -->
   <xsl:when                      test = "OrganizationLocation/
                                          Organization/OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id = $orgAddressFID]/
                                          WebSite">
    <xsl:element                  name = "WebSite">
     <xsl:attribute               name = "xref">
      <xsl:value-of             select = "OrganizationLocation/
                                          Organization/OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id = $orgAddressFID]/
                                          WebSite/@cdr:xref"/>
     </xsl:attribute>
     <xsl:attribute               name = "native">
      <xsl:value-of             select = "'no'"/>
     </xsl:attribute>
     <xsl:value-of              select = "OrganizationLocation/
                                          Organization/OrganizationLocations/
                                          OrganizationLocation/
                                          Location[@cdr:id = $orgAddressFID]/
                                          WebSite"/>
    </xsl:element>
   </xsl:when>
  </xsl:choose>
 </xsl:template>
</xsl:transform>
