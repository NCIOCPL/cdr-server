<?xml version="1.0" ?>
<!-- Filter title: Module: Citation Denormalization -->
<!--
     Module: Citation Denormalization
     Creator:  Volker Englisch
     Created:  08/12/2003
-->

<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
                               version = "1.0">

 <xsl:output                    method = "xml"
                  omit-xml-declaration = "no"
                              encoding = "UTF-8"/>

 <xsl:param                       name = "DisplayQcOnlyMod"
                                select = "'Y'"/>
 <xsl:param                       name = "isPP"
                                select = "'N'"/>

 <!-- *
 ================================================================
 Template to denormalize Protocol Published Results section and
 Summary Reference Section
 For some summaries users add modules that include citations
 which shouldn't be displayed or included in the Reference
 section for PP reports or if the module display has been
 suppressed. In that case, we're dropping the Citation element
 here, so it won't get processed as part of the citation filters.
 ================================================================ -->
 <xsl:template                   match = "Citation | CitationLink">
  <xsl:choose>
   <xsl:when                      test = "ancestor::SummarySection/@usedfor
                                          and
                                          $isPP = 'Y'">
    <!-- Drop TableNumber element for this section -->
   </xsl:when>
   <xsl:when                      test = "ancestor::SummarySection/@usedfor
                                          and
                                          $DisplayQcOnlyMod = 'N'">
    <!-- Drop TableNumber element for this section -->
   </xsl:when>
   <xsl:otherwise>

    <xsl:element                  name = "Citation">
     <xsl:for-each              select = "@*">
      <xsl:attribute              name = "{name()}">
       <xsl:value-of            select = "."/>
      </xsl:attribute>
     </xsl:for-each>

     <!--
     If an empty CitationLink has been entered we still need to create
     the citInfo variable but don't denormalize (since there is no
     cdr:ref available to denormalize with).
     =================================================================== -->

     <!--
     This new attribute is introduced in order to sort by publication
     year across different citation types
     ================================================================ -->
     <xsl:if                      test = "@cdr:ref != ''">
      <xsl:variable               name = "citInfo"
                                select = "document(concat('cdr:', @cdr:ref,
                                                         '/lastp'))"/>
      <xsl:apply-templates      select = "$citInfo/Citation/PDQCitation |
                                          $citInfo/Citation/PubmedArticle"/>
     </xsl:if>
    </xsl:element>

   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!-- *
 =================================================================
 Template to denormalize ProtocolLink elements for Summary
 Reference section
 (Need to address both flavors: InScopeProtocol and CTGovProtocol)
 ================================================================= -->
 <xsl:template                  match = "ProtocolLink">
  <ProtocolLink>
   <xsl:for-each               select = "@*">
    <xsl:attribute               name = "{name()}">
     <xsl:value-of             select = "."/>
    </xsl:attribute>
   </xsl:for-each>

   <xsl:if                       test = "@cdr:ref != ''">
    <xsl:variable                name = "protInfo"
                               select = "document(concat('cdr:', @cdr:ref,
                                                         '/lastp'))"/>
    <!--
    This new attribute is introduced in order to sort by publication
    year across different citation types
    ================================================================ -->
    <xsl:attribute               name = "pubyear">
     <xsl:value-of             select = "$protInfo/xxx/Citation/PDQCitation/
                                         PublicationDetails/
                                         PublicationYear      |
                                         $protInfo/xxx/Citation/PubmedArticle//
                                         PubDate/Year"/>
    </xsl:attribute>

    <xsl:apply-templates       select = "$protInfo/InScopeProtocol/
                                           ProtocolTitle
                                             [@Type = 'Professional'] |
                                         $protInfo/InScopeProtocol/
                                           ProtocolIDs                |
                                         $protInfo/InScopeProtocol/
                                           ProtocolAdminInfo/
                                           ProtocolLeadOrg            |
                                         $protInfo/InScopeProtocol/
                                           ProtocolDetail/
                                           StudyType                  |
                                         $protInfo/InScopeProtocol/
                                           ProtocolAdminInfo/
                                           CurrentProtocolStatus      |
                                         $protInfo/CTGovProtocol/
                                           OfficialTitle              |
                                         $protInfo/CTGovProtocol/
                                           IDInfo                     |
                                         $protInfo/CTGovProtocol/
                                           PDQIndexing/StudyType      |
                                         $protInfo/CTGovProtocol/
                                           OverallStatus"/>
   </xsl:if>
  </ProtocolLink>
 </xsl:template>


 <!--
 ================================================================
 Template to denormalize Person and Organization for Protocol
 Citation
 ================================================================ -->
 <xsl:template                  match = "ProtocolLeadOrg">
  <ProtocolLeadOrg>
   <xsl:apply-templates/>
  </ProtocolLeadOrg>
 </xsl:template>


 <!-- *
 ================================================================
 Template to denormalize the Protocol Person elements for Summary
 Reference section
 ================================================================ -->
 <xsl:template                  match = "Person">
  <Person>
   <xsl:for-each               select = "@*">
    <xsl:attribute               name = "{name()}">
     <xsl:value-of             select = "."/>
    </xsl:attribute>
   </xsl:for-each>

   <xsl:if                       test = "@cdr:ref != ''">
    <xsl:variable                name = "personInfo"
                               select = "document(concat('cdr:', @cdr:ref,
                                                         '/last'))"/>

    <xsl:apply-templates       select = "$personInfo/Person/
                                         PersonNameInformation"/>
   </xsl:if>
  </Person>
 </xsl:template>


 <!-- *
 ==============================================================
 Template to denormalize the Protocol Org elements for Summary
 Reference section
 ============================================================== -->
 <xsl:template                  match = "LeadOrganizationID">
  <Organization>
   <xsl:for-each               select = "@*">
    <xsl:attribute               name = "{name()}">
     <xsl:value-of             select = "."/>
    </xsl:attribute>
   </xsl:for-each>

   <xsl:if                       test = "@cdr:ref != ''">
    <xsl:variable                name = "orgInfo"
                               select = "document(concat('cdr:', @cdr:ref,
                                                         '/last'))"/>

    <xsl:apply-templates       select = "$orgInfo/Organization/
                                         OrganizationNameInformation"/>
   </xsl:if>
  </Organization>
 </xsl:template>



 <!-- *
 ==============================================================
 Template PublishedIn section
 ============================================================== -->
 <xsl:template                  match = "PublishedIn">
  <xsl:element                   name = "{name()}">
   <xsl:for-each               select = "@*">
    <xsl:attribute               name = "{name()}">
     <xsl:value-of             select = "."/>
    </xsl:attribute>
   </xsl:for-each>

   <xsl:if                       test = "@cdr:ref != ''">
    <xsl:variable                name = "citInfo"
                               select = "document(concat('cdr:', @cdr:ref,
                                                         '/lastp'))"/>
    <xsl:copy-of               select = "$citInfo/Citation"/>
   </xsl:if>
  </xsl:element>
 </xsl:template>

</xsl:transform>
