<?xml version="1.0" ?>
<!-- Filter title: Module: Citation Denormalization - QD -->
<!--
================================================================
Module: Quick and Dirty Citation Denormalization
Creator:  Volker Englisch
Created:  2011-02-24

Quick and Dirty version of the Filter "Module: Citation
Denormalization".
The users want to be able to "force" completion of a QC report
even in the even that a denormalization error occurrs.

BZIssue::4990 - New "Quick & Dirty" QC report

================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
               exclude-result-prefixes = "cdr">

 <xsl:output                    method = "xml"
                  omit-xml-declaration = "no"
                              encoding = "UTF-8"/>


 <!-- *
 ==============================================================
 Template to denormalize Protocol Published Results section and
 Summary Reference Section
 ============================================================== -->
 <xsl:template                   match = "Citation | CitationLink">
  <xsl:choose>
   <xsl:when                      test = "@cdr:ref">
    <xsl:variable                 name = "pv"
                                select = "document(concat('cdrutil:',
                                                          '/get-pv-num/',
                                                          @cdr:ref))"/>
    <xsl:variable                 name = "uri">
     <xsl:choose>
      <xsl:when                   test = "$pv > 0">
       <xsl:value-of            select = "concat('cdr:', @cdr:ref, '/lastp')"/>
      </xsl:when>
      <xsl:otherwise>
       <xsl:value-of            select = "concat('cdr:', @cdr:ref, '/last')"/>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:variable>
    <xsl:variable                 name = "info"
                                select = "document($uri)"/>
    <Citation>
     <xsl:for-each              select = "@*">
      <xsl:attribute              name = "{name()}">
       <xsl:value-of            select = "."/>
      </xsl:attribute>
     </xsl:for-each>
     <xsl:apply-templates       select = "$info/Citation/PDQCitation |
                                          $info/Citation/PubmedArticle"/>
    </Citation>
   </xsl:when>
   <xsl:otherwise>
    <LinkError>
     <xsl:text>*** Denormalization Error: </xsl:text>
     <xsl:value-of               select = "name()"/>
     <xsl:text> ***</xsl:text>
    </LinkError>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!-- *
 =================================================================
 Template to denormalize ProtocolLink elements for Summary
 Reference section
 (Need to address both flavors: InScopeProtocol and CTGovProtocol)
 ================================================================= -->
 <xsl:template                  match = "ProtocolLink">
  <ProtocolLink>
   <xsl:for-each               select = "@*">
    <xsl:attribute               name = "{name()}">
     <xsl:value-of             select = "."/>
    </xsl:attribute>
   </xsl:for-each>

   <xsl:variable                 name = "protRef"
                               select = "@cdr:ref"/>
   <xsl:variable                 name = "protInfo"
                               select = "document(concat('cdr:', $protRef,
                                                            '/lastp'))"/>
   <!--
   This new attribute is introduced in order to sort by publication
   year across different citation types
   ================================================================ -->
   <xsl:attribute                name = "pubyear">
    <xsl:value-of              select = "$protInfo/xxx/Citation/PDQCitation/
                                         PublicationDetails/
                                         PublicationYear      |
                                         $protInfo/xxx/Citation/PubmedArticle//
                                         PubDate/Year"/>
   </xsl:attribute>

   <xsl:apply-templates        select = "$protInfo/InScopeProtocol/
                                           ProtocolTitle
                                             [@Type = 'Professional'] |
                                         $protInfo/InScopeProtocol/
                                           ProtocolIDs                |
                                         $protInfo/InScopeProtocol/
                                           ProtocolAdminInfo/
                                           ProtocolLeadOrg            |
                                         $protInfo/InScopeProtocol/
                                           ProtocolDetail/
                                           StudyType                  |
                                         $protInfo/InScopeProtocol/
                                           ProtocolAdminInfo/
                                           CurrentProtocolStatus      |
                                         $protInfo/CTGovProtocol/
                                           OfficialTitle              |
                                         $protInfo/CTGovProtocol/
                                           IDInfo                     |
                                         $protInfo/CTGovProtocol/
                                           PDQIndexing/StudyType      |
                                         $protInfo/CTGovProtocol/
                                           OverallStatus"/>

  </ProtocolLink>
 </xsl:template>


 <!--
 ================================================================
 Template to denormalize Person and Organization for Protocol
 Citation
 ================================================================ -->
 <xsl:template                  match = "ProtocolLeadOrg">
  <ProtocolLeadOrg>
   <xsl:apply-templates/>
  </ProtocolLeadOrg>
 </xsl:template>


 <!-- *
 ================================================================
 Template to denormalize the Protocol Person elements for Summary
 Reference section
 ================================================================ -->
 <xsl:template                  match = "Person">
  <Person>
   <xsl:for-each               select = "@*">
    <xsl:attribute               name = "{name()}">
     <xsl:value-of             select = "."/>
    </xsl:attribute>
   </xsl:for-each>

   <xsl:variable                 name = "personRef"
                               select = "@cdr:ref"/>
   <xsl:variable                 name = "personInfo"
                               select = "document(concat('cdr:', $personRef,
                                                            '/last'))"/>

   <xsl:apply-templates        select = "$personInfo/Person/
                                           PersonNameInformation"/>

  </Person>
 </xsl:template>


 <!-- *
 ==============================================================
 Template to denormalize the Protocol Org elements for Summary
 Reference section
 ============================================================== -->
 <xsl:template                  match = "LeadOrganizationID">
  <Organization>
   <xsl:for-each               select = "@*">
    <xsl:attribute               name = "{name()}">
     <xsl:value-of             select = "."/>
    </xsl:attribute>
   </xsl:for-each>

   <xsl:variable                 name = "orgRef"
                               select = "@cdr:ref"/>
   <xsl:variable                 name = "orgInfo"
                               select = "document(concat('cdr:', $orgRef,
                                                            '/last'))"/>

   <xsl:apply-templates        select = "$orgInfo/Organization/
                                           OrganizationNameInformation"/>

  </Organization>
 </xsl:template>



 <!-- *
 ==============================================================
 Template PublishedIn section
 ============================================================== -->
 <xsl:template                  match = "PublishedIn">
  <xsl:element                   name = "{name()}">
   <xsl:for-each               select = "@*">
    <xsl:attribute               name = "{name()}">
     <xsl:value-of             select = "."/>
    </xsl:attribute>
   </xsl:for-each>

   <xsl:variable                 name = "citRef"
                               select = "@cdr:ref"/>
   <xsl:variable                 name = "citInfo"
                               select = "document(concat('cdr:', $citRef,
                                                            '/lastp'))"/>
   <xsl:copy-of                select = "$citInfo/Citation"/>

  </xsl:element>
 </xsl:template>

</xsl:transform>
