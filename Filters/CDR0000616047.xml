<?xml version = "1.0" encoding="utf-8"?>
<!-- Filter title: Denormalization Filter: GlossaryTermName -->
<!--
 ================================================================

 Filter to denormalize summary data.
 Written by Volker Englisch, 2004-11-09

BZIssue::5115 - Images Missing from GlossaryTerms
OCECDR-3528: Ability to put links to other Dictionary terms in More
             Information block on Cancer.gov
CDECDR-3735: [Media] Audio files ready to be uploaded

 ================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "xml"
                  omit-xml-declaration = "no"/>

 <!--
 =================================================================
 Copy control information and generate current date
 ================================================================= -->
 <xsl:template                   match = "GlossaryTermName">
  <xsl:copy>
   <xsl:apply-templates/>
  </xsl:copy>
 </xsl:template>


 <!--
 =================================================================
 Denormalize the GlossaryTermConcept information
 ================================================================= -->
 <xsl:template                   match = "GlossaryTermConcept">
  <xsl:variable                   name = "conceptId"
                                select = "@cdr:ref"/>

  <xsl:variable                   name = "concept"
                                select = "document(concat('cdr:', $conceptId,
                                                          '/last'))"/>
  <!-- xsl:element                    name = "GlossaryTermConcept">
   <xsl:attribute                 name = "cdr:ref">
    <xsl:value-of               select = "$conceptId"/>
   </xsl:attribute>
   <xsl:copy-of                 select = "$concept/
                                          GlossaryTermConcept/*"/>
  </xsl:element -->
  <xsl:element                    name = "GlossaryTermConcept">
   <xsl:attribute                 name = "cdr:ref">
    <xsl:value-of               select = "$conceptId"/>
   </xsl:attribute>
   <xsl:copy-of                 select = "$concept/
                                            GlossaryTermConcept/
                                            TermDefinition"/>
   <xsl:copy-of                 select = "$concept/
                                            GlossaryTermConcept/
                                            MediaLink"/>
   <xsl:copy-of                 select = "$concept/
                                            GlossaryTermConcept/
                                            EmbeddedVideo"/>
   <xsl:copy-of                 select = "$concept/
                                            GlossaryTermConcept/
                                            TranslatedTermDefinition"/>
   <xsl:copy-of                 select = "$concept/
                                            GlossaryTermConcept/
                                            TermType"/>
   <xsl:apply-templates         select = "$concept/
                                            GlossaryTermConcept/
                                            RelatedInformation"/>
  </xsl:element>
 </xsl:template>


 <!--
 =================================================================
 Template to collect all RelatedInformation elements
 ================================================================= -->
 <xsl:template                   match = "RelatedInformation">
  <xsl:copy>
   <xsl:apply-templates         select = "RelatedDrugSummaryLink  |
                                          RelatedSummaryRef       |
                                          RelatedExternalRef      |
                                          RelatedGlossaryTermNameLink"/>
  </xsl:copy>
 </xsl:template>


 <!--
 =================================================================
 Template to create the RelatedSummaryRef element
 ================================================================= -->
 <xsl:template                   match = "RelatedSummaryRef">
  <xsl:variable                   name = "relatedId"
                                select = "@cdr:ref"/>

  <xsl:variable                   name = "related"
                                select = "document(concat('cdr:', $relatedId,
                                                          '/lastp'))"/>
  <xsl:element                    name = "{name()}">
   <xsl:for-each                select = "@*">
    <xsl:attribute                name = "{name()}">
     <xsl:value-of              select = "."/>
    </xsl:attribute>
   </xsl:for-each>
  <xsl:element                    name = "Summary">
   <xsl:copy-of                 select = "$related/Summary/
                                            SummaryMetaData"/>
   <xsl:copy-of                 select = "$related/Summary/
                                            SummaryTitle"/>
  </xsl:element>
  </xsl:element>
 </xsl:template>


 <!--
 =================================================================
 Template to create the RelatedDrugSummaryLink element
 ================================================================= -->
 <xsl:template                   match = "RelatedDrugSummaryLink">
  <xsl:variable                   name = "relatedId"
                                select = "@cdr:ref"/>

  <xsl:variable                   name = "related"
                                select = "document(concat('cdr:', $relatedId,
                                                          '/lastp'))"/>
  <xsl:element                    name = "{name()}">
   <xsl:for-each                select = "@*">
    <xsl:attribute                name = "{name()}">
     <xsl:value-of              select = "."/>
    </xsl:attribute>
   </xsl:for-each>
  <xsl:element                    name = "DrugInformationSummary">
   <xsl:copy-of                 select = "$related/DrugInformationSummary/
                                            DrugInfoMetaData"/>
   <xsl:copy-of                 select = "$related/DrugInformationSummary/
                                            Title"/>
  </xsl:element>
  </xsl:element>
 </xsl:template>


 <!--
 =================================================================
 Template to create the RelatedGlossaryTermNameLink element
 ================================================================= -->
 <xsl:template                   match = "RelatedGlossaryTermNameLink">
  <xsl:variable                   name = "relatedGTNId"
                                select = "@cdr:ref"/>

  <xsl:variable                   name = "relatedGTN"
                                select = "document(concat('cdr:', $relatedGTNId,
                                                          '/lastp'))"/>
  <xsl:element                    name = "{name()}">
   <xsl:for-each                select = "@*">
    <xsl:attribute                name = "{name()}">
     <xsl:value-of              select = "."/>
    </xsl:attribute>
   </xsl:for-each>
   <xsl:element                   name = "GlossaryTermName">
    <xsl:apply-templates        select = "$relatedGTN/GlossaryTermName/
                                            TermName"/>
    <xsl:apply-templates        select = "$relatedGTN/GlossaryTermName/
                                            TranslatedName"/>

    <xsl:element                  name = "GlossaryTermConcept">
    <xsl:variable                 name = "relatedGTCId"
                                select = "$relatedGTN/GlossaryTermName/
                                            GlossaryTermConcept/
                                            @cdr:ref"/>

    <xsl:variable                 name = "relatedGTC"
                                select = "document(concat('cdr:', $relatedGTCId,
                                                          '/last'))"/>
    <xsl:apply-templates        select = "$relatedGTC/GlossaryTermConcept/
                                            TermDefinition |
                                          $relatedGTC/GlossaryTermConcept/
                                            TranslatedTermDefinition"/>
    </xsl:element>
   </xsl:element>
  </xsl:element>
 </xsl:template>


 <!--
 =================================================================
 Template to suppress the MediaLink element
 ================================================================= -->
 <!--
 <xsl:template                   match = "RelatedGlossaryTermNameLink//
                                           MediaLink"/>
-->

 <!--
                                          RelatedInformationi/MediaLink |
                                          TranslatedNamex/MediaLink |
                                          TranslatedTermDefinition/MediaLink"/>
-->


 <!--
 =================================================================
 Template to remove MediaLink elements if they are pointing to
 blocked documents.
 ================================================================= -->
 <xsl:template                   match = "MediaLink">
  <xsl:variable                   name = "mediaNormId"
                                select = "number(
                                           substring-before(
                                           concat(
                                           substring-after(MediaID/@cdr:ref,
                                                       'CDR'), '#'), '#'))"/>

  <xsl:variable                   name = "sqlStatusQuery">
          SELECT active_status
            FROM document
           WHERE id = ?
  </xsl:variable>

  <xsl:variable                   name = "sqlStatusRows"
                                select = "document(
                                           concat('cdrutil:/sql-query/',
                                                   $sqlStatusQuery,
                                                   '~',
                                                   $mediaNormId))"/>

  <xsl:variable                   name = "sqlStatusResult">
   <xsl:copy-of                 select = "$sqlStatusRows"/>
  </xsl:variable>


  <!--
  Only include active media documents (active_status = 'A')
  ========================================================= -->
  <xsl:if                         test = "$sqlStatusResult/
                                            SqlResult/row/col = 'A'">
  <xsl:copy>
   <xsl:for-each                select = "@*">
    <xsl:attribute                name = "{name()}">
     <xsl:value-of              select = "."/>
    </xsl:attribute>
   </xsl:for-each>
   <xsl:apply-templates/>
  </xsl:copy>
  </xsl:if>
 </xsl:template>


 <!--
 ==================================================================
 Template rule used to do XML to XML transformations which
 copies any attribute node, or node that is child of of something
 ================================================================== -->
 <xsl:template                   match = "@*|node()">
  <xsl:copy>
   <xsl:apply-templates         select = "@*|node()"/>
  </xsl:copy>
 </xsl:template>
</xsl:transform>
