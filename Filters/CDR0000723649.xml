<?xml version="1.0" ?>

<!-- Filter title: Denormalization Filter: Summary Module IDs -->

<!--
====================================================================

Filter to adjust the cdr:id attributes for SummarySections pulled in
via the SummaryModuleLink.

Volker Englisch, 2011-12-20

BZIssue::5097 - Modifications to Publishing Filter to include Module content

==================================================================== -->
<xsl:transform               xmlns:xsl = 'http://www.w3.org/1999/XSL/Transform'
                             xmlns:cdr = 'cips.nci.nih.gov/cdr'
                               version = '1.0'>

 <xsl:output                    method = 'xml'
                              encoding = 'utf-8'/>
 <!--
 =================================================================
 Copy control information and generate current date
 ================================================================= -->
 <xsl:template                    match = "/">
   <xsl:apply-templates/>
 </xsl:template>

 <!--
 ==================================================================
 Template to update the cdr:id value for elements with the module
 ================================================================== -->
 <xsl:template                   match = "@cdr:id[not(starts-with(., '_sm'))]">
  <xsl:variable                   name = "modprefix">
     <xsl:value-of              select = "concat('_sm_',
                                              ancestor-or-self::SummarySection
                                                        [@cdr:ref]/@cdr:ref)"/>
  </xsl:variable>

  <!--
  If an ancestor exists with an attribute cdr:ref it was
  imported as a result of a SummaryModuleLink and we need to
  modify each cdr:id attribute within this section.
  ============================================================= -->
  <xsl:choose>
   <xsl:when                      test = "ancestor::SummarySection
                                                                 [@cdr:ref]">
    <xsl:attribute                name = "cdr:id">
     <xsl:value-of              select = "$modprefix"/>
     <xsl:value-of              select = "."/>
    </xsl:attribute>
   </xsl:when>
   <xsl:otherwise>
    <xsl:attribute                name = "cdr:id">
     <xsl:value-of              select = "."/>
    </xsl:attribute>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>


 <!--
 ==================================================================
 Template rule used to do XML to XML transformations which
 copies any attribute node, or node that is child of of something
 ================================================================== -->
 <xsl:template                   match = '@*|node()'
                                  mode = "module">
  <xsl:param                      name = "ref"/>
  <xsl:param                      name = "module"/>

  <xsl:copy>
   <xsl:apply-templates         select = '@*|node()'
                                  mode = "module">
    <xsl:with-param               name = "ref"
                                select = "$ref"/>
    <xsl:with-param               name = "module"
                                select = "'_sm'"/>
   </xsl:apply-templates>
  </xsl:copy>
 </xsl:template>


 <!--
 ==================================================================
 Template rule used to do XML to XML transformations which
 copies any attribute node, or node that is child of something
 (Everything that's not inside a SummaryModule or SummarySection)
 ================================================================== -->
 <xsl:template                   match = '@*|node()'>
  <xsl:copy>
   <xsl:apply-templates         select = '@*|node()'/>
  </xsl:copy>
 </xsl:template>
</xsl:transform>
