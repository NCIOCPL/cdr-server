<?xml version='1.0' encoding='utf-8'?>
<!-- $Id$ -->
<!-- Filter title: Copy XML for Summary Report -->
<!-- 

BZIssue::4751 - Modify BU Reports to display LOERefs
BZIssue::4919 - [Summary] QC Report Bugs

===============================================================
Filter to create Vendor Genetics Professionals XML documents 
=============================================================== -->
<xsl:transform               xmlns:xsl = 'http://www.w3.org/1999/XSL/Transform'
                             xmlns:cdr = 'cips.nci.nih.gov/cdr'
                               version = '1.0'
               exclude-result-prefixes = 'cdr'>

 <xsl:output                    method = 'xml'
                  omit-xml-declaration = 'no'
                              encoding = 'utf-8'/>

 <!--
 ================================================================
 Main Template
 ================================================================ -->
 <xsl:template                   match = "Summary">
  <xsl:variable                   name = "sumAudience"
                                select = "substring(
                                            SummaryMetaData/
                                            SummaryAudience, 1, 19)"/>
  <xsl:copy>
   <!--  
   ==============================================================
   copy summary meta data, and title
   ============================================================== -->
   <SummaryMetaData>
    <xsl:apply-templates        select = "SummaryMetaData/SummaryType"   
                                  mode = "copy"/>
    <xsl:apply-templates        select = "SummaryMetaData/SummaryAudience" 
                                  mode = "copy"/>
    <xsl:apply-templates        select = "SummaryMetaData/SummaryLanguage" 
                                  mode = "copy"/>
   </SummaryMetaData>

   <!--
   ======================================================================
   Copy the Summary title and all the summary sections including Keypoint
   ====================================================================== -->
   <xsl:apply-templates         select = "SummaryTitle" 
                                  mode = "copy"/>
   <xsl:apply-templates         select = "/Summary/AltTitle"
                                  mode = "copy"/>

   <xsl:for-each                select = "SummarySection"> 
     <!--
     ======================================================================
     The top SummarySection title needs to be displayed before the keypoint 
     section.  It is being renamed here to be able and handle these titles 
     separately from all other SummarySection titles
     ====================================================================== -->
     <SectionTitle>
      <xsl:attribute              name = "cdr:id"> 
       <xsl:value-of            select = "@cdr:id"/>
      </xsl:attribute>
      <xsl:apply-templates      select = "Title"
                                  mode = "copy"/>
     </SectionTitle>

     <!--
     ===============================================================
     Collect Keypoints for keypoints box above each SummarySection
     =============================================================== -->
     <KeyPoints>
      <KeyPointsList             Style = 'bullet'>
       <xsl:for-each            select = "SummarySection">
        <xsl:if                   test = "KeyPoint">
         <xsl:for-each          select = "KeyPoint">
          <ListItem>
           <xsl:apply-templates select = "." 
                                  mode = "copy"/>
       
           <xsl:for-each        select = "SummarySection">
            <xsl:apply-templates 
                                select = "Title" 
                                  mode = "copy"/>     
            <xsl:if               test = "KeyPoint">
             <KeyPointsList      Style = 'dash'>
              <ListItem>
               <xsl:apply-templates 
                                select = "KeyPoint" 
                                  mode = "copy"/>
              </ListItem>
             </KeyPointsList>
            </xsl:if>
           </xsl:for-each>
          </ListItem>
         </xsl:for-each>
        </xsl:if>
       </xsl:for-each> 
      </KeyPointsList>
     </KeyPoints>
      
    <!--
    ============================================================
    copy summary sections and add references at the end of each 
    section 
    ============================================================ -->
    <xsl:apply-templates        select = "." 
                                  mode = "copy"/> 
                                            
    <xsl:apply-templates        select = "PdqKey" 
                                  mode = "copy"/>
   </xsl:for-each>

    <GlossaryTerms>
     <xsl:for-each              select = "//GlossaryTermRef">
      <GlossaryTerm>
       <GlossaryTermRef>
        <xsl:apply-templates      mode = "copy"/>
       </GlossaryTermRef>
       
       <xsl:variable              name = "defID"  
                                select = "@cdr:href"/>
      
       <xsl:variable              name = "defInfo" 
                                select = "document(concat('cdrx:', $defID,
                                                          '/last'))"/>
       <xsl:variable              name = "conceptID"  
                                select = "$defInfo/GlossaryTermName/
                                          GlossaryTermConcept/@cdr:ref"/>
      
       <xsl:variable              name = "conceptInfo" 
                                select = "document(concat('cdrx:', $conceptID,
                                                          '/last'))"/>

       <xsl:choose>
         <xsl:when                test = "/Summary/
                                           SummaryMetaData/
                                           SummaryLanguage = 'English'">
          <GlossaryTermName>
           <xsl:value-of        select = "$defInfo/GlossaryTermName/
                                          TermName/
                                          TermNameString"/> 
          </GlossaryTermName>
          <xsl:copy-of          select = "$defInfo/GlossaryTermName/
                                           ReplacementText"/>
          <GlossaryTermConcept>
           <!--
           The Genetics Summaries are using the definitions for the HP
           audience instead of Patient (English only)
           =========================================================== -->
           <xsl:choose>
            <xsl:when             test = "$sumAudience = 'Health professional'">
             <xsl:copy-of       select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TermDefinition
                                             [Audience 
                                                = 'Health professional']"/>
            </xsl:when>
            <xsl:otherwise>
             <xsl:copy-of       select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TermDefinition
                                             [Audience = 'Patient'
                                              and
                                              Dictionary = 'Cancer.gov']"/>
            </xsl:otherwise>
           </xsl:choose>
          </GlossaryTermConcept>
         </xsl:when>
         <xsl:otherwise>
          <GlossaryTermName>
           <xsl:value-of        select = "$defInfo/GlossaryTermName/
                                           TranslatedName/
                                           TermNameString"/> 
          </GlossaryTermName>
          <xsl:copy-of          select = "$defInfo/GlossaryTermName/
                                           ReplacementText"/>
           <GlossaryTermConcept>
          <xsl:copy-of          select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TranslatedTermDefinition
                                              [Audience = $sumAudience]"/>
          </GlossaryTermConcept>
         </xsl:otherwise>
        </xsl:choose>
      </GlossaryTerm>
     </xsl:for-each>
    </GlossaryTerms>
    <LOETerms>
     <xsl:for-each              select = "//LOERef">
      <LOETerm>
       <LOERef>
        <xsl:apply-templates      mode = "copy"/>
       </LOERef>
       
       <xsl:variable              name = "defID"  
                                select = "@cdr:href"/>
      
       <xsl:variable              name = "defInfo" 
                                select = "document(concat('cdrx:', $defID,
                                                          '/last'))"/>
       <xsl:variable              name = "conceptID"  
                                select = "$defInfo/GlossaryTermName/
                                          GlossaryTermConcept/@cdr:ref"/>
      
       <xsl:variable              name = "conceptInfo" 
                                select = "document(concat('cdrx:', $conceptID,
                                                          '/last'))"/>

       <xsl:choose>
         <xsl:when                test = "/Summary/
                                           SummaryMetaData/
                                           SummaryLanguage = 'English'">
          <GlossaryTermName>
           <xsl:value-of        select = "$defInfo/GlossaryTermName/
                                          TermName/
                                          TermNameString"/> 
          </GlossaryTermName>
          <xsl:copy-of          select = "$defInfo/GlossaryTermName/
                                           ReplacementText"/>
          <GlossaryTermConcept>
           <!--
           The Genetics Summaries are using the definitions for the HP
           audience instead of Patient (English only)
           =========================================================== -->
           <xsl:choose>
            <xsl:when             test = "$sumAudience = 'Health professional'">
             <xsl:copy-of       select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TermDefinition
                                             [Audience 
                                                = 'Health professional']"/>
            </xsl:when>
            <xsl:otherwise>
             <xsl:copy-of       select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TermDefinition
                                             [Audience = 'Patient'
                                              and
                                              Dictionary = 'Cancer.gov']"/>
            </xsl:otherwise>
           </xsl:choose>
          </GlossaryTermConcept>
         </xsl:when>
         <xsl:otherwise>
          <GlossaryTermName>
           <xsl:value-of        select = "$defInfo/GlossaryTermName/
                                           TranslatedName/
                                           TermNameString"/> 
          </GlossaryTermName>
          <xsl:copy-of          select = "$defInfo/GlossaryTermName/
                                           ReplacementText"/>
           <GlossaryTermConcept>
          <xsl:copy-of          select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TranslatedTermDefinition
                                              [Audience = $sumAudience]"/>
          </GlossaryTermConcept>
         </xsl:otherwise>
        </xsl:choose>
      </LOETerm>
     </xsl:for-each>
    </LOETerms>
  </xsl:copy>  
 </xsl:template>


 <!-- 
 =================================================================
 Default Template rule used to do XML to XML transformations which
 copies any attribute node, or node that is child of of something
 ================================================================= -->
 <xsl:template                   match = "@*|node()" 
                                  mode = "copy">
  <xsl:copy>
   <xsl:apply-templates         select = "@*" 
                                  mode = "copy"/>
   <xsl:apply-templates           mode = "copy"/>
  </xsl:copy> 
 </xsl:template>  
</xsl:transform>
