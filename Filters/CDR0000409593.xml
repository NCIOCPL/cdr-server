<?xml version="1.0" ?>
<!-- CDR0000409593.xml - 2016-08-25, volker    -->
<!-- Filter title: Copy XML for Summary Report -->
<!--

BZIssue::4751 - Modify BU Reports to display LOERefs
BZIssue::4919 - [Summary] QC Report Bugs
BZIssue::4970 - [Summary] Key Point display problems in QC reports
BZIssue::5075 - [Summary] No definition texts for Spanish B/U QC report
BZIssue::5097 - [Summaries] Modifications to Publishing Filter to
                include Module content
BZIssue::5191 - [Summaries] Summary Fragment Refs not working in
                QC reports
OCECDR-4116: Show dictionary and audience of glossary terms

===============================================================
Filter to add collection of keypoints and glossary terms to be
displayed if requested
=============================================================== -->
<xsl:transform               xmlns:xsl = 'http://www.w3.org/1999/XSL/Transform'
                             xmlns:cdr = 'cips.nci.nih.gov/cdr'
                               version = '1.0'
               exclude-result-prefixes = 'cdr'>

 <xsl:output                    method = 'xml'
                  omit-xml-declaration = 'no'
                              encoding = 'utf-8'/>

 <!--
 ================================================================
 Main Template
 ================================================================ -->
 <xsl:template                   match = "Summary">
  <!-- For some strange reason we sometimes use singular and somtimes plural
       for the audience -->
  <xsl:variable                   name = "sumAudience">
   <xsl:choose>
    <xsl:when                     test = "starts-with(SummaryMetaData/
                                                        SummaryAudience,
                                                        'Health')">
     <xsl:text>Health professional</xsl:text>
    </xsl:when>
    <xsl:otherwise>
     <xsl:text>Patient</xsl:text>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:variable>

  <xsl:variable                   name = "sumLanguage">
   <xsl:choose>
    <xsl:when                     test = "SummaryMetaData/
                                           SummaryLanguage = 'English'">
     <xsl:text>EN</xsl:text>
    </xsl:when>
    <xsl:otherwise>
     <xsl:text>ES</xsl:text>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:variable>

  <xsl:copy>
   <!--
   ==============================================================
   copy summary meta data, and title
   ============================================================== -->
   <xsl:element                   name = "SummaryMetaData">
    <xsl:apply-templates        select = "SummaryMetaData/SummaryType"
                                  mode = "copy"/>
    <xsl:apply-templates        select = "SummaryMetaData/SummaryAudience"
                                  mode = "copy"/>
    <xsl:apply-templates        select = "SummaryMetaData/SummaryLanguage"
                                  mode = "copy"/>
   </xsl:element>

   <!--
   ======================================================================
   Copy the Summary title and all the summary sections including Keypoint
   ====================================================================== -->
   <xsl:apply-templates         select = "SummaryTitle"
                                  mode = "copy"/>
   <xsl:apply-templates         select = "/Summary/AltTitle"
                                  mode = "copy"/>

   <xsl:for-each                select = "SummarySection">
     <!--
     ======================================================================
     The top SummarySection title needs to be displayed before the keypoint
     section.  It is being renamed here to be able and handle these titles
     separately from all other SummarySection titles
     ====================================================================== -->
     <xsl:element                 name = "SectionTitle">
      <xsl:attribute              name = "cdr:id">
       <xsl:value-of            select = "@cdr:id"/>
      </xsl:attribute>
      <xsl:apply-templates      select = "Title"
                                  mode = "copy"/>
     </xsl:element>

     <!--
     ===============================================================
     Collect Keypoints for keypoints box above each SummarySection
     =============================================================== -->
     <xsl:element                 name = "KeyPoints">
      <xsl:element                name = "KeyPointsList">
       <xsl:attribute             name = "Style">
        <xsl:text>bullet</xsl:text>
       </xsl:attribute>

       <xsl:for-each            select = "SummarySection">
        <xsl:if                   test = "KeyPoint">
         <xsl:element             name = "ListItem">
          <xsl:apply-templates  select = "KeyPoint"
                                  mode = "copy"/>

          <xsl:if                 test = "SummarySection/KeyPoint">
           <xsl:element           name = "KeyPointsList">
            <xsl:attribute        name = "Style">
             <xsl:text>dash</xsl:text>
            </xsl:attribute>
            <xsl:for-each       select = "SummarySection">
             <xsl:apply-templates
                                select = "Title"
                                  mode = "copy"/>
             <xsl:element         name = "ListItem">
              <xsl:apply-templates
                                select = "KeyPoint"
                                  mode = "copy"/>
             </xsl:element>
            </xsl:for-each>
           </xsl:element>
          </xsl:if>
         </xsl:element>
        </xsl:if>
       </xsl:for-each>
      </xsl:element>
     </xsl:element>


    <!--
    ============================================================
    copy summary sections and add references at the end of each
    section
    ============================================================ -->
    <xsl:apply-templates        select = "."
                                  mode = "copy"/>

    <xsl:apply-templates        select = "PdqKey"
                                  mode = "copy"/>
   </xsl:for-each>

    <xsl:element                  name = "GlossaryTerms">
     <xsl:for-each              select = "//GlossaryTermRef">
      <xsl:element                name = "GlossaryTerm">
       <xsl:element               name = "GlossaryTermRef">
        <xsl:apply-templates    select = "GlossaryText"
                                  mode = "copy"/>
        <xsl:apply-templates    select = "Dictionary"
                                  mode = "copy"/>
        <xsl:apply-templates    select = "Audience"
                                  mode = "copy"/>
       </xsl:element>

       <xsl:variable              name = "defID"
                                select = "@cdr:href"/>

       <xsl:variable              name = "defInfo"
                                select = "document(concat('cdrx:', $defID,
                                                          '/last'))"/>
       <xsl:variable              name = "conceptID"
                                select = "$defInfo/GlossaryTermName/
                                          GlossaryTermConcept/@cdr:ref"/>

       <xsl:variable              name = "conceptInfo"
                                select = "document(concat('cdrx:', $conceptID,
                                                          '/last'))"/>

       <xsl:choose>
        <!-- English -->
        <xsl:when                 test = "$sumLanguage = 'EN'">
         <xsl:element             name = "GlossaryTermName">
          <xsl:value-of         select = "$defInfo/GlossaryTermName/
                                          TermName/
                                          TermNameString"/>
         </xsl:element>
         <xsl:copy-of           select = "$defInfo/GlossaryTermName/
                                           ReplacementText"/>
         <xsl:element             name = "GlossaryTermConcept">
          <!--
          The Genetics Summaries are using the definitions for the HP
          audience instead of Patient (English only)
          The IACT Summaries are using the HP definitions if they
          exist. If no HP definition is available the patient definition
          is being used.
          =========================================================== -->
          <xsl:choose>
           <xsl:when              test = "$sumAudience = 'Health professional'">
            <xsl:choose>
             <xsl:when            test = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TermDefinition
                                             [Audience
                                                = 'Health professional']">
              <xsl:copy-of      select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TermDefinition
                                             [Audience
                                                = 'Health professional']"/>
             </xsl:when>
             <xsl:otherwise>
              <xsl:copy-of      select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TermDefinition
                                             [Audience = 'Patient'
                                              and
                                              Dictionary = 'Cancer.gov']"/>
             </xsl:otherwise>
            </xsl:choose>
           </xsl:when>
           <xsl:otherwise>
           <!-- Patient -->
            <xsl:copy-of        select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TermDefinition
                                             [Audience = 'Patient'
                                              and
                                              Dictionary = 'Cancer.gov']"/>
           </xsl:otherwise>
          </xsl:choose>
         </xsl:element>
        </xsl:when>

        <!-- Spanish -->
        <xsl:otherwise>
         <xsl:element             name = "GlossaryTermName">
          <xsl:value-of         select = "$defInfo/GlossaryTermName/
                                           TranslatedName/
                                           TermNameString"/>
         </xsl:element>
         <xsl:copy-of           select = "$defInfo/GlossaryTermName/
                                           ReplacementText"/>
         <xsl:element             name = "GlossaryTermConcept">
          <!--
          The Genetics Summaries are using the definitions for the HP
          audience instead of Patient (English only)
          The IACT Summaries are using the HP definitions if they
          exist. If no HP definition is available the patient definition
          is being used.
          =========================================================== -->
          <xsl:choose>
           <!-- HP -->
           <xsl:when              test = "$sumAudience = 'Health professional'">
            <xsl:choose>
             <xsl:when            test = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TranslatedTermDefinition
                                             [Audience
                                                = 'Health professional']">
              <xsl:copy-of      select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TranslatedTermDefinition
                                             [Audience
                                                = 'Health professional']"/>
             </xsl:when>
             <xsl:otherwise>
              <xsl:copy-of      select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TranslatedTermDefinition
                                             [Audience = 'Patient'
                                              and
                                              Dictionary = 'Cancer.gov']"/>
             </xsl:otherwise>
            </xsl:choose>
           </xsl:when>
           <!-- Patient -->
           <xsl:otherwise>
            <xsl:copy-of        select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TranslatedTermDefinition
                                             [Audience = 'Patient'
                                              and
                                              Dictionary = 'Cancer.gov']"/>
           </xsl:otherwise>
          </xsl:choose>
         </xsl:element>
        </xsl:otherwise>
       </xsl:choose>

      </xsl:element>
     </xsl:for-each>
    </xsl:element>
    <xsl:element                  name = "LOETerms">
     <xsl:for-each              select = "//LOERef">
      <xsl:element                name = "LOETerm">
       <xsl:element               name = "LOERef">
        <xsl:apply-templates    select = "GlossaryText"
                                  mode = "copy"/>
        <xsl:apply-templates    select = "Dictionary"
                                  mode = "copy"/>
        <xsl:apply-templates    select = "Audience"
                                  mode = "copy"/>
       </xsl:element>

       <xsl:variable              name = "defID"
                                select = "@cdr:href"/>

       <xsl:variable              name = "defInfo"
                                select = "document(concat('cdrx:', $defID,
                                                          '/last'))"/>
       <xsl:variable              name = "conceptID"
                                select = "$defInfo/GlossaryTermName/
                                          GlossaryTermConcept/@cdr:ref"/>

       <xsl:variable              name = "conceptInfo"
                                select = "document(concat('cdrx:', $conceptID,
                                                          '/last'))"/>

       <xsl:choose>
         <xsl:when                test = "/Summary/
                                           SummaryMetaData/
                                           SummaryLanguage = 'English'">
          <xsl:element            name = "GlossaryTermName">
           <xsl:value-of        select = "$defInfo/GlossaryTermName/
                                          TermName/
                                          TermNameString"/>
          </xsl:element>
          <xsl:copy-of          select = "$defInfo/GlossaryTermName/
                                           ReplacementText"/>
          <xsl:element            name = "GlossaryTermConcept">
           <!--
           The Genetics Summaries are using the definitions for the HP
           audience instead of Patient (English only)
           =========================================================== -->
           <xsl:choose>
            <xsl:when             test = "$sumAudience = 'Health professional'">
             <xsl:copy-of       select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TermDefinition
                                             [Audience
                                                = 'Health professional']"/>
            </xsl:when>
            <xsl:otherwise>
             <xsl:copy-of       select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TermDefinition
                                             [Audience = 'Patient'
                                              and
                                              Dictionary = 'Cancer.gov']"/>
            </xsl:otherwise>
           </xsl:choose>
          </xsl:element>
         </xsl:when>
         <xsl:otherwise>
          <xsl:element            name = "GlossaryTermName">
           <xsl:value-of        select = "$defInfo/GlossaryTermName/
                                           TranslatedName/
                                           TermNameString"/>
          </xsl:element>
          <xsl:copy-of          select = "$defInfo/GlossaryTermName/
                                           ReplacementText"/>
          <xsl:element            name = "GlossaryTermConcept">
           <xsl:copy-of         select = "$conceptInfo/
                                           GlossaryTermConcept/
                                           TranslatedTermDefinition
                                              [Audience = $sumAudience]"/>
          </xsl:element>
         </xsl:otherwise>
        </xsl:choose>
      </xsl:element>
     </xsl:for-each>
    </xsl:element>
  </xsl:copy>
 </xsl:template>


 <!--
 =================================================================
 ================================================================= -->
 <xsl:template                   match = "SummaryFragmentRef"
                                  mode = "copy">
   <xsl:element                   name = "{name()}">
    <xsl:attribute                name = "cdr:href">
     <!--
     If the cdr:href is identical to the main doc ID this is an
     internal link: keep the link as-is
     ============================================================== -->
     <xsl:choose>
      <xsl:when                   test = "substring-before(@cdr:href, '#') =
                                            /Summary/DocId">
       <xsl:value-of            select = "@cdr:href"/>
      </xsl:when>
      <xsl:otherwise>
       <xsl:choose>
        <!--
        If the cdr:href is within a module pointing to the main doc
        add the main doc's CDR-ID so we can correctly create the
        internal link
        ============================================================== -->
        <xsl:when                 test = "ancestor::SummarySection/@cdr:ref
                                          = substring-before(@cdr:href, '#')">
         <xsl:value-of          select = "concat(/Summary/DocId,
                                                 '#_sm_',
                                                 translate(@cdr:href, '#', ''))"/>
        </xsl:when>
        <!--
        If this is a fragment link to another document keep as-is
        ============================================================== -->
        <xsl:otherwise>
         <xsl:value-of            select = "@cdr:href"/>
        </xsl:otherwise>
       </xsl:choose>
      </xsl:otherwise>
     </xsl:choose>
    </xsl:attribute>
   <xsl:apply-templates        mode = "copy"/>
   </xsl:element>
 </xsl:template>


 <!--
 =================================================================
 Default Template rule used to do XML to XML transformations which
 copies any attribute node, or node that is child of of something
 ================================================================= -->
 <xsl:template                   match = "@*|node()"
                                  mode = "copy">
  <xsl:copy>
   <xsl:apply-templates         select = "@*"
                                  mode = "copy"/>
   <xsl:apply-templates           mode = "copy"/>
  </xsl:copy>
 </xsl:template>
</xsl:transform>
