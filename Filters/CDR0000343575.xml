<?xml      version = "1.0"?>
<!-- Filter title: Module: InScopeProtocol HP Identification -->
<!--
================================================================
$Id$

Display the Identification Information
Written by Cheryl Burg

================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
               exclude-result-prefixes = "cdr">
 
 <!-- 
 ==============================================================
 Display PDQ Key
 =============================================================== --> 
 <xsl:template                   match = "PdqKey">
  <span class="big">Identification Information</span>
  <br />
  <table        xsl:use-attribute-sets = "table"> 
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <span class="bul">PDQ ID</span>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "."/>
    </td>
   </tr>
  </table>
 </xsl:template>


 <!-- 
 ====================================================================
 Display Protocol Processing Details
 A duplicate ProcessingDetails template exists - can we delete this?
 ==================================================================== --> 
 <xsl:template                   match = "ProtocolProcessingDetailsXXX">
  <xsl:if                         test = "ProcessingStatuses">
   <span class="big">Protocol Processing Details</span>
   <br />
  </xsl:if>
  <xsl:apply-templates          select = "ProcessingStatuses/
                                          ProcessingStatusInfo"/>

  <xsl:if                         test = "MissingRequiredInformation">
   <table       xsl:use-attribute-sets = "table"> 
    <tr>
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b>Missing Information</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:for-each             select = "MissingRequiredInformation/
                                           MissingInformation">
       <xsl:value-of            select = "."/>
       <br/>
      </xsl:for-each>
     </td>
    </tr>
   </table>  
   <p/>
  </xsl:if>
 </xsl:template>


 <!-- 
 ===================================================================
 Display Protocol Processing Details
 =================================================================== --> 
 <xsl:template                   match = "ProcessingStatusInfo">
  <table        xsl:use-attribute-sets = "table"> 
   <tr>
    <td         xsl:use-attribute-sets = "cell1iof2">
    </td>
    <td         xsl:use-attribute-sets = "cell2iof2">
     <b>Processing Status</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "ProcessingStatus"/>
    </td>
   </tr>
   <xsl:if                        test = "StartDateTime">
    <tr>
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b>Start Date</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "StartDateTime"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "EndDateTime">
    <tr>
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b>End Date</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "EndDateTime"/>
     </td>
    </tr>
   </xsl:if>
   <tr>
    <td         xsl:use-attribute-sets = "cell1iof2">
    </td>
    <td         xsl:use-attribute-sets = "cell2iof2">
     <b>User Name</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "User"/>
    </td>
   </tr>
   <xsl:if                        test = "Comment">
    <tr>
     <td        xsl:use-attribute-sets = "cell1iof2">
     </td>
     <td        xsl:use-attribute-sets = "cell2iof2">
      <b>Comment</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "Comment"/>
     </td>
    </tr>
      <xsl:apply-templates      select = "Comment"
                                  mode = "withAttribute">
       <xsl:with-param            name = "label"
                                select = "'Status Comment'"/>
      </xsl:apply-templates>
   </xsl:if>
  </table>
  <p/>
 </xsl:template>


 <!-- 
 ==============================================================
 Display PDQ Key
 =============================================================== --> 
 <xsl:template                   match = "CTGovDuplicate">
  <table        xsl:use-attribute-sets = "table"> 
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <span class="bul">CTGov Duplicate</span>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "."/>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>


 <!-- 
 ================================================================
 Display the Primary ID and Other IDs and ID Types, Comments
 =============================================================== -->
 <xsl:template                  match  = "PrimaryID">
  <xsl:if                         test = "not(../../PdqKey)">
   <span class="big">Identification Information</span>
   <br />
  </xsl:if>
  <table        xsl:use-attribute-sets = "table"> 
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:choose>
      <xsl:when                   test = "not(../../PdqKey)">
       <span class="bul">Primary ID</span>
      </xsl:when>
      <xsl:otherwise>
       <b>Primary ID</b>
      </xsl:otherwise>
     </xsl:choose>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates       select = "IDString"/>
     <br />
    </td>
   </tr>
   <xsl:apply-templates         select = "Comment"
                                  mode = "withAttribute">
    <xsl:with-param               name = "label"
                                select = "'ID Comment'"/>
   </xsl:apply-templates>
  </table>
  <p />
 </xsl:template>


 <!--
 ====================================================================
 Template to display OtherID information
 ==================================================================== -->
 <xsl:template                   match = "OtherID"> 
  <table        xsl:use-attribute-sets = "table"> 
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <span class="bul">Other ID</span>
    </td>
   </tr>
  </table>

  <table        xsl:use-attribute-sets = "table"> 
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>ID Type</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "IDType"/>
    </td>
   </tr>
  </table>

  <table        xsl:use-attribute-sets = "table"> 
   <tr> 
    <td         xsl:use-attribute-sets = "cell1of2">
     <b>ID Number</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "IDString"/>
    </td>
   </tr>
   <xsl:if                        test = "Comment">
    <xsl:apply-templates        select = "Comment"
                                  mode = "withAttribute">
     <xsl:with-param              name = "label"
                                select = "'OID Comment'"/>
    </xsl:apply-templates>
   </xsl:if>
  </table>
  <p />
 </xsl:template>
 
 
 <!-- 
 ==============================================================
 Display the CTGov Transfer Info
 =============================================================== --> 
 <xsl:template                   match = "CTGovOwnershipTransferInfo">
  <span class="big">CTGov Ownership Transfer Information</span>
  <br />
  <table        xsl:use-attribute-sets = "table"> 
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <span class="bold">Owner Organization</span>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "CTGovOwnerOrganization"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <span class="bold">PRS User Name</span>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "PRSUserName"/>
    </td>
   </tr>
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <span class="bold">Transfer Date</span>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "CTGovOwnershipTransferDate"/>
    </td>
   </tr>
   <xsl:apply-templates         select = "Comment"
                                  mode = "withAttribute">
    <xsl:with-param               name = "label"
                                select = "'Ownership Transfer Comment'"/>
   </xsl:apply-templates>
  </table>
  <p />
 </xsl:template>


 <!-- 
 ====================================================================
 Display Protocol Phase
 ==================================================================== -->
 <xsl:template                   match = "ProtocolPhase">
  <table        xsl:use-attribute-sets = "table"> 
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:if                      test = "not(
                                             preceding-sibling::ProtocolPhase)">
      <span class="big">Protocol Phase</span>
     </xsl:if>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates/>
    </td>
   </tr>
  </table>
  <xsl:if                         test = "following-sibling::ProtocolDesign">
   <br />
  </xsl:if>
 </xsl:template>


 <!-- 
 ====================================================================
 Display the Expected Enrollment
 ==================================================================== -->
 <xsl:template                   match = "ExpectedEnrollment">
  <table        xsl:use-attribute-sets = "table"> 
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <span class="big">Expected Enrollment</span>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates/>
    </td>
   </tr>
  </table>
  <p/>
 </xsl:template>


 <!-- 
 ====================================================================
 Display Protocol Design
 ==================================================================== -->
 <xsl:template                   match = "ProtocolDesign">
  <table        xsl:use-attribute-sets = "table"> 
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
     <xsl:if                      test = "not(
                                            preceding-sibling::ProtocolDesign)">
      <span class="big">Protocol Design</span>
     </xsl:if>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:apply-templates/>
    </td>
   </tr>
  </table>
 </xsl:template>

 <!-- 
 ====================================================================
 Display StudyType and StudyCategory
 ==================================================================== -->
 <xsl:template                   match = "ProtocolDetail">
  <table        xsl:use-attribute-sets = "table"> 
   <tr>
    <td         xsl:use-attribute-sets = "cell1of2">
      <b>Study Type</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of              select = "StudyType"/>
    </td>
   </tr>
   <xsl:apply-templates         select = "StudyCategory"/>
  </table>
 </xsl:template>

 <!-- 
 ====================================================================
 Display StudyCategory Type and Name
 ==================================================================== -->
 <xsl:template                   match = "StudyCategory">
  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
    <b>Study Category Type</b>
   </td>
   <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of             select = "StudyCategoryType"/>
   </td>
  </tr>
  <tr>
   <td          xsl:use-attribute-sets = "cell1of2">
    <b>Study Category Name</b>
   </td>
   <td         xsl:use-attribute-sets = "cell2of2">
     <xsl:value-of             select = "StudyCategoryName"/>
   </td>
  </tr>
 </xsl:template>     

</xsl:transform>
