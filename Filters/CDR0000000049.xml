<CdrDoc Type='Filter' Id='CDR0000000049'>
<CdrDocCtl>
<DocValStatus readonly="yes">U</DocValStatus>
<DocActiveStatus readonly="yes">A</DocActiveStatus>
<DocTitle readonly="yes">DocTitle for InScopeProtocol</DocTitle>
<ReadyForReview readonly="yes">N</ReadyForReview>
</CdrDocCtl>
<CdrDocXml><![CDATA[<?xml version="1.0"?>
<xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="1.0"
                xmlns:cdr="cips.nci.nih.gov/cdr">
                <xsl:output method="text"/>

      <!--Filter written by C.Burg - 8/29/2001 -->
  <!-- This program is a filter to display the health professional
        protocol titles -->
   <xsl:template match="InScopeProtocol">
      
   
<!--<xsl:variable name="PIDs" select="concat(ProtocolIDs/PrimaryID/IDString,';',ProtocolIDs/OtherID/IDString,';',ProtocolTitle[@Type='Professional'])"/>
<xsl:value-of select="substring($PIDs,1,255)"/>-->
<!--<xsl:variable name="Oid"/>-->
<xsl:variable name="PID">
<xsl:apply-templates select="ProtocolIDs/PrimaryID/IDString"/>;<xsl:text/>
</xsl:variable>
<xsl:variable name="OID">
<xsl:if test="ProtocolIDs/OtherID">
<xsl:for-each select="ProtocolIDs/OtherID">
<xsl:value-of select="IDString"/>;<xsl:text/>
</xsl:for-each>
</xsl:if>
</xsl:variable>
<xsl:variable name="POFT">
<xsl:apply-templates select="ProtocolTitle[@Type='Professional']"/>
</xsl:variable>
<xsl:variable name="docTit">
<xsl:value-of select="concat($PID,$OID,$POFT)"/>
</xsl:variable>
<xsl:value-of select="substring($docTit,1,255)"/>
</xsl:template>
</xsl:transform>]]>
</CdrDocXml>
</CdrDoc>