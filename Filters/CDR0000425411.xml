<?xml version="1.0"?>
<!-- $Id$ -->
<!-- Filter title: Global Change: Delete Participating Org -->

 <!-- ===============================================================
 Delete an organization site from an InScopeProtocol document.

                                        Author: Alan Meyer
                                          Date: March, 2005
 ================================================================ -->
<xsl:transform       xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                     xmlns:cdr = "cips.nci.nih.gov/cdr"
                       version = "1.0">

 <xsl:output            method = "xml"/>
 <!-- ===============================================================
 Passed parameters:
    orgSiteId        - CDR Doc ID of organization to be deleted.
                       Requires full "CDR0000012345" format.

    leadOrgId        - Optional CDR Doc ID of a lead organization.  If
                       present, only delete the OrgSite if it is found
                       under this lead organization.  The leadOrgId
                       may optionally include a fragment identifier.
                         "CDR0000012345" or "CDR0000012345#F1"

    piId             - Optional CDR Doc ID of a principal investigator
                       at this org site.  If present, only delete the
                       OrgSite if it is found with this principal
                       investigator.  The piId may optionally include a
                       fragment identifier.
                         "CDR0000012345" or "CDR0000012345#F1"

 If fragment identifiers are included in a leadOrgId or piId, there must be a
 full match on the doc ID plus fragment id to consider that the data in the
 document matches the passed parameters.

 If no fragment identifiers are included, then matching only takes place up
 to the end of the document ID portion of the CDR Doc ID.

 ================================================================ -->
 <xsl:param               name = "orgSiteId"/>
 <xsl:param               name = "leadOrgId"/>
 <xsl:param               name = "piId"/>

 <xsl:variable            name = "leadOrgLen"
                        select = "string-length($leadOrgId)"/>
 <xsl:variable            name = "piLen"
                        select = "string-length($piId)"/>

 <xsl:template           match = "/">
  <xsl:apply-templates/>
 </xsl:template>

 <!-- ===============================================================
 Default rule, copy all document elements to output.
 ================================================================ -->
 <xsl:template            match = "@*|comment()|*|
                                   processing-instruction()|text()">
  <xsl:copy>
   <xsl:apply-templates  select = "@*|comment()|*|
                                   processing-instruction()|text()"/>
  </xsl:copy>
 </xsl:template>

 <!-- ===============================================================
 Rule for organization sites.

 Search relevant info to see if it's one we need to delete.  If so,
 do nothing.  Else copy it to the output.
 ================================================================ -->
 <xsl:template            match = "/InScopeProtocol/ProtocolAdminInfo
                                   /ProtocolLeadOrg/ProtocolSites/OrgSite">

  <!-- If it's our organization to delete -->
  <xsl:choose>
   <xsl:when               test = "OrgSiteID/@cdr:ref=$orgSiteId">

    <xsl:choose>

      <!-- Copy if lead org ID and no match -->
      <xsl:when            test = "$leadOrgId and not(substring(
                                       ../../LeadOrganizationID/@cdr:ref,
                                       1, $leadOrgLen) = $leadOrgId)">
        <xsl:copy-of     select = "."/>
      </xsl:when>

      <!-- If principal investigator matches but there's more than one PI 
           for this OrgSite -->
      <xsl:when            test = "$piId and count(
                                        OrgSiteContact/SpecificPerson
                                        [Role='Principal investigator']) > 1
                                    and
                                        OrgSiteContact/SpecificPerson/
                                        Person[substring(@cdr:ref, 1, $piLen)
                                               = $piId]">
        <!-- Abort transformation and warn user -->
        <xsl:message  terminate = 'yes'>
          More than one principal investigator for this OrgSite
        </xsl:message>
      </xsl:when>

      <!-- Copy if principal investigator and no match.
           To get here, there must only be one PI for this OrgSite,
           or else there's more than one but none of them match our PI -->
      <xsl:when            test = "$piId and not(
                                     substring(OrgSiteContact/SpecificPerson/
                                             Person/@cdr:ref, 1, $piLen) =
                                             $piId
                                    and
                                             OrgSiteContact/SpecificPerson/
                                             Role = 'Principal investigator'
                                   )">
        <xsl:copy-of     select = "."/>
      </xsl:when>

      <!-- If here, passed all the tests.  Do no copy -->
      <xsl:otherwise/>
    </xsl:choose>

   </xsl:when>

   <!-- Else this is some other OrgSite, not one matching our $orgSiteId -->
   <xsl:otherwise>
     <xsl:copy-of     select = "."/>
   </xsl:otherwise>

  </xsl:choose>

 </xsl:template>

</xsl:transform>
