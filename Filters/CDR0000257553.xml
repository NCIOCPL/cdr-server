<?xml version="1.0" ?>
<!-- Filter title: Glossary Term Name with Concept QC Report Filter -->
<!--
================================================================

Filter to display Glossary Term Name including Concept
Volker Englisch         2008-11-13

================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "html"
                              encoding = "UTF-8"/>

 <xsl:include   href = "cdr:name:Module: Attribute Sets"/>
 <xsl:include   href = "cdr:name:Module: InLine Markup Formatter"/>
 <xsl:include   href = "cdr:name:Module: STYLE Default"/>
 <xsl:include   href = "cdr:name:Module: STYLE RS Insertion Deletion"/>

 <xsl:variable                    name = "docID"
                                select = "document('cdrutil:/docid')"/>
 <xsl:variable                    name = "intID"
                                select = "concat('',
                                           number(
                                           substring-after($docID, 'CDR')))"/>
 <xsl:variable                    name = "whoAmI"
                                select = "'GlossaryTermName'"/>
 <xsl:variable                    name = "sqlQuery">
     SELECT active_status
       FROM document
      WHERE id = ?
 </xsl:variable>
 <xsl:variable                    name = "dateTime"
                                select = "document('cdrutil:/date')"/>

 <!--
 Note: Don't perform a normalize-space here since it would convert
       the resulting node into a string
 ================================================================== -->
 <xsl:variable                    name = "queryRows"
                                select = "document(cdr:escape-uri(
                                           concat('cdrutil:/sql-query/',
                                                   $sqlQuery,
                                                   '~',
                                                   $intID)))"/>
 <xsl:variable                    name = "isBlocked">
  <xsl:value-of                 select = "$queryRows
                                          /SqlResult
                                          /row/col"/>
 </xsl:variable>


 <!--
 ====================================================================
 This program is a filter to create a Glossary term Concept QC Report
 ==================================================================== -->
 <xsl:template                   match = "/">
  <xsl:text    disable-output-escaping ='yes'>&lt;!DOCTYPE html&gt;</xsl:text>
  <xsl:element                    name = "html">
   <xsl:element                   name = "head">
    <xsl:variable                 name = "cdrdocs"
                                select = "document('cdrx:/*/CdrCtl')"/>
    <xsl:element                  name = "title">
     <xsl:value-of              select = "concat('CDR',
                                           number(
                                           substring-after($docID, 'CDR')))"/>
     <xsl:text>: </xsl:text>
     <xsl:value-of              select = "substring-before(
                                           concat($cdrdocs/CdrDocCtl/
                                                  DocTitle, ';'), ';')"/>
    </xsl:element>

    <style type='text/css'>
     <xsl:call-template           name = "defaultStyle"/>
     <xsl:call-template           name = "rsInsertionDeletionStyle"/>

     body          { font-family: Arial, Helvetica, sans-serif; }
     .attribute    { font-weight: normal;
                     font-style: italic;
                     background-color: #FFFFFF; }
     .big          { font-size: 14pt;
                     font-weight: bold; }
     .center       { text-align: center; }
     .date-header  { text-align: center;
                     font-weight: bold;
                     margin-bottom: 14px; }
     .name         { color: blue;
                     font-weight: bold;
                     background-color: #EEEEEE; }
     .blocked      { color: red; }
     table         { empty-cells: show; }
     td.cellDef    { border: 1px solid grey; padding: 2px; }
     .term-name    { background-color: yellow; }
     .blank-row td { padding: 12px;
                     border: 0; }
    </style>
   </xsl:element>

   <xsl:apply-templates         select = "GlossaryTermName"/>

  </xsl:element>
 </xsl:template>


 <!--
 ==============================================================
 Generate the HTML for the glossary term QC Report
 ============================================================== -->
 <xsl:template                   match = "GlossaryTermName">
  <BODY>
  <!--
  =============================================================
  Display Report heading and subheading
  ============================================================= -->
  <div class="center">
   <span class="big">
    <xsl:text>Glossary Term Name with Concept</xsl:text>
    <br/>
    <xsl:text>QC Report</xsl:text>
   </span>
  </div>
  <div class="date-header">
   <xsl:call-template             name = "dateTimeHeader">
    <xsl:with-param               name = "dateTime"
                                select = "$dateTime"/>
   </xsl:call-template>
  </div>

  <!--
  ====================================================================
  Display CDR ID
  ==================================================================== -->
  <span class="big">
   <xsl:choose>
    <xsl:when                     test = "not($isBlocked = 'I')">
     <xsl:value-of              select = "concat('CDR',
                                          number(
                                          substring-after($docID, 'CDR')))"/>
    </xsl:when>
    <xsl:otherwise>
     <span class="blocked">
      <xsl:value-of             select = "concat('CDR',
                                          number(
                                          substring-after($docID, 'CDR')))"/>

      <xsl:text> [BLOCKED]</xsl:text>
     </span>
    </xsl:otherwise>
   </xsl:choose>
  </span>
  <p/>

  <!--
  ===============================================================
  Display English Glossary Term Name Information with Concept
  =============================================================== -->
  <xsl:for-each                 select = "GlossaryTermConcept/
                                          TermDefinition">
   <span class="big">
    <xsl:text>English - </xsl:text>
    <xsl:value-of               select = "Audience"/>
   </span>
   <xsl:apply-templates         select = "../../TermName">
    <xsl:with-param               name = "termAudience"
                                select = "Audience"/>
   </xsl:apply-templates>
  </xsl:for-each>

  <!--
  Adding remaining GlossaryTermName information
  =============================================== -->
  <table        xsl:use-attribute-sets = "table">
   <xsl:if                        test = "TermNameStatus">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Status</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TermNameStatus"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "TermNameStatusDate">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Status Date</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TermNameStatusDate"/>
     </td>
    </tr>
   </xsl:if>
  </table>
  <br/>
  <hr width="50%"/>
  <br/>

  <!--
  Display Media shared between English and Spanish
  ======================================================== -->
  <table        xsl:use-attribute-sets = "table">
   <xsl:if                        test = "GlossaryTermConcept/
                                          MediaLink">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Media Link</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:apply-templates      select = "GlossaryTermConcept/
                                         MediaLink/
                                         MediaID"
                                  mode = "gtc"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "GlossaryTermConcept/
                                          EmbeddedVideo">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Video Link</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:apply-templates      select = "GlossaryTermConcept/
                                         EmbeddedVideo/
                                         MediaID"
                                  mode = "gtc"/>
     </td>
    </tr>
   </xsl:if>
  </table>

  <!--
  ===============================================================
  Display Spanish Glossary Term Name Information with Concept
  =============================================================== -->
  <xsl:if                         test = "TranslatedName">

   <xsl:for-each                select = "GlossaryTermConcept/
                                          TranslatedTermDefinition">
    <span class="big">
     <xsl:text>Spanish - </xsl:text>
     <xsl:value-of              select = "Audience"/>
    </span>
    <xsl:apply-templates        select = "../../
                                         TranslatedName[not(@NameType)]">
     <xsl:with-param              name = "termAudience"
                                select = "Audience"/>
    </xsl:apply-templates>
   </xsl:for-each>
  </xsl:if>

  <br/>

  </BODY>
 </xsl:template>


 <!--
 ==================================================================
 Template to display individual TermDefinitions (English)
 ================================================================== -->
 <xsl:template                   match = "TermName">
  <xsl:param                      name = "termAudience"/>

  <table        xsl:use-attribute-sets = "table">
   <tr class="name">
    <td         xsl:use-attribute-sets = "cell1of2" class="cellDef">
     <b>Name</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2" class="cellDef">
     <xsl:apply-templates       select = "TermNameString"/>
    </td>
   </tr>

  <!--
  Displaying Pronunciation immediately after term name
  ==================================================== -->
  <xsl:if                         test = "TermPronunciation">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Term Pronunciation</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:apply-templates      select = "TermPronunciation"/>
     </td>
    </tr>
  </xsl:if>


   <xsl:apply-templates         select = "//GlossaryTermConcept">
    <xsl:with-param               name = "termAudience"
                                select = "$termAudience"/>
   </xsl:apply-templates>
  </table>
  <p/>
 </xsl:template>


 <!--
 ==================================================================
 Template to display the translated Term names
 ================================================================== -->
 <xsl:template                   match = "TranslatedName">
  <xsl:param                      name = "termAudience"/>
  <table        xsl:use-attribute-sets = "table">
   <tr class="name">
    <td         xsl:use-attribute-sets = "cell1of2" class="cellDef">
     <b>Name</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2" class="cellDef">
     <xsl:apply-templates       select = "TermNameString"/>
     <xsl:if                      test = "../TranslatedName[@NameType]">
      <xsl:text> [alternate:</xsl:text>
      <xsl:for-each             select = "../TranslatedName[@NameType]">
       <xsl:text> </xsl:text>
       <xsl:value-of            select = "TermNameString"/>
      </xsl:for-each>
      <xsl:text>]</xsl:text>
     </xsl:if>
    </td>
   </tr>

   <xsl:apply-templates         select = "//GlossaryTermConcept">
    <xsl:with-param               name = "termAudience"
                                select = "$termAudience"/>
    <xsl:with-param               name = "lang"
                                select = "@language"/>
   </xsl:apply-templates>

  </table>

  <table        xsl:use-attribute-sets = "table">
   <xsl:if                        test = "TranslatedNameStatus">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Status</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TranslatedNameStatus"/>
     </td>
    </tr>
   </xsl:if>
   <xsl:if                        test = "TranslatedNameStatusDate">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Status Date</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:value-of             select = "TranslatedNameStatusDate"/>
     </td>
    </tr>
   </xsl:if>
  </table>
  <br/>
 </xsl:template>


 <!--
 =======================================================================
 Template for Admin Information Comments
 ======================================================================= -->
 <xsl:template                   match = "GlossaryTermConcept">
  <xsl:param                      name = "termAudience"/>
  <xsl:param                      name = "lang"
                                select = "'en'"/>

  <!-- We don't want to pick up the concept definition from the related Glossary
       only from the concept document itself
       ========================================================================= -->
  <xsl:if                         test = "not(ancestor::RelatedGlossaryTermNameLink)">
   <tr class="defTab">
    <td         xsl:use-attribute-sets = "cell1of2" class="cellDef">
     <b>Definition</b>
    </td>
    <td         xsl:use-attribute-sets = "cell2of2" class="cellDef">
     <xsl:choose>
      <xsl:when                   test = "$lang = 'en'">
       <xsl:apply-templates     select = "TermDefinition
                                            [Audience = $termAudience]/
                                            DefinitionText"/>
      </xsl:when>
      <xsl:when                   test = "$lang = 'es'">
       <xsl:apply-templates     select = "TranslatedTermDefinition
                                            [Audience = $termAudience]/
                                            DefinitionText"/>
      </xsl:when>
     </xsl:choose>
    </td>
   </tr>

   <tr class="blank-row">
    <td colspan="2"></td>
   </tr>

   <xsl:if                        test = "TermDefinition
                                            [Audience = $termAudience]/
                                            MediaLink">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Media Link</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:choose>
       <xsl:when                  test = "$lang = 'en'">
        <xsl:apply-templates    select = "TermDefinition
                                            [Audience = $termAudience]/
                                            MediaLink/
                                            MediaID"
                                  mode = "gtc"/>
       </xsl:when>
       <xsl:otherwise>
        <xsl:apply-templates    select = "TranslatedTermDefinition
                                            [Audience = $termAudience]/
                                            MediaLink/
                                            MediaID"
                                  mode = "gtc"/>
       </xsl:otherwise>
      </xsl:choose>

     </td>
    </tr>
   </xsl:if>

   <xsl:if                        test = "TermDefinition
                                            [Audience = $termAudience]/
                                            EmbeddedVideo">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Video Link</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:choose>
       <xsl:when                  test = "$lang = 'en'">
        <xsl:apply-templates    select = "TermDefinition
                                            [Audience = $termAudience]/
                                            EmbeddedVideo/
                                            MediaID"
                                  mode = "gtc"/>
       </xsl:when>
       <xsl:otherwise>
        <xsl:apply-templates    select = "TranslatedTermDefinition
                                            [Audience = $termAudience]/
                                            EmbeddedVideo/
                                            MediaID"
                                  mode = "gtc"/>
       </xsl:otherwise>
      </xsl:choose>

     </td>
    </tr>
   </xsl:if>

   <xsl:if                        test = "TermDefinition
                                            [Audience = $termAudience]/
                                            Dictionary">
    <tr>
     <td        xsl:use-attribute-sets = "cell1of2">
      <b>Dictionary</b>
     </td>
     <td        xsl:use-attribute-sets = "cell2of2">
      <xsl:apply-templates      select = "TermDefinition
                                            [Audience = $termAudience]/
                                            Dictionary"/>
     </td>
    </tr>
   </xsl:if>
  </xsl:if>
 </xsl:template>


 <!--
 ======================================================================
 We want to mark the term with some CSS within the DefinitionText
 ====================================================================== -->
 <xsl:template                   match = "AddCss">
  <span class="term-name">
   <xsl:apply-templates/>
  </span>
 </xsl:template>


 <!--
 ======================================================================
 Template to display the Replacement text and PlaceHolders
 ====================================================================== -->
 <xsl:template                   match = "ReplacementText">
  <tr>
   <td>
    <xsl:value-of               select = "@name"/>
   </td>
   <td>
    <xsl:value-of               select = "."/>
   </td>
  </tr>
 </xsl:template>

 <!--
 ===================================================================
 We need to display the Glossary Term Name/Concept report with
 insertion/deletion markup.
 =================================================================== -->
 <xsl:template                   match = "Insertion">
  <span class="insertapproved">
   <xsl:apply-templates/>
  </span>
 </xsl:template>

 <xsl:template                   match = "Deletion">
  <span class="deleteapproved">

   <xsl:apply-templates/>
  </span>

 </xsl:template>


 <!--
 ===================================================================
 We need to display the Glossary Term Name/Concept report with
 insertion/deletion markup.
 =================================================================== -->
 <xsl:template                    name = "dateTimeHeader">
  <xsl:param                      name = "dateTime"/>
  <xsl:variable                   name = "date"
                                select = "substring-before($dateTime, 'T')"/>
  <xsl:variable                   name = "time"
                                select = "substring-before(
                                            substring-after($dateTime, 'T'),
                                                                       '.')"/>

  <xsl:value-of                 select = "$date"/>
  <xsl:text> </xsl:text>
  <xsl:value-of                 select = "$time"/>
 </xsl:template>
</xsl:transform>
