<?xml      version = "1.0"?>
<!-- Filter title: Glossary Term Definition Update -->
<!--
 ================================================================
 Filter to resolve PlaceHolder elements within a GlossaryTermConcept
 definition.
 The filter is applied to a snipped of XML code created by the program
 GlossaryConceptFull.py.  The XML snipped has the following structure:
   <GlossaryTermDef>
     <TermNameString/>
     <DefinitionText>
       <Insertion or Deletion> [optional]
       <PlaceHolder/>          [optional]
     </DefinitionText>
     <GlossaryTermPlaceHolder> [optional]
       <ReplacementText/>
     </GlossaryTermPlaceHolder>
   </GlossaryTermDef>

 Written by Volker Englisch, 2008-02-27
 ================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                               version = "1.0"
                             xmlns:cdr = "cips.nci.nih.gov/cdr">

 <xsl:output                    method = "html"
                  omit-xml-declaration = "yes"/>

 <!--
 =================================================================
 Copy control information and generate current date
 ================================================================= -->
 <xsl:template                   match = "GlossaryTermDef">
  <xsl:apply-templates          select = "DefinitionText"/>

  <xsl:apply-templates          select = "Comment"
                                  mode = "withAttribute">
   <xsl:with-param                name = "label"
                                select = "'Comment'"/>
  </xsl:apply-templates>
 </xsl:template>


 <!--
 =================================================================
 Template for TermNameDef.
 Adding TermNameString so that the TermNameString element tags
 will be suppressed.  The default template would include those.
 ================================================================= -->
 <xsl:template                   match = "TermNameDef |
                                          TermNameString">
  <xsl:apply-templates/>
 </xsl:template>


 <!--
 =================================================================
 Copy control information and generate current date
 ================================================================= -->
 <xsl:template                   match = "DefinitionText">
  <tr>
   <td valign="top">
    <b>Definition</b>
   </td>
   <td>
    <xsl:apply-templates/>
    </td>
  </tr>
 </xsl:template>


 <!--
 =======================================================================
 Template for Admin Information Comments
 ======================================================================= -->
 <xsl:template                   match = "Comment"
                                  mode = "withAttribute">
  <xsl:param                      name = "label"
                                select = "'Comment'"/>

  <tr>
   <td>
    <b>
     <xsl:value-of              select = "$label"/>
    </b>
   </td>
   <td>
    <span class="attribute">
     <xsl:if                      test = "@audience">
      <xsl:text>audience=</xsl:text>
      <xsl:value-of             select = "@audience"/>
     </xsl:if>
     <xsl:if                      test = "@date">
      <xsl:text> date=</xsl:text>
      <xsl:value-of             select = "@date"/>
     </xsl:if>
     <xsl:if                      test = "@user">
      <xsl:text> user=</xsl:text>
      <xsl:value-of             select = "@user"/>
     </xsl:if>
    </span>
   </td>
  </tr>
  <tr>
   <td><xsl:text> </xsl:text></td>
   <td>
    <xsl:value-of               select = "."/>
    <p/>
   </td>
  </tr>
 </xsl:template>


 <!--
 ==============================================================
 Denormalize terminology which doesn't involve parent hierarchy.
 ============================================================== -->
 <xsl:template                   match = "PlaceHolder">
  <xsl:variable                   name = "replace"
                                select = "@name"/>

   <xsl:choose>
    <xsl:when                     test = "@name = 'TERMNAME'">
     <span class="term-normal">
     <!-- if the TermNameString is placed within insertion/deletion markup
          we will need to go one more level up to get the name for it -->
     <xsl:apply-templates       select = "../../TermNameString |
                                          ../../../TermNameString"/>
     </span>
    </xsl:when>
    <xsl:when                     test = "@name = 'CAPPEDTERMNAME'">
     <span class="term-capped">
      <xsl:text>@@</xsl:text>
      <xsl:apply-templates      select = "../../TermNameString |
                                           ../../../TermNameString"/>
      <xsl:text>@@</xsl:text>
     </span>
    </xsl:when>
    <!--
    <xsl:when                     test = "../../GlossaryTermPlaceHolder/
                                          ReplacementText[@name=$replace]">
    -->
    <xsl:when                     test = "/GlossaryTermDef/
                                            GlossaryTermPlaceHolder/
                                            ReplacementText[@name=$replace]">
     <span class="term-name">
     <xsl:apply-templates       select = "/GlossaryTermDef/
                                            GlossaryTermPlaceHolder/
                                            ReplacementText[@name=$replace]"/>
     </span>
    </xsl:when>
    <xsl:when                     test = "/GlossaryTermDef/
                                            GlossaryConceptPlaceHolder/
                                            ReplacementText[@name=$replace]">
     <span class="term-concept">
     <xsl:apply-templates       select = "/GlossaryTermDef/
                                            GlossaryConceptPlaceHolder/
                                            ReplacementText[@name=$replace]"/>
     </span>
    </xsl:when>
    <xsl:otherwise>
     <span class="term-error">
     <xsl:text>*** No Text Found ***</xsl:text>
     </span>
    </xsl:otherwise>
   </xsl:choose>
 </xsl:template>


 <!--
 ===================================================================
 We need to display the Glossary Term Name/Concept report with
 insertion/deletion markup.
 =================================================================== -->
 <xsl:template                   match = "Insertion">
  <span class="insertapproved">
   <xsl:apply-templates/>
  </span>
 </xsl:template>

 <xsl:template                   match = "Deletion">
  <span class="deleteapproved">
   <xsl:apply-templates/>
  </span>
 </xsl:template>


 <!--
 ==================================================================
 Template rule used to do XML to XML transformations which
 copies any attribute node, or node that is child of of something
 ================================================================== -->
 <xsl:template                   match = "@*|node()">
  <xsl:copy>
   <xsl:apply-templates         select = "@*|node()"/>
  </xsl:copy>
 </xsl:template>
</xsl:transform>
