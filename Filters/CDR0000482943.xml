<?xml version='1.0' encoding='utf-8'?>
<!-- $Id$ -->
<!-- Filter title: Module: Summary Denormalization -->
<!--
  BZIssue::4781 - Have certain links to unpublished docs ignored
-->
<!--
================================================================
 $Id$

 Filter to denormalize Summary elements.
 Written by Volker Englisch, 2006-04-12

 This denormalization filter is called by the Media Denorm 
 filter.  It's purpose is to identify if a Summary link is 
 referencing a reformatted patient (KeyPoints = Yes) or not
 (KeyPoints = No) in order to create the propper QC report link
 in the Media QC report.

================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
                               version = "1.0">

 <xsl:output                    method = "xml" 
                  omit-xml-declaration = "no"
                              encoding = "utf-8"/>

 <!-- 
 =================================================================
 Template to denormalize the Summary elements
 Ignore errors if the filter is run as a PublishPreview or QC 
 report.
 ================================================================= -->
 <xsl:template                   match = "Summary">
  <xsl:variable                   name = "docID" 
                                select = "@cdr:ref"/>

  <xsl:variable                   name = "docInfo"> 
   <xsl:choose>
    <xsl:when                     test = "$isPP = 'Y'
                                          or
                                          $isQC = 'Y'">
     <xsl:copy-of               select = "document(concat('cdrx:', $docID,
                                                           '/lastp'))"/>
    </xsl:when>
    <xsl:otherwise>
     <xsl:copy-of               select = "document(concat('cdr:', $docID,
                                                           '/lastp'))"/>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:variable>

  <xsl:element                    name = "Summary">
   <xsl:attribute                 name = "cdr:ref">
    <xsl:value-of               select = "@cdr:ref"/>
   </xsl:attribute>
   <Summary>
   <xsl:copy-of                  select = "$docInfo/Summary/SummaryTitle"/>
    <xsl:choose>
    <xsl:when                     test = "$docInfo//KeyPoint">
     <KeyPoints>
      <xsl:text>Yes</xsl:text>
     </KeyPoints>
    </xsl:when>
    <xsl:otherwise>
     <KeyPoints>
      <xsl:text>No</xsl:text>
     </KeyPoints>
    </xsl:otherwise>
   </xsl:choose>
   </Summary>
   XX<xsl:value-of select = "$isQC"/>XX
  </xsl:element>
 </xsl:template>
</xsl:transform>
