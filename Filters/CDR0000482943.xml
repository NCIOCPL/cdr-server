<?xml version="1.0" ?>
<!-- Filter title: Module: Summary Denormalization -->
<!--
  BZIssue::4781 - Have certain links to unpublished docs ignored
-->
<!--
================================================================

 Filter to denormalize Summary elements.
 Written by Volker Englisch, 2006-04-12

 This denormalization filter is called by the Media Denorm
 filter.  It's purpose is to identify if a Summary link is
 referencing a reformatted patient (KeyPoints = Yes) or not
 (KeyPoints = No) in order to create the propper QC report link
 in the Media QC report.

 All patient summaries have KeyPoints but those KeyPoints will
 be converted into Title elements as part of the SVPC project.
 We will need the audience carried forward to identify what
 type of link will need to be created.
================================================================ -->
<xsl:transform               xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                             xmlns:cdr = "cips.nci.nih.gov/cdr"
                               version = "1.0">

 <xsl:output                    method = "xml"
                  omit-xml-declaration = "no"
                              encoding = "utf-8"/>

 <!--
 =================================================================
 Template to denormalize the Summary elements
 ================================================================= -->
 <xsl:template                   match = "Summary">
  <xsl:variable                   name = "docID"
                                select = "@cdr:ref"/>

  <xsl:variable                   name = "docInfo"
                                select = "document(concat('cdr:', $docID,
                                                          '/lastp'))"/>
  <xsl:element                    name = "Summary">
   <xsl:attribute                 name = "cdr:ref">
    <xsl:value-of               select = "@cdr:ref"/>
   </xsl:attribute>

   <xsl:element                   name = "Summary">
    <xsl:if                       test = "$docInfo/Summary/@SVPC">
     <xsl:copy-of               select = "$docInfo/Summary/@SVPC"/>
    </xsl:if>
    <xsl:copy-of                select = "$docInfo/Summary
                                                  /SummaryTitle"/>
    <xsl:copy-of                select = "$docInfo/Summary
                                                  /SummaryMetaData
                                                  /SummaryAudience"/>
    <xsl:choose>
    <xsl:when                     test = "$docInfo//KeyPoint">
     <xsl:element                 name = "KeyPoints">
      <xsl:text>Yes</xsl:text>
     </xsl:element>
    </xsl:when>
    <xsl:otherwise>
     <xsl:element                 name = "KeyPoints">
      <xsl:text>No</xsl:text>
     </xsl:element>
    </xsl:otherwise>
   </xsl:choose>
   </xsl:element>
  </xsl:element>
 </xsl:template>
</xsl:transform>
