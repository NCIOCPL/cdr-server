<?xml version='1.0' encoding='utf-8'?>
<!-- Filter title: CTGov Export: Remove Inline Markup -->

<!--
======================================================================
==
== $Id$
==
== Pre-filter to strip inline markup from vendor output in preparation
== for converting to exportable document for NLM's ClinicalTrials.gov.
==
====================================================================== -->

<xsl:transform           xmlns:xsl = "http://www.w3.org/1999/XSL/Transform"
                         xmlns:cdr = "cips.nci.nih.gov/cdr"
           exclude-result-prefixes = "cdr"
                           version = "1.0">

 <xsl:output                method = "xml"
              omit-xml-declaration = "yes"
                          encoding = "UTF-8"
                            indent = 'yes'/>

 <xsl:template               match = "@*|node()">
  <xsl:copy>
   <xsl:apply-templates     select = "@*"/>
   <xsl:apply-templates/>
  </xsl:copy>
 </xsl:template>

 <xsl:template               match = "Strong | Emphasis | GeneName |
                                      ScientificName | ProtocolRef |
                                      GlossaryRef | ForeignWord | TT">
  <xsl:value-of             select = "."/>
 </xsl:template>

 <!--
 ====================================================================
 Insert a caret before superscripted text.  Note that there is no
 indication in the output of how many of the following characters
 are superscripted (but fortunately there are no multi-character
 superscripts in the data, at least not at the time of this writing).
 ==================================================================== -->
 <xsl:template               match = "Superscript">
  <xsl:value-of             select = "concat('^', .)"/>
 </xsl:template>

 <!--
 ====================================================================
 Insert an underscore before subscripted text.  Note that there is 
 no indication in the output of how many of the following characters
 are subscripted (but fortunately there are no multi-character
 subscripts in the data, at least not at the time of this writing).
 ==================================================================== -->
 <xsl:template               match = "Subscript">
  <xsl:value-of             select = "concat('_', .)"/>
 </xsl:template>

 <!--
 ====================================================================
 Decorate a note with a prefix.  Assumption: Note elements contain
 no other markup.
 ==================================================================== -->
 <xsl:template               match = "Note">
  <xsl:value-of             select = "concat('NOTE: ', .)"/>
 </xsl:template>

</xsl:transform>
